[
  {
    "RowNum": 1,
    "Id": 1354,
    "Name": "GetRepairAllTotal",
    "Type": "T-SQL",
    "Sign": 65,
    "Code": "SELECT\n\tCOUNT(0) Total\nFROM (\n\tSELECT\n\t\tR.Id,\n\t\tR.AlareId,\n\t\tR.RepContent,\n\t\tR.RepCount,\n\t\tR.State,\n\t\tR.RepRemark,\n\t\tR.ReviewUserId,\n\t\tR.ReviewTime,\n\t\tR.ReviewRemark,\n\t\tR.RepUserId,\n\t\tR.RepTime,\n\t\tR.RoomNumber,\n\t\tRVU.Nickname ReviewUserName,\n\t\tRPU.Nickname RepUserName,\n\t\tAD.Name AlareName\n\tFROM\n\t\tRepair R\n\tLEFT JOIN\n\t\tBD_Users RVU\n\tON\n\t\tRVU.Id = R.ReviewUserId\n\tLEFT JOIN\n\t\tBD_Users RPU\n\tON\n\t\tRPU.Id = R.RepUserId\n\tLEFT JOIN\n\t\tBD_Dictionary AD\n\tON\n\t\tAD.Type = 'AlareType' AND AD.Value = R.AlareId\n) T\nWHERE\n\t$Filters",
    "CacheToken": "",
    "Description": "宿舍维修报表获取总条数",
    "Demo": ""
  },
  {
    "RowNum": 2,
    "Id": 1353,
    "Name": "ReadPageRepairAll",
    "Type": "T-SQL",
    "Sign": 1,
    "Code": "SELECT\n\t*\nFROM (\n\tSELECT\n\t\tROW_NUMBER()OVER(ORDER BY $Orders) RowNum,\n\t\t*\n\tFROM (\n\t\tSELECT TOP (@End)\n\t\t\t*\n\t\tFROM (\n\t\t\tSELECT\n\t\t\t\tR.Id,\n\t\t\t\tR.AlareId,\n\t\t\t\tR.RepContent,\n\t\t\t\tR.RepCount,\n\t\t\t\tR.State,\n\t\t\t\tR.RepRemark,\n\t\t\t\tR.ReviewUserId,\n\t\t\t\tR.ReviewTime,\n\t\t\t\tR.ReviewRemark,\n\t\t\t\tR.RepUserId,\n\t\t\t\tR.RepTime,\n\t\t\t\tR.RoomNumber,\n\t\t\t\tRVU.Nickname ReviewUserName,\n\t\t\t\tRPU.Nickname RepUserName,\n\t\t\t\tAD.Name AlareName\n\t\t\tFROM\n\t\t\t\tRepair R\n\t\t\tLEFT JOIN\n\t\t\t\tBD_Users RVU\n\t\t\tON\n\t\t\t\tRVU.Id = R.ReviewUserId\n\t\t\tLEFT JOIN\n\t\t\t\tBD_Users RPU\n\t\t\tON\n\t\t\t\tRPU.Id = R.RepUserId\n\t\t\tLEFT JOIN\n\t\t\t\tBD_Dictionary AD\n\t\t\tON\n\t\t\t\tAD.Type = 'AlareType' AND AD.Value = R.AlareId\n\t\t) T\n\t\tWHERE\n\t\t\t$Filters\n\t\tORDER BY\n\t\t\t$Orders\n\t)T\n)T\nWHERE T.RowNum >= @Begin",
    "CacheToken": "",
    "Description": "分页读取宿舍维修报表",
    "Demo": ""
  },
  {
    "RowNum": 3,
    "Id": 1350,
    "Name": "SetSmsToSent",
    "Type": "T-SQL",
    "Sign": 4,
    "Code": "UPDATE Sms SET IsSent = 1, SendTime = @Now WHERE Id IN ($Ids)",
    "CacheToken": "",
    "Description": "设置短信为已发送",
    "Demo": ""
  },
  {
    "RowNum": 4,
    "Id": 1349,
    "Name": "ReadAllNoSentSms",
    "Type": "T-SQL",
    "Sign": 1,
    "Code": "SELECT Id, Mobiles, Content FROM Sms WHERE IsSent = 0",
    "CacheToken": "",
    "Description": "读取所有未发送的短信",
    "Demo": ""
  },
  {
    "RowNum": 5,
    "Id": 1348,
    "Name": "CompanyDeleteAdvertising",
    "Type": "T-SQL",
    "Sign": 8,
    "Code": "DELETE MechAD WHERE Id IN ($Id) AND MechId = @UserId",
    "CacheToken": "",
    "Description": "企业用户删除广告信息",
    "Demo": ""
  },
  {
    "RowNum": 6,
    "Id": 1347,
    "Name": "APPGetCompanyAdvertisingsTotal",
    "Type": "T-SQL",
    "Sign": 65,
    "Code": "SELECT\n\tCOUNT(0) Total\nFROM (\n\tSELECT\n\t\tA.Id,\n\t\tA.Title,\n\t\tA.Describe,\n\t\tA.BankNo,\n\t\tA.Content,\n\t\tA.MechId,\n\t\tCASE WHEN A.State = 1 AND A.LastTime IS NOT NULL AND @Now > A.LastTime THEN 2 ELSE A.State END State,\n\t\tU.Nickname MechName\n\tFROM\n\t\tMechAD A\n\tLEFT JOIN\n\t\tBD_Users U\n\tON\n\t\tU.Id = A.MechId\n) T\nWHERE\n\tState = 1 AND ($Filters)",
    "CacheToken": "",
    "Description": "APP 获取企业广告数据总数",
    "Demo": ""
  },
  {
    "RowNum": 7,
    "Id": 1346,
    "Name": "APPReadPageCompanyAdvertisings",
    "Type": "T-SQL",
    "Sign": 1,
    "Code": "SELECT\n\t*\nFROM (\n\tSELECT\n\t\tROW_NUMBER()OVER(ORDER BY IsTop DESC, $Orders) RowNum,\n\t\t*\n\tFROM (\n\t\tSELECT TOP (@End)\n\t\t\t*\n\t\tFROM (\n\t\t\tSELECT\n\t\t\t\tA.Id,\n\t\t\t\tA.Title,\n\t\t\t\tA.Describe,\n\t\t\t\tA.BankNo,\n\t\t\t\tA.Content,\n\t\t\t\tA.MechId,\n\t\t\t\tA.IsTop,\n\t\t\t\tCASE WHEN A.State = 1 AND A.LastTime IS NOT NULL AND @Now > A.LastTime THEN 2 ELSE A.State END State,\n\t\t\t\tU.Nickname MechName\n\t\t\tFROM\n\t\t\t\tMechAD A\n\t\t\tLEFT JOIN\n\t\t\t\tBD_Users U\n\t\t\tON\n\t\t\t\tU.Id = A.MechId\n\t\t) T\n\t\tWHERE\n\t\t\tState = 1 AND ($Filters)\n\t\tORDER BY\n\t\t\tIsTop DESC, $Orders\n\t)T\n)T\nWHERE T.RowNum >= @Begin",
    "CacheToken": "",
    "Description": "APP 分页读取企业广告信息",
    "Demo": ""
  },
  {
    "RowNum": 8,
    "Id": 1345,
    "Name": "GetCompanyAdvertisingsTotal",
    "Type": "T-SQL",
    "Sign": 65,
    "Code": "SELECT\n\tCOUNT(0) Total\nFROM (\n\tSELECT\n\t\tA.Id,\n\t\tA.Title,\n\t\tA.Describe,\n\t\tA.BankNo,\n\t\tA.Content,\n\t\tA.MechId,\n\t\tCASE WHEN A.State = 1 AND A.LastTime IS NOT NULL AND @Now > A.LastTime THEN 2 ELSE A.State END State,\n\t\tA.CreateTime,\n\t\tA.ExamineOpinion,\n\t\tA.ExamineTime,\n\t\tA.Remark,\n\t\tA.IsTop,\n\t\tA.LastTime,\n\t\tU.Nickname MechName\n\tFROM\n\t\tMechAD A\n\tLEFT JOIN\n\t\tBD_Users U\n\tON\n\t\tU.Id = A.MechId\n\tWHERE\n\t\t(@UserType = 1 OR MechId = @UserId)\n) T\nWHERE\n\t$Filters",
    "CacheToken": "",
    "Description": "获取企业广告数据总数",
    "Demo": ""
  },
  {
    "RowNum": 9,
    "Id": 1344,
    "Name": "ReadPageCompanyAdvertisings",
    "Type": "T-SQL",
    "Sign": 1,
    "Code": "SELECT\n\t*\nFROM (\n\tSELECT\n\t\tROW_NUMBER()OVER(ORDER BY $Orders) RowNum,\n\t\t*\n\tFROM (\n\t\tSELECT TOP (@End)\n\t\t\t*\n\t\tFROM (\n\t\t\tSELECT\n\t\t\t\tA.Id,\n\t\t\t\tA.Title,\n\t\t\t\tA.Describe,\n\t\t\t\tA.BankNo,\n\t\t\t\tA.Content,\n\t\t\t\tA.MechId,\n\t\t\t\tCASE WHEN A.State = 1 AND A.LastTime IS NOT NULL AND @Now > A.LastTime THEN 2 ELSE A.State END State,\n\t\t\t\tA.CreateTime,\n\t\t\t\tA.ExamineOpinion,\n\t\t\t\tA.ExamineTime,\n\t\t\t\tA.Remark,\n\t\t\t\tA.IsTop,\n\t\t\t\tA.LastTime,\n\t\t\t\tU.Nickname MechName\n\t\t\tFROM\n\t\t\t\tMechAD A\n\t\t\tLEFT JOIN\n\t\t\t\tBD_Users U\n\t\t\tON\n\t\t\t\tU.Id = A.MechId\n\t\t\tWHERE\n\t\t\t\t(@UserType = 1 OR MechId = @UserId)\n\t\t) T\n\t\tWHERE\n\t\t\t$Filters\n\t\tORDER BY\n\t\t\t$Orders\n\t)T\n)T\nWHERE T.RowNum >= @Begin",
    "CacheToken": "",
    "Description": "分页读取企业广告信息",
    "Demo": ""
  },
  {
    "RowNum": 10,
    "Id": 1343,
    "Name": "UpdateCompanyAdvertising",
    "Type": "T-SQL",
    "Sign": 4,
    "Code": "UPDATE\n\tMechAD\nSET\n\tState = ISNULL(@State, State),\n\tIsTop = ISNULL(@IsTop, IsTop),\n\tExamineTime = CASE WHEN @State IN (1, -1) THEN @Now ELSE ExamineTime END,\n\tExamineOpinion = CASE WHEN @State IN (1, -1) THEN @ExamineOpinion ELSE ExamineOpinion END,\n\tLastTime = CASE WHEN @State = 1 THEN @LastTime ELSE LastTime END\nWHERE\n\tId IN ($Id)",
    "CacheToken": "",
    "Description": "更新企业广告信息",
    "Demo": "更新企业广告状态，企业广告审核，企业广告下架，企业广告置顶。"
  },
  {
    "RowNum": 11,
    "Id": 1342,
    "Name": "PublishCompanyAdvertising",
    "Type": "T-SQL",
    "Sign": 2,
    "Code": "INSERT MechAD(Title, Describe, BankNo, Content, MechId, State, CreateTime, ExamineTime, ExamineOpinion, Remark, IsTop, LastTime)\n\tVALUES(@Title, @Describe, @BankNo, @Content, @UserId, 0, @Now, NULL, NULL, @Remark, 0, NULL)",
    "CacheToken": "",
    "Description": "企业用户发布广告信息",
    "Demo": ""
  },
  {
    "RowNum": 12,
    "Id": 1341,
    "Name": "GetCompanysTotal",
    "Type": "T-SQL",
    "Sign": 65,
    "Code": "SELECT\n\tCOUNT(0) Total\nFROM (\n\tSELECT\n\t\tM.Id,\n\t\tM.UserId UserId_n,\n\t\tM.Address,\n\t\tM.License,\n\t\tM.Entrust,\n\t\tM.Constitution,\n\t\tM.State,\n\t\tM.ExamineOpinion,\n\t\tM.ExamineTime,\n\t\tM.Remark,\n\t\tU.UserName_c,\n\t\tU.Contact,\n\t\tU.ContactPhone,\n\t\tU.Nickname CompanyName\n\tFROM\n\t\tMechUser M\n\tLEFT JOIN\n\t\tBD_Users U\n\tON\n\t\tU.Id = M.UserId\n) T\nWHERE\n\t$Filters",
    "CacheToken": "",
    "Description": "获取企业用户总数",
    "Demo": ""
  },
  {
    "RowNum": 13,
    "Id": 1340,
    "Name": "ReadPageCompanys",
    "Type": "T-SQL",
    "Sign": 1,
    "Code": "SELECT\n\t*\nFROM (\n\tSELECT\n\t\tROW_NUMBER()OVER(ORDER BY $Orders) RowNum,\n\t\t*\n\tFROM (\n\t\tSELECT TOP (@End)\n\t\t\t*\n\t\tFROM (\n\t\t\tSELECT\n\t\t\t\tM.Id,\n\t\t\t\tM.UserId UserId_n,\n\t\t\t\tM.Address,\n\t\t\t\tM.License,\n\t\t\t\tM.Entrust,\n\t\t\t\tM.Constitution,\n\t\t\t\tM.State,\n\t\t\t\tM.ExamineOpinion,\n\t\t\t\tM.ExamineTime,\n\t\t\t\tM.Remark,\n\t\t\t\tU.UserName_c,\n\t\t\t\tU.Contact,\n\t\t\t\tU.Nickname CompanyName,\n\t\t\t\tU.ContactPhone\n\t\t\tFROM\n\t\t\t\tMechUser M\n\t\t\tLEFT JOIN\n\t\t\t\tBD_Users U\n\t\t\tON\n\t\t\t\tU.Id = M.UserId\n\t\t) T\n\t\tWHERE\n\t\t\t$Filters\n\t\tORDER BY\n\t\t\t$Orders\n\t)T\n)T\nWHERE T.RowNum >= @Begin",
    "CacheToken": "",
    "Description": "分页读取企业用户信息",
    "Demo": ""
  },
  {
    "RowNum": 14,
    "Id": 1339,
    "Name": "ExamineCompany",
    "Type": "T-SQL",
    "Sign": 4,
    "Code": "UPDATE MechUser SET ExamineOpinion = @ExamineOpinion, State = @State, ExamineTime = @Now WHERE Id IN ($Id)\n\n-- 审核通过后启用账号\nIF @State = 1 BEGIN\n\n\tUPDATE\n\t\tBD_Users\n\tSET\n\t\tType = 2,\n\t\tRole = @Int_CompanyFirstRoleId\n\tWHERE\n\t\tId IN (SELECT UserId FROM MechUser WHERE Id IN ($Id)) AND Type = 0;\n\n\t-- 插入短信信息\n\tINSERT Sms(Content, Mobiles, IsSent, CreateTime, CreateUserId, SendTime)\n\t\tSELECT\n\t\t\t@Text_ExamineCompanyContent, ContactPhone, 0, @Now, @UserId, NULL\n\t\tFROM\n\t\t\tBD_Users\n\t\tWHERE\n\t\t\tId IN (SELECT UserId FROM MechUser WHERE Id IN ($Id)) AND Type = 2;\n\n\t-- 插入推送信息\n\tINSERT Message(Title, Content, State, PushUserId, CreateTime, CreateUser, UpdateTime, UpdateUser)\n\t\tSELECT\n\t\t\t'您的账号审核通过啦！', @Text_ExamineCompanyContent, 0, Id, @Now, @UserId, NULL, NULL\n\t\tFROM\n\t\t\tBD_Users\n\t\tWHERE\n\t\t\tId IN (SELECT UserId FROM MechUser WHERE Id IN ($Id)) AND Type = 2;\nEND",
    "CacheToken": "",
    "Description": "审核企业用户",
    "Demo": "！Id 是企业 Id，不是用户 Id。"
  },
  {
    "RowNum": 15,
    "Id": 1338,
    "Name": "ResetCompanyPassword",
    "Type": "T-SQL",
    "Sign": 4,
    "Code": "UPDATE BD_Users SET Password = dbo.MD5(@Text_DefaultUserPassword) WHERE Id IN ($UserId_n) AND Type = 2",
    "CacheToken": "",
    "Description": "重置企业用户的密码",
    "Demo": ""
  },
  {
    "RowNum": 16,
    "Id": 1337,
    "Name": "RegisterCompany",
    "Type": "T-SQL",
    "Sign": 2,
    "Code": "IF EXISTS(SELECT 1 FROM BD_Users WHERE UserName_c = @UserName_c OR ContactPhone = @UserName_c) BEGIN\n\tRAISERROR('账号或手机号已被使用！', 16, 1);\n\tRETURN;\nEND\n\nDECLARE @NearVerification VARCHAR(10);\nDECLARE @VerificationId INT;\n\nSELECT TOP 1 @VerificationId = Vl_Id, @NearVerification = Vl_Verification FROM T_VerificationList WHERE Vl_UserPhone = @ContactPhone AND DATEDIFF(MINUTE, Vl_Time, @Now) <= 5 ORDER BY Vl_Id DESC;\n\nIF @VerificationId IS NULL BEGIN\n\tRAISERROR('请先获取验证码！', 16, 1);\n\tRETURN;\nEND\n\nDELETE T_VerificationList WHERE Vl_Id = @VerificationId;\n\nIF @Verification != @NearVerification BEGIN\n\tRAISERROR('验证码错误！', 16, 1);\n\tRETURN;\nEND\n\nINSERT System_DataLogs(Guid, OpType, Time, UserId)\n\tVALUES(@NewGuid, 1, @Now, @UserId);\n\nINSERT BD_Users(UserName_c, Password, Role, Nickname, Avatar, Contact, ContactPhone, Guid, DepartmentId, IdNumber, Type, ParentId)\n\tVALUES(@UserName_c, dbo.MD5(@Password), 0, @CompanyName, @Path_UserDefaultAvatar, @Contact, @ContactPhone, @NewGuid, NULL, NULL, 0, NULL);\n\nDECLARE @UserId_n INT = @@IDENTITY;\n\nINSERT MechUser(UserId, MechName, Address, License, Entrust, Constitution, State, CreateTime, ExamineTime, ExamineOpinion, Remark)\n\tVALUES(@UserId_n, @CompanyName, @Address, @License, @Entrust, @Constitution, 0, @Now, NULL, NULL, NULL);",
    "CacheToken": "",
    "Description": "注册企业用户 （详细说明请查看底部示例）",
    "Demo": "！用户名和手机号在用户输入完成之后调用 CheckUserName 检查是否有效。\n！运营执照，委托书，招聘简章都是使用调用 UploadImage 上传图像后返回的文件路径。\n！短信验证码调用 GetVerificationCode 命令获取。"
  },
  {
    "RowNum": 17,
    "Id": 1336,
    "Name": "CheckUserName",
    "Type": "T-SQL",
    "Sign": 65,
    "Code": "SELECT COUNT(0) IsExist FROM BD_Users WHERE UserName_c = @UserName_c OR ContactPhone = @UserName_c",
    "CacheToken": "",
    "Description": "检查用户名或手机号是否存在",
    "Demo": ""
  },
  {
    "RowNum": 18,
    "Id": 1335,
    "Name": "GetOuterStaffInfoByMyself",
    "Type": "T-SQL",
    "Sign": 65,
    "Code": "SELECT TOP 1\n\tOS.Id,\n\tOS.Name,\n\tOS.Sex,\n\tOS.IdNumber,\n\tOS.Mobile,\n\tOS.UnitId,\n\tOS.EnterDate,\n\tOS.Salary,\n\tOS.EmergencyContact,\n\tOS.EmergencyContactNumber,\n\tOS.ContractNumber,\n\tOS.WorkNumber,\n\tOS.Ethnicity,\n\tOS.Origin,\n\tOS.Education,\n\tOS.GraduateInstitutions,\n\tOS.IsMarried,\n\tOS.ContractEndDate,\n\tOS.BirthDate,\n\tOS.HomeAddress,\n\tOS.IdIssuanceAuthority,\n\tOS.IdEndDate,\n\tOS.BankCardNumber,\n\tOS.AccommodationState,\n\tOS.SocialSecurityNumber,\n\tOS.ProvidentFundNumber,\n\tOS.Remark,\n\tOS.ImportUserId,\n\tOS.ImportDate,\n\tOS.BankId,\n\tOS.WorkGroupName,\n\tOS.Age,\n\tOS.State,\n\tU.UnitName UnitName,\n\tB.BankName BankName,\n\tD.Name AccommodationStateName,\n\tIU.Nickname ImportUserName\nFROM\n\tBD_Users BU\nLEFT JOIN\n\tBD_OuterStaff OS\nON\n\tOS.IdNumber = BU.IdNumber\nLEFT JOIN\n\tUnit U\nON\n\tU.Id = OS.UnitId\nLEFT JOIN\n\tDotBank B\nON\n\tB.Id = OS.BankId\nLEFT JOIN\n\tBD_Dictionary D\nON\n\tD.Type = 'AccommodationStates' AND D.Value = AccommodationState\nLEFT JOIN\n\tBD_Users IU\nON\n\tIU.Id = OS.ImportUserId\nWHERE\n\tBU.Id = @UserId",
    "CacheToken": "",
    "Description": "派遣员工读取自己的员工信息",
    "Demo": ""
  },
  {
    "RowNum": 19,
    "Id": 1334,
    "Name": "ForgetPassword",
    "Type": "T-SQL",
    "Sign": 4,
    "Code": "DECLARE @UserId_n INT;\nDECLARE @Mobile VARCHAR(50);\nDECLARE @NearVerification VARCHAR(10);\nDECLARE @VerificationId INT;\n\nSELECT @UserId_n = Id, @Mobile = ContactPhone FROM BD_Users WHERE UserName_c = @UserName_c OR ContactPhone = @UserName_c;\n\nIF @UserId_n IS NULL BEGIN\n\tRAISERROR('账号不存在！', 16, 1);\n\tRETURN;\nEND\n\nIF @Mobile IS NULL BEGIN\n\tRAISERROR('账号未绑定手机号！', 16, 1);\n\tRETURN;\nEND\n\nSELECT TOP 1 @VerificationId = Vl_Id, @NearVerification = Vl_Verification FROM T_VerificationList WHERE Vl_UserPhone = @Mobile AND DATEDIFF(MINUTE, Vl_Time, @Now) <= 5 ORDER BY Vl_Id DESC;\n\nIF @VerificationId IS NULL BEGIN\n\tRAISERROR('请先获取验证码！', 16, 1);\n\tRETURN;\nEND\n\nIF @Verification != @NearVerification BEGIN\n\tRAISERROR('验证码错误！', 16, 1);\n\tRETURN;\nEND\n\n\nUPDATE BD_Users SET Password = dbo.MD5(@Password) WHERE Id = @UserId_n;",
    "CacheToken": "",
    "Description": "忘记密码修改",
    "Demo": ""
  },
  {
    "RowNum": 20,
    "Id": 1333,
    "Name": "SetMessageToPushed",
    "Type": "T-SQL",
    "Sign": 36,
    "Code": "UPDATE Message SET State = 1 WHERE Id IN ($Ids)",
    "CacheToken": "",
    "Description": "修改消息的状态为已推送",
    "Demo": ""
  },
  {
    "RowNum": 21,
    "Id": 1332,
    "Name": "ReadAllNoPushMessage",
    "Type": "T-SQL",
    "Sign": 33,
    "Code": "SELECT Id, Title, Content, State, PushUserId, CreateTime, CreateUser FROM Message WHERE State = 0",
    "CacheToken": "",
    "Description": "读取所有未推送的消息",
    "Demo": ""
  },
  {
    "RowNum": 22,
    "Id": 1329,
    "Name": "ReadListUsers",
    "Type": "T-SQL",
    "Sign": 1,
    "Code": "SELECT Id, NickName Name, Role FROM BD_Users WHERE $Filters",
    "CacheToken": "",
    "Description": "读取用户信息的列表数据",
    "Demo": ""
  },
  {
    "RowNum": 23,
    "Id": 1327,
    "Name": "GetDebitReportCount",
    "Type": "T-SQL",
    "Sign": 65,
    "Code": " select Total,(CASE WHEN SumMoney IS NULL THEN 0 ELSE SumMoney END)  SumMoney,(CASE WHEN AvgMoney IS NULL THEN 0 ELSE AvgMoney END)  AvgMoney from \n(\nselect Count(1) Total,Sum(Money) SumMoney,Convert(decimal(18,2),AVG(Money)) AvgMoney  from DebitAudit de\nleft join  DebitMoney d\non de.DebitId=d.Id\nwhere d.IsStill=0\n) T",
    "CacheToken": "",
    "Description": "借支统计报表",
    "Demo": ""
  },
  {
    "RowNum": 24,
    "Id": 1326,
    "Name": "GetReportsTotal",
    "Type": "T-SQL",
    "Sign": 65,
    "Code": "SELECT\n\t\t\tCOUNT(0) Total\n\t\tFROM (\n\t\t\t\tSELECT \n\t\t\t\t\tr.Id,\n                                         convert(varchar(7),r.CreateTime,120) Month,\n\t\t\t\t\tu.UserName_c,\n\t\t\t\t\td.Name Department,\n\t\t\t\t\tr.CreateTime,\n\t\t\t\t\tr.HeadContent,\n\t\t\t\t\tr.HeadTime,\n                                        r.CEOContent,\n                                        r.CEOTime\n\t\t\t\t\tfrom  Report r\n\t\t\t\t\tleft join BD_Users u \n\t\t\t\t\ton r.UserId=u.Id \n\t\t\t\t\tleft join BD_Dictionary d\n\t\t\t\t\tON\n\t\t\t\t         d.Type = 'Department' AND d.Value = u.DepartmentId\n\t\t) T\n\t\tWHERE\n\t\t\t$Filters",
    "CacheToken": "",
    "Description": "获取月度报表信息总数",
    "Demo": ""
  },
  {
    "RowNum": 25,
    "Id": 1323,
    "Name": "ReadPageReports",
    "Type": "T-SQL",
    "Sign": 1,
    "Code": "SELECT\n\t*\nFROM (\n\tSELECT\n\t\tROW_NUMBER()OVER(ORDER BY $Orders) RowNum,\n\t\t*\n\tFROM (\n\t\tSELECT TOP (@End)\n\t\t\t*\n\t\tFROM (\n\t\t\t\tSELECT \n\t\t\t\t\tr.Id,\n                                         convert(varchar(7),r.CreateTime,120) Month,\n\t\t\t\t\tu.UserName_c,\n\t\t\t\t\td.Name Department,\n\t\t\t\t\tr.CreateTime,\n\t\t\t\t\tr.HeadContent,\n\t\t\t\t\tr.HeadTime,\n                                        r.CEOContent,\n                                        r.CEOTime\n\t\t\t\t\tfrom  Report r\n\t\t\t\t\tleft join BD_Users u \n\t\t\t\t\ton r.UserId=u.Id \n\t\t\t\t\tleft join BD_Dictionary d\n\t\t\t\t\tON\n\t\t\t\t         d.Type = 'Department' AND d.Value = u.DepartmentId\n\t\t) T\n\t\tWHERE\n\t\t\t$Filters\n\t\tORDER BY\n\t\t\t$Orders\n\t)T\n)T\nWHERE T.RowNum >= @Begin",
    "CacheToken": "",
    "Description": "分页查询月度报表信息",
    "Demo": ""
  },
  {
    "RowNum": 26,
    "Id": 1322,
    "Name": "GetDebitMoneyReportTotal",
    "Type": "T-SQL",
    "Sign": 65,
    "Code": "SELECT\n\t\t\tCOUNT(0) Total\n\t\tFROM (\n\t\t\tSELECT d.Id,d.Content,b.WorkNumber,b.Name,b.IdNumber,b.BankCardNumber,do.BankName, u.UnitName,(select Payroll from UserPayroll  where CreateTime=(select max(CreateTime) from UserPayroll where IDNumber=d.IDNumber )) Payroll ,d.Money,(select count(Id) from DebitMoney m where m.IDNumber=d.IDNumber and DATEDIFF (month,m.CreateTime,d.CreateTime ) <1 )Times,(select sum(Money) from DebitMoney m where m.IDNumber=d.IDNumber and DATEDIFF (month,m.CreateTime,d.CreateTime ) <1 )MoneyTotal,\n(select Name from BD_OuterStaff bd where bd.Id=b.ImportUserId )Stationer,( select AuditTime from DebitAudit  de where d.Id= de.DebitId and de.AuditState=1 and de.Sort=1) AuditTime,IsStill,d.CreateTime\nfrom  DebitMoney d\nleft join BD_OuterStaff b\non d.IDNumber=b.IdNumber \nleft join Unit u on b.UnitId=u.Id \nleft join DotBank do on b.BankId=do.Id\n\t\t) T\n\t\tWHERE\n\t\t\t$Filters",
    "CacheToken": "",
    "Description": "分页查询员工借支报表",
    "Demo": ""
  },
  {
    "RowNum": 27,
    "Id": 1321,
    "Name": "ReadPageDebitMoneyReport",
    "Type": "T-SQL",
    "Sign": 1,
    "Code": "SELECT\n\t*\nFROM (\n\tSELECT\n\t\tROW_NUMBER()OVER(ORDER BY $Orders) RowNum,\n\t\t*\n\tFROM (\n\t\tSELECT TOP (@End)\n\t\t\t*\n                  FROM (\n\t\tSELECT d.Id,d.Content,b.WorkNumber,b.Name,b.IdNumber,b.BankCardNumber,do.BankName, u.UnitName,(select Payroll from UserPayroll  where CreateTime=(select max(CreateTime) from UserPayroll where IDNumber=d.IDNumber )) Payroll ,d.Money,(select count(Id) from DebitMoney m where m.IDNumber=d.IDNumber and DATEDIFF (month,m.CreateTime,d.CreateTime ) <1 )Times,(select sum(Money) from DebitMoney m where m.IDNumber=d.IDNumber and DATEDIFF (month,m.CreateTime,d.CreateTime ) <1 )MoneyTotal,\n(select Name from BD_OuterStaff bd where bd.Id=b.ImportUserId )Stationer,( select AuditTime from DebitAudit  de where d.Id= de.DebitId and de.AuditState=1 and de.Sort=1) AuditTime,IsStill,d.CreateTime\nfrom  DebitMoney d\nleft join BD_OuterStaff b\non d.IDNumber=b.IdNumber \nleft join Unit u on b.UnitId=u.Id \nleft join DotBank do on b.BankId=do.Id\n\t\t) T\n\n\t\tWHERE\n\t\t\t$Filters\n\t\tORDER BY\n\t\t\t$Orders\n\t) T\n\n) T \n\n WHERE T.RowNum >= @Begin",
    "CacheToken": "",
    "Description": "分页查询员工借支报表",
    "Demo": ""
  },
  {
    "RowNum": 28,
    "Id": 1320,
    "Name": "APPGetWeeKReportHistory",
    "Type": "T-SQL",
    "Sign": 1,
    "Code": "SELECT\n\t*\nFROM (\n\tSELECT\n\t\tROW_NUMBER()OVER(ORDER BY UpUserCount Asc ) RowNum,\n\t\t*\n\tFROM (\n\t\tSELECT TOP (@End)\n\t\t\t*\n\t\tFROM (\n\t\t\t\tSELECT Id,UnitName,(CASE WHEN UpUserCount IS NULL THEN 0 ELSE UpUserCount END) UpUserCount,(CASE WHEN AddUserCount IS NULL THEN 0 ELSE AddUserCount END) AddUserCount, (CASE WHEN ZiliCount IS NULL THEN 0 ELSE ZiliCount END) ZiliCount, (CASE WHEN LossRate IS NULL THEN 0 ELSE LossRate END) LossRate,EndTime from\n(\nSELECT w.Id,u.UnitName,w.UpUserCount,w.AddUserCount,w.ZiliCount,(cast(((w.ZiliCount+w.CizhiCount)*1.0/(w.UpUserCount+w.AddUserCount))as decimal(18,4))*100) LossRate,convert(varchar(10),w.EndTime,120) EndTime\n from WeeKReport w\nleft join Unit u on w.ComId =u.Id) T\n\t\t) T\n\t\tWHERE\n\t\t\t$Filters\n\t\tORDER BY\n\t\t\tUpUserCount Asc\n\t) T\n) T\nWHERE T.RowNum >= @Begin",
    "CacheToken": "",
    "Description": "周检历史记录",
    "Demo": "筛选条件：  '[E]UnitName':'富士', '[GT]EndTime': '2018-07-11' ,'[LT]EndTime': '2018-07-18'"
  },
  {
    "RowNum": 29,
    "Id": 1319,
    "Name": "APPGetWeeKReportUnit",
    "Type": "T-SQL",
    "Sign": 1,
    "Code": "DECLARE @FirstWeek int=(@Week)*7;\nDECLARE @NextWeek int=(@Week+1)*7;\nDECLARE @FirstDayOfWeek DATE = DATEADD(week,DATEDIFF(week,0,getdate()),@FirstWeek);\nDECLARE @FirstDayOfNextWeek DATE =DATEADD(week,DATEDIFF(week,0,getdate()),@NextWeek);\n\n\nselect *  into #temp from\n(\nselect us.Id,us.Nickname,u.UnitName from BD_Users us\nleft join BD_OuterStaff o on us.IdNumber=o.IdNumber\nleft join Unit u on o.UnitId=u.Id\nwhere us.Id in ( select distinct ImportUserId from BD_OuterStaff where ImportUserId>0 and UnitId in( select Id from Unit where WorkTypeId=@WorkTypeId ) )\n) T\n\nselect *  into #Report from\n(\nSELECT w.StationedUserId,w.UpUserCount,w.AddUserCount,w.ZiliCount,(cast(((w.ZiliCount+w.CizhiCount)*1.0/(w.UpUserCount+w.AddUserCount))as decimal(18,4))*100) LossRate\n from WeeKReport w\nleft join Unit u on w.ComId =u.Id\nleft join BD_Dictionary d \non d.Type='WorkTypes' and d.Value=u.WorkTypeId\nwhere w.BeginTime>=@FirstDayOfWeek and w.BeginTime<@FirstDayOfNextWeek and w.EndTime>@FirstDayOfWeek and w.EndTime<@FirstDayOfNextWeek\n) A\n\nselect UnitName,(CASE WHEN UpUserCount IS NULL THEN 0 ELSE UpUserCount END) UpUserCount,(CASE WHEN AddUserCount IS NULL THEN 0 ELSE AddUserCount END) AddUserCount, (CASE WHEN ZiliCount IS NULL THEN 0 ELSE ZiliCount END) ZiliCount, (CASE WHEN LossRate IS NULL THEN 0 ELSE LossRate END) LossRate from #temp t\nleft join #Report r on t.Id=r.StationedUserId  order by UpUserCount Asc\n\ndrop table #temp\ndrop table #Report",
    "CacheToken": "",
    "Description": "周检表报表单位显示",
    "Demo": ""
  },
  {
    "RowNum": 30,
    "Id": 1317,
    "Name": "APPGetWeeKReportTotal",
    "Type": "T-SQL",
    "Sign": 65,
    "Code": "DECLARE @FirstWeek int=(@Week)*7;\n\nDECLARE @NextWeek int=(@Week+1)*7;\n\nDECLARE @FirstDayOfWeek DATE = DATEADD(week,DATEDIFF(week,0,getdate()),@FirstWeek);\n\nDECLARE @FirstDayOfNextWeek DATE =DATEADD(week,DATEDIFF(week,0,getdate()),@NextWeek);\n\nSELECT SUM(UpUserCount) UpUserCount,SUM(AddUserCount) AddUserCount,SUM(ZiliCount) ZiliCount,SUM(LossRate) LossRate from \n(\nSELECT w.UpUserCount,w.AddUserCount,w.ZiliCount,(cast(((w.ZiliCount+w.CizhiCount)*1.0/(w.UpUserCount+w.AddUserCount))as decimal(18,4))*100) LossRate\n from WeeKReport w\nleft join Unit u on w.ComId =u.Id\nleft join BD_Dictionary d \non d.Type='WorkTypes' and d.Value=u.WorkTypeId\nwhere w.BeginTime>=@FirstDayOfWeek and w.BeginTime<@FirstDayOfNextWeek and w.EndTime>@FirstDayOfWeek and w.EndTime<@FirstDayOfNextWeek) T",
    "CacheToken": "",
    "Description": "周检表报表总数",
    "Demo": ""
  },
  {
    "RowNum": 31,
    "Id": 1314,
    "Name": "UpdateOuterStaff",
    "Type": "T-SQL",
    "Sign": 4,
    "Code": "UPDATE BD_OuterStaff SET\n\tName = \t\t\t\t\tISNULL(@Name, Name),\n\tSex = \t\t\t\t\tISNULL(@Sex, Sex),\n\tAge = \t\t\t\t\tISNULL(@Age, Age),\n\tMobile = \t\t\t\tISNULL(@Mobile, Mobile),\n\tUnitId = \t\t\t\t\tISNULL(@UnitId, UnitId),\n\tEnterDate = \t\t\t\tISNULL(@EnterDate, EnterDate),\n\tSalary = \t\t\t\t\tISNULL(@Salary, Salary),\n\tEmergencyContact =\t\tISNULL(@EmergencyContact, EmergencyContact),\n\tEmergencyContactNumber =\tISNULL(@EmergencyContactNumber, EmergencyContactNumber),\n\tContractNumber =\t\t\tISNULL(@ContractNumber, ContractNumber),\n\tWorkNumber =\t\t\tISNULL(@WorkNumber, WorkNumber),\n\tEthnicity = \t\t\t\tISNULL(@Ethnicity, Ethnicity),\n\tOrigin = \t\t\t\t\tISNULL(@Origin, Origin),\n\tEducation = \t\t\t\tISNULL(@Education, Education),\n\tGraduateInstitutions =\t\tISNULL(@GraduateInstitutions, GraduateInstitutions),\n\tIsMarried = \t\t\t\tISNULL(@IsMarried, IsMarried),\n\tContractEndDate = \t\tISNULL(@ContractEndDate, ContractEndDate),\n\tBirthDate = \t\t\t\tISNULL(@BirthDate, BirthDate),\n\tHomeAddress = \t\t\tISNULL(@HomeAddress, HomeAddress),\n\tIdIssuanceAuthority =\t\tISNULL(@IdIssuanceAuthority, IdIssuanceAuthority),\n\tIdEndDate = \t\t\t\tISNULL(@IdEndDate, IdEndDate),\n\tBankCardNumber =\t\tISNULL(@BankCardNumber, BankCardNumber),\n\tAccommodationState =\t\tISNULL(@AccommodationState, AccommodationState),\n\tSocialSecurityNumber =\t\tISNULL(@SocialSecurityNumber, SocialSecurityNumber),\n\tRemark = \t\t\t\tISNULL(@Remark, Remark),\n\tImportUserId = \t\t\tISNULL(@UserId, ImportUserId),\n\tImportDate = \t\t\t\tISNULL(@Now, ImportDate),\n\tBankId =  \t\t\t\tISNULL(@BankId, BankId),\n\tWorkGroupName = \t\tISNULL(@WorkGroupName, WorkGroupName),\n\tState =  \t\t\t\t\tISNULL(@State, State)\nWHERE Id = @Id",
    "CacheToken": "",
    "Description": "修改派遣员工信息 （允许为 null 的参数不传则不修改该字段）",
    "Demo": ""
  },
  {
    "RowNum": 32,
    "Id": 1313,
    "Name": "GetWeeKReportAddUserCount",
    "Type": "T-SQL",
    "Sign": 1,
    "Code": "DECLARE @FirstDayOfWeek DATE = dateadd(week,-1,DATEADD(week,DATEDIFF(week,0,getdate()),0))\nDECLARE @FirstDayOfNextWeek DATE =DATEADD(week,DATEDIFF(week,0,getdate()),0)\n\n\nprint @FirstDayOfWeek\nprint @FirstDayOfNextWeek\n\n\nselect    AddUserCount  from WeeKReport where StationedUserId=@UserId And BeginTime>=@FirstDayOfWeek and BeginTime<@FirstDayOfNextWeek and EndTime>@FirstDayOfWeek and EndTime<@FirstDayOfNextWeek",
    "CacheToken": "",
    "Description": "获取周检表上周入职人数",
    "Demo": ""
  },
  {
    "RowNum": 33,
    "Id": 1312,
    "Name": "InsertVerificationCode",
    "Type": "T-SQL",
    "Sign": 34,
    "Code": "INSERT T_VerificationList(Vl_UserPhone, Vl_Verification, Vl_Time)\n\tVALUES(@Phone, @Code, @Now)",
    "CacheToken": "",
    "Description": "插入验证码-tjw",
    "Demo": ""
  },
  {
    "RowNum": 34,
    "Id": 1311,
    "Name": "SysAuditDebitsCashier",
    "Type": "System",
    "Sign": 66,
    "Code": "// System Impl",
    "CacheToken": "",
    "Description": "批量审核借支记录（出纳）",
    "Demo": ""
  },
  {
    "RowNum": 35,
    "Id": 1310,
    "Name": "AuditDebitsCashier",
    "Type": "T-SQL",
    "Sign": 2,
    "Code": "DECLARE @IsFind BIT = 0;--是否有审核该记录的角色\n\nDECLARE @Sort int = 0;--步骤\n\nDECLARE @MaxSort int = 0;--步骤表最大的步骤\n\nDECLARE @Ids int=0;--所有审核ID\n\n\n--通过身份证获取到需要 审核的ID号，查询逗号连接\nselect * into #TEMP from (\nselect d.Id from DebitAudit d\nleft join DebitMoney m on d.DebitId=m.Id\nleft join BD_OuterStaff s on s.IdNumber=m.IDNumber\nleft join DebitSteps de on d.Sort=de.Sort\nwhere s.IdNumber in (select * from Split(@IdNumbers, ',')) and d.AuditState  is null and de.Sort in (select Sort from DebitSteps where AuditRoleId in($RoleIds))\n)  T\n\nselect @Ids=count(Id) from #TEMP\n\nif(@Ids>0) \nBEGIN\n-- 判断当前用户是否有审核该记录的角色。\nSELECT @IsFind = 1 FROM DebitAudit DA Left Join DebitSteps DS ON DS.Sort = DA.Sort WHERE DS.AuditRoleId IN ($RoleIds) AND (DA.Id in ( select Id from #TEMP ))\n\nIF @IsFind = 1 BEGIN\n   SELECT @Sort=Max(DA.Sort) FROM DebitAudit DA Left Join DebitSteps DS ON DS.Sort = DA.Sort WHERE DS.AuditRoleId IN ($RoleIds) AND (DA.Id in ( select Id from #TEMP ))\n\tSELECT @MaxSort=max(Sort) from DebitSteps;\n\tIF @AuditState = 1 BEGIN\n\t\t-- 如果审核步骤有下一步，则新增一条审核数据。\n\t\tif(@Sort<@MaxSort)\n\t\tBEGIN\n\t\tDECLARE @DebitId int = 0;\n\t\tINSERT DebitAudit(DebitId, Sort) \n\t\tSELECT  DA.DebitId,@Sort+1 FROM DebitAudit DA Left Join DebitSteps DS ON DS.Sort = DA.Sort WHERE DS.AuditRoleId IN ($RoleIds) AND (DA.Id in ( select Id from #TEMP ))\n\t\t\t\n        END\n\tEND\n\n\tUPDATE DebitAudit SET AuditState = @AuditState, UserId = @UserId, AuditContent = @AuditContent, AuditTime = @Now WHERE Id IN ( select Id from #TEMP )\nEND \n\nif(@AuditContent is null)\nBEGIN\nIF @AuditState = 1  BEGIN\n Set @AuditContent='您的工资已发放，请于3小时后去查账。';\nEnd\nelse\nBEGIN\n Set @AuditContent='您的工资发放失败，请检查银行卡跟银行是否错误。';\n End\nEnd\n--审核Id不为空 向信息表插入数据\nif(@Ids >0)\nBEGIN\nINSERT INTO Message(Title,Content,State,PushUserId,CreateTime,CreateUser)\nselect '借支审核',@AuditContent,0,u.Id,GETDATE(),@UserId from DebitMoney d   left join BD_Users u on u.IdNumber=d.IDNumber left join DebitAudit da on d.Id=da.DebitId where da.Id in (select Id from #TEMP)\n\nDROP table #TEMP\nEnd \nEnd\nELSE BEGIN\n\tRAISERROR('没有找到记录。', 16, 1);\n\tRETURN;\nEND",
    "CacheToken": "",
    "Description": "批量审核借支记录（出纳）",
    "Demo": "如果是单个审核，添加一个筛选参数 \"[E]Id\": 1。\n如果是批量审核，添加一个筛选参数 \"[IN]Id\" : \"1,2,3,4,5...\"\n如果是全部审核，则不添加筛选参数。\n注意：如果没有添加筛选参数，则全部数据都会被审核！"
  },
  {
    "RowNum": 36,
    "Id": 1309,
    "Name": "APPUserChangeBindPhone",
    "Type": "T-SQL",
    "Sign": 4,
    "Code": "If not exists(Select top 1 * from [BD_Users] where ID=@UserId)\n   Begin\n              RAISERROR('OldUserNotExist', 16, 1)\n              RETURN\n  End\n\nElse If not exists(Select top 1 * from [BD_Users] where ID=@UserId and PassWord=@Password)\n   Begin\n              RAISERROR('PassWordErr', 17, 1)\n              RETURN\n  End\n\nElse\n      Begin\n                 Declare @NearVerification nvarchar(10) \n                 select top 1 @NearVerification= Vl_Verification from [dbo].[T_VerificationList] Where Vl_UserPhone=@Phone and DATEDIFF(MINUTE,Vl_Time,GETDATE())<=5 ORDER BY Vl_Id DESC; --最近2分钟的最后一条验证码\n                 IF @NearVerification<>@Verification\n                     Begin\n                                 RAISERROR('VerificationErr', 18, 1)\n                                 RETURN\n                     End\n                 Else \n                      Begin\n                                  Update BD_Users Set UserName_c=@Phone,ContactPhone=@Phone Where Id = @UserId\n                      End\n       End",
    "CacheToken": "",
    "Description": "APP修改手机号-tjw",
    "Demo": ""
  },
  {
    "RowNum": 37,
    "Id": 1308,
    "Name": "DeleteInternalUser",
    "Type": "T-SQL",
    "Sign": 8,
    "Code": "INSERT System_DataLogs(Guid, OpType, Time, UserId) SELECT Guid, 3, @Now, @UserId FROM BD_Users WHERE Id IN ($Id) AND Type = 1;\n\nDELETE BD_UsersAuthorization WHERE UserId IN (SELECT Id FROM BD_Users WHERE Id IN ($Id) AND Type = 1);\n\nDELETE BD_Users WHERE Id IN ($Id) AND Type = 1;\n",
    "CacheToken": "",
    "Description": "删除内部员工信息",
    "Demo": ""
  },
  {
    "RowNum": 38,
    "Id": 1307,
    "Name": "InsertInternalUser",
    "Type": "T-SQL",
    "Sign": 2,
    "Code": "INSERT INTO System_DataLogs(Guid, OpType, Time, UserId) VALUES(@NewGuid, 1, @Now, @UserId)\n\nINSERT INTO BD_Users(Avatar, Contact, ContactPhone, Guid, Nickname, Password, Role, UserName_c, Type, DepartmentId, IdNumber, ParentId) VALUES(@Avatar, @Contact, @ContactPhone, @NewGuid, @Nickname, dbo.MD5(@Password), @Role, @UserName_c, 1, @DepartmentId, NULL, @UserId)",
    "CacheToken": "",
    "Description": "新增内部员工信息",
    "Demo": ""
  },
  {
    "RowNum": 39,
    "Id": 1306,
    "Name": "UpdateInternalUser",
    "Type": "T-SQL",
    "Sign": 4,
    "Code": "IF @Password IS NOT NULL BEGIN\n\tUPDATE BD_Users SET Password = dbo.MD5(@Password) WHERE Id = @Id AND Type = 1;\nEND\n\nINSERT INTO System_DataLogs(Guid, OpType, Time, UserId) SELECT Guid, 2, @Now, @UserId FROM BD_Users WHERE Id = @Id AND Type = 1;\n\nUPDATE BD_Users SET Avatar = @Avatar, Contact = @Contact, ContactPhone = @ContactPhone, Nickname = @Nickname, Role = @Role, DepartmentId = @DepartmentId WHERE Id = @Id AND Type = 1;",
    "CacheToken": "",
    "Description": "更新内部员工信息",
    "Demo": ""
  },
  {
    "RowNum": 40,
    "Id": 1305,
    "Name": "InsertCost",
    "Type": "T-SQL",
    "Sign": 2,
    "Code": "SET @Month= CAST(DATEADD(DAY, 1 - DAY(@Month), @Month) AS DATE) /* 选择月份的第一天 */\n\nDECLARE @ExistId INT;\n\nSELECT @ExistId = Id FROM Cost WHERE AlareId = @AlareId AND Month = @Month;\n\nIF @ExistId IS NULL BEGIN\n\tINSERT Cost(AlareId, Month, Water, Electricity, Management, Rent, Accessory, Url, UpdateTime)\n\t\tVALUES(@AlareId, @Month, @Water, @Electricity, @Management, @Rent, @Accessory, @Url, @Now)\nEND ELSE BEGIN\n\tUPDATE Cost SET Water = @Water, Electricity = @Electricity, Management = @Management, Rent = @Rent, Accessory = @Accessory, Url = @Url, UpdateTime = @Now WHERE Id = @ExistId;\nEND\n",
    "CacheToken": "",
    "Description": "新增房租信息",
    "Demo": ""
  },
  {
    "RowNum": 41,
    "Id": 1303,
    "Name": "ImportBeds",
    "Type": "System",
    "Sign": 66,
    "Code": "// SystemImpl",
    "CacheToken": "",
    "Description": "导入员工床位信息，支持 Excel 数据和文本数据",
    "Demo": ""
  },
  {
    "RowNum": 42,
    "Id": 1302,
    "Name": "InsertBed",
    "Type": "T-SQL",
    "Sign": 2,
    "Code": "IF @AlareName = '' BEGIN\n\tSET @AlareName = NULL;\nEND\n\nIF @RoomNo = '' BEGIN\n\tSET @RoomNo = NULL;\nEND\n\n/* 如果住宿状态为 NULL，则尝试通过状态名称读取。 */\nIF @State IS NULL OR @State = 0 BEGIN\n\tSELECT @State = Value FROM BD_Dictionary WHERE Type = 'AccommodationStates' AND Name = @StateName;\n\t\n\t/* 如果没有找到则抛出异常 */\n\tIF @State IS NULL OR @State = 0 BEGIN\n\t\t SET @State = 1;\n\t\t/* GOTO StateNotExist;*/ \n\tEND\nEND\n\n/* 如果房间 Id 为 NULL，则尝试通过区域名称和房间名称找。 */\nIF (@RoomId IS NULL OR @RoomId = 0) AND @AlareName IS NOT NULL AND @RoomNo IS NOT NULL BEGIN\n\tDECLARE @AlareId INT;\n\n\tSELECT @AlareId = Value FROM BD_Dictionary WHERE Type = 'AlareType' AND Name = @AlareName;\n\n\tSELECT @RoomId = Id FROM Room WHERE RoomNo = @RoomNo AND AlareId = @AlareId;\n\n\t/* 如果没有找到则抛出异常 */\n\tIF @RoomId IS NULL OR @RoomId = 0 BEGIN\n\t\tGOTO RoomNotExist;\n\tEND\nEND\n\nIF NOT EXISTS(SELECT 1 FROM BD_OuterStaff WHERE IdNumber = @IdNumber) BEGIN\n\tGOTO NoOuterStaff;\nEND\n\n/* 如果存在则更新，不存在则添加 */\nIF EXISTS(SELECT 1 FROM Bed WHERE IDNumbar = @IdNumber) BEGIN\n\tUPDATE Bed SET RoomId = @RoomId, State = @State, Remark = @Remark, UpdateTime = @Now, UpdateUserId = @UserId WHERE IDNumbar = @IdNumber;\nEND ELSE BEGIN\n\tINSERT Bed(RoomId, IDNumbar, State, Remark, AddUserId, AddTime, UpdateTime, UpdateUserId)\n\t\tVALUES(@RoomId, @IdNumber, @State, @Remark, @UserId, @Now, NULL, NULL);\nEND\n\nIF @WorkGroupName IS NOT NULL BEGIN\n\tUPDATE BD_OuterStaff SET WorkGroupName = @WorkGroupName WHERE IdNumber = @IdNumber;\nEND\n\nRETURN;\n\nRoomNotExist:\n\tRAISERROR('没有找到房间号！', 16, 1);\n\tRETURN;\n\nNoOuterStaff:\n\tRAISERROR('没有该员工档案！', 16, 1);\n\tRETURN;\n\nStateNotExist:\n\tRAISERROR('住宿状态不正确！', 16, 1);\n\tRETURN;",
    "CacheToken": "",
    "Description": "新增或修改住宿状态。",
    "Demo": ""
  },
  {
    "RowNum": 43,
    "Id": 1300,
    "Name": "ReadLastPayrollByIdNumber",
    "Type": "T-SQL",
    "Sign": 65,
    "Code": "SELECT TOP 1 Id, IdNumber, Payroll, ShouldWages, PersonalTax, Debit, Utilities, Rent, Poundage, SocialSecurity, Fund, AddMonth FROM UserPayroll WHERE IDNumber = @IdNumber ORDER BY Id DESC",
    "CacheToken": "",
    "Description": "读取员工最后一条工资信息",
    "Demo": ""
  },
  {
    "RowNum": 44,
    "Id": 1299,
    "Name": "GetHouseReportKindNum",
    "Type": "T-SQL",
    "Sign": 65,
    "Code": "Select sum(ActualCount) as ActualCount,sum(SurplusCount) as SurplusCount \nFrom \n\t(   \n    select AlareId, AlareIDText,count(*)  as roomNum,sum(AlreadyCount) as AlreadyCount,sum(TheoryCount) as TheoryCount,sum(ActualCount) as ActualCount \n\t      ,sum(SurplusCount) as SurplusCount ,( sum(TheoryCount)-sum(ActualCount) ) as ErrorCount\n     From\n           (\n              select r.*,d.name as AlareIDText,b.* from [dbo].[Room]   as r \n              Left outer join [dbo].[BD_Dictionary]  as d on r.AlareId=d.Value and d.Type='AlareType'\n              Left outer join \n              (\n                --实际每个房间床位使用数量\n                SELECT * FROM (select RoomID,State,count(*) as Num from [dbo].[Bed]\n                               group by RoomID,State \n\t\t\t\t\t\t\t   ) \n                               AS P\n                               PIVOT \n                               (\n                                  SUM(num) FOR \n                                  p.State IN ([1],[2],[3])\n                                ) AS T\n\n                 ) as b on r.Id=b.RoomId\n\n               ) as Result \n      group by AlareId ,AlareIDText    \n\t  ) as result2 \n\n where \n              $Filters",
    "CacheToken": "",
    "Description": "员工宿舍管理-房间报表（实际可住人数和剩余可住人数）（汇总）",
    "Demo": ""
  },
  {
    "RowNum": 45,
    "Id": 1298,
    "Name": "GetCommonUsersTotal",
    "Type": "T-SQL",
    "Sign": 65,
    "Code": "SELECT\n\tCOUNT(0) Total\nFROM (\n\tSELECT\n\t\tU.Id,\n\t\tU.UserName_c,\n\t\tU.Role,\n\t\tU.Nickname,\n\t\tU.Avatar,\n\t\tU.Contact,\n\t\tU.ContactPhone,\n\t\tU.IdNumber,\n\t\tR.Name RoleName\n\tFROM\n\t\tBD_Users U\n\tLEFT JOIN\n\t\tBD_Roles R\n\tON\n\t\tR.Id = U.Role\n\tWHERE\n\t\tU.Type = 3\n) T\nWHERE\n\t$Filters",
    "CacheToken": "",
    "Description": "获取普通用户信息总数",
    "Demo": ""
  },
  {
    "RowNum": 46,
    "Id": 1297,
    "Name": "ReadPageCommonUsers",
    "Type": "T-SQL",
    "Sign": 1,
    "Code": "SELECT\n\t*\nFROM (\n\tSELECT\n\t\tROW_NUMBER()OVER(ORDER BY $Orders) RowNum,\n\t\t*\n\tFROM (\n\t\tSELECT TOP (@End)\n\t\t\t*\n\t\tFROM (\n\t\t\tSELECT\n\t\t\t\tU.Id,\n\t\t\t\tU.UserName_c,\n\t\t\t\tU.Role,\n\t\t\t\tU.Nickname,\n\t\t\t\tU.Avatar,\n\t\t\t\tU.Contact,\n\t\t\t\tU.ContactPhone,\n\t\t\t\tU.IdNumber,\n\t\t\t\tR.Name RoleName\n\t\t\tFROM\n\t\t\t\tBD_Users U\n\t\t\tLEFT JOIN\n\t\t\t\tBD_Roles R\n\t\t\tON\n\t\t\t\tR.Id = U.Role\n\t\t\tWHERE\n\t\t\t\tU.Type = 3\n\t\t) T\n\t\tWHERE\n\t\t\t$Filters\n\t\tORDER BY\n\t\t\t$Orders\n\t)T\n)T\nWHERE T.RowNum >= @Begin",
    "CacheToken": "",
    "Description": "分页读取普通用户",
    "Demo": ""
  },
  {
    "RowNum": 47,
    "Id": 1294,
    "Name": "GetInternalUsersTotal",
    "Type": "T-SQL",
    "Sign": 65,
    "Code": "SELECT\n\tCOUNT(0) Total\nFROM (\n\tSELECT\n\t\tU.Id,\n\t\tU.UserName_c,\n\t\tU.Role,\n\t\tU.Nickname,\n\t\tU.Avatar,\n\t\tU.Contact,\n\t\tU.ContactPhone,\n\t\tU.IdNumber,\n\t\tU.DepartmentId,\n\t\tDD.Name DepartmentName,\n\t\tR.Name RoleName\n\tFROM\n\t\tBD_Users U\n\tLEFT JOIN\n\t\tBD_Dictionary DD\n\tON\n\t\tDD.Type = 'Department' AND DD.Value = U.DepartmentId\n\tLEFT JOIN\n\t\tBD_Roles R\n\tON\n\t\tR.Id = U.Role\n\tWHERE\n\t\tU.Type = 1\n) T\nWHERE\n\t$Filters",
    "CacheToken": "",
    "Description": "获取内部员工总数",
    "Demo": ""
  },
  {
    "RowNum": 48,
    "Id": 1293,
    "Name": "ReadPageInternalUsers",
    "Type": "T-SQL",
    "Sign": 1,
    "Code": "SELECT\n\t*\nFROM (\n\tSELECT\n\t\tROW_NUMBER()OVER(ORDER BY $Orders) RowNum,\n\t\t*\n\tFROM (\n\t\tSELECT TOP (@End)\n\t\t\t*\n\t\tFROM (\n\t\t\tSELECT\n\t\t\t\tU.Id,\n\t\t\t\tU.UserName_c,\n\t\t\t\tU.Role,\n\t\t\t\tU.Nickname,\n\t\t\t\tU.Avatar,\n\t\t\t\tU.Contact,\n\t\t\t\tU.ContactPhone,\n\t\t\t\tU.IdNumber,\n\t\t\t\tU.DepartmentId,\n\t\t\t\tDD.Name DepartmentName,\n\t\t\t\tR.Name RoleName\n\t\t\tFROM\n\t\t\t\tBD_Users U\n\t\t\tLEFT JOIN\n\t\t\t\tBD_Dictionary DD\n\t\t\tON\n\t\t\t\tDD.Type = 'Department' AND DD.Value = U.DepartmentId\n\t\t\tLEFT JOIN\n\t\t\t\tBD_Roles R\n\t\t\tON\n\t\t\t\tR.Id = U.Role\n\t\t\tWHERE\n\t\t\t\tU.Type = 1\n\t\t) T\n\t\tWHERE\n\t\t\t$Filters\n\t\tORDER BY\n\t\t\t$Orders\n\t)T\n)T\nWHERE T.RowNum >= @Begin",
    "CacheToken": "",
    "Description": "分页读取内部员工信息",
    "Demo": ""
  },
  {
    "RowNum": 49,
    "Id": 1292,
    "Name": "GetOuterStaffInfoByIdNumber",
    "Type": "T-SQL",
    "Sign": 65,
    "Code": "SELECT \n\tOS.Id,\n\tOS.Name,\n\tOS.Sex,\n\tOS.IdNumber,\n\tOS.Mobile,\n\tOS.UnitId,\n\tOS.EnterDate,\n\tOS.Salary,\n\tOS.EmergencyContact,\n\tOS.EmergencyContactNumber,\n\tOS.ContractNumber,\n\tOS.WorkNumber,\n\tOS.Ethnicity,\n\tOS.Origin,\n\tOS.Education,\n\tOS.GraduateInstitutions,\n\tOS.IsMarried,\n\tOS.ContractEndDate,\n\tOS.BirthDate,\n\tOS.HomeAddress,\n\tOS.IdIssuanceAuthority,\n\tOS.IdEndDate,\n\tOS.BankCardNumber,\n\tOS.AccommodationState,\n\tOS.SocialSecurityNumber,\n\tOS.ProvidentFundNumber,\n\tOS.Remark,\n\tOS.ImportUserId,\n\tOS.ImportDate,\n\tOS.BankId,\n\tOS.WorkGroupName,\n\tOS.Age,\n\tOS.State,\n\tU.UnitName UnitName,\n\tB.BankName BankName,\n\tD.Name AccommodationStateName,\n\tBU.Nickname ImportUserName\nFROM\n\tBD_OuterStaff OS\nLEFT JOIN\n\tUnit U\nON\n\tU.Id = OS.UnitId\nLEFT JOIN\n\tDotBank B\nON\n\tB.Id = OS.BankId\nLEFT JOIN\n\tBD_Dictionary D\nON\n\tD.Type = 'AccommodationStates' AND D.Value = AccommodationState\nLEFT JOIN\n\tBD_Users BU\nON\n\tBU.Id = OS.ImportUserId\nWHERE\n\tOS.IdNumber = @IdNumber",
    "CacheToken": "",
    "Description": "通过身份证号读取派遣员工信息",
    "Demo": ""
  },
  {
    "RowNum": 50,
    "Id": 1291,
    "Name": "GetRoomReportKindNum",
    "Type": "T-SQL",
    "Sign": 65,
    "Code": "  select  sum(BackNum) as  BackNum, sum(QuitNoBackNum) as QuitNoBackNum\n  From\n\t (\n\n\t\t\tselect AlareIDText,AlareID,RoomNo,count(*)  as roomNum, sum(NormalNum) as NormalNum ,sum(BackNum) as  BackNum,sum(QuitNoBackNum) as QuitNoBackNum\n                        From\n                        (\n                           select r.*,d.name as AlareIDText, isNull(b.[1],0) as NormalNum ,isNull(b.[2],0) as BackNum,isNull(b.[3],0)  as QuitNoBackNum\n\t\t\t   from [dbo].[Room]   as r\n                           Left outer join [dbo].[BD_Dictionary]  as d on r.AlareId=d.Value and d.Type='AlareType'\n                           Left outer join \n                                                 (\n                                                     --实际每个房间床位使用数量\n                                                    SELECT * FROM (select RoomID,State,count(*) as Num from [dbo].[Bed]\n                                                     group by RoomID,State ) \n                                                    AS P\n                                                              PIVOT \n                                                             (\n                                                                 SUM(num) FOR \n                                                                 p.State IN ([1],[2],[3])\n                                                              ) AS T\n\n                                                   ) as b on r.Id=b.RoomId\n\n\t\t\t) as Result\n\t\t     group by AlareIDText,AlareID,RoomNo   \n      ) as Result2\n    WHERE\n\t\t$Filters",
    "CacheToken": "",
    "Description": "员工宿舍管理-员工宿舍报表（已退宿人数和离职未退宿人数）（汇总）",
    "Demo": ""
  },
  {
    "RowNum": 51,
    "Id": 1290,
    "Name": "RoomDel",
    "Type": "T-SQL",
    "Sign": 72,
    "Code": "Delete From [dbo].[Room] Where Id=@Id",
    "CacheToken": "",
    "Description": "员工宿舍管理-房间管理(删除)",
    "Demo": ""
  },
  {
    "RowNum": 52,
    "Id": 1289,
    "Name": "BedUpdate",
    "Type": "T-SQL",
    "Sign": 68,
    "Code": "Update Bed Set State=@State,Remark=@Remark,UpdateUserId=@UserID,UpdateTime=@Now \nWhere Id=@Id",
    "CacheToken": "",
    "Description": "员工宿舍管理-员工床位管理(修改)",
    "Demo": ""
  },
  {
    "RowNum": 53,
    "Id": 1288,
    "Name": "AuditDebits",
    "Type": "T-SQL",
    "Sign": 4,
    "Code": "DECLARE @IsFind BIT = 0;\n\nDECLARE @Sort int = 0;\n\nDECLARE @MaxSort int = 0;\n\n\n-- 判断当前用户是否有审核该记录的角色。\nSELECT @IsFind = 1 FROM DebitAudit DA Left Join DebitSteps DS ON DS.Sort = DA.Sort WHERE DS.AuditRoleId IN ($RoleIds) AND ($Filters)\n\nIF @IsFind = 1 BEGIN\n   SELECT @Sort=Max(DA.Sort) FROM DebitAudit DA Left Join DebitSteps DS ON DS.Sort = DA.Sort WHERE DS.AuditRoleId IN ($RoleIds) AND ($Filters)\n\tSELECT @MaxSort=max(Sort)+1 from DebitSteps;\n\tIF @AuditState = 1 BEGIN\n\t\t-- 如果审核步骤有下一步，则新增一条审核数据。\n\t\tif(@Sort<@MaxSort)\n\t\tBEGIN\n\t\tDECLARE @DebitId int = 0;\n\t\tINSERT DebitAudit(DebitId, Sort) \n\t\tSELECT  DA.DebitId,@Sort+1 FROM DebitAudit DA Left Join DebitSteps DS ON DS.Sort = DA.Sort WHERE DS.AuditRoleId IN ($RoleIds) AND ($Filters)\n\t\t\t\n        END\n\tEND\n        \n        if(@AuditContent is null)\n        BEGIN\n        set @AuditContent='同意'\n        END\n\tUPDATE DebitAudit SET AuditState = convert(bit,@AuditState), UserId = @UserId, AuditContent = @AuditContent, AuditTime = @Now WHERE Id IN (SELECT Id FROM DebitAudit DA Left Join DebitSteps DS ON DS.Sort = DA.Sort WHERE DS.AuditRoleId IN ($RoleIds) AND ($Filters))\n        BEGIN\n        UPDATE DebitMoney SET Sort = @Sort+1  WHERE  Id in ( select DebitId from DebitAudit where ( $Filters ) )\n       END\n       DECLARE @Title varchar(10) = '借支审核';--标题\n\n       DECLARE @Content varchar(50) = '您的借支已被';--内容\n\n       DECLARE @RoleName varchar(20)='';--角色名\n\n       DECLARE @Name varchar(20)='';--姓名\n\n       select @RoleName=Name from BD_Roles where  Id=@UserRoleId\n\n       DECLARE @StateContent varchar(10) = '[不同意]';--内容\n\n       if(convert(bit,@AuditState)=1)\n        BEGIN\n       set @StateContent='[同意]'\n        END\n       INSERT INTO Message(Title,Content,State,PushUserId,CreateTime,CreateUser)\n       SELECT  @Title,@StateContent+@Content+@RoleName+'审核('+AuditContent+')',0,u.Id,GETDATE(),11 FROM BD_OuterStaff o \nleft join BD_Users u on o.IdNumber=u.IdNumber left join  DebitMoney d on o.IdNumber=d.IDNumber  WHERE  d.Id in ( select DebitId from DebitAudit where ( $Filters ) )\n\nEND ELSE BEGIN\n\tRAISERROR('没有找到记录。', 16, 1);\n\tRETURN;\nEND",
    "CacheToken": "",
    "Description": "批量审核借支记录",
    "Demo": "如果是单个审核，添加一个筛选参数 \"[E]Id\": 1。\n如果是批量审核，添加一个筛选参数 \"[IN]Id\" : \"1,2,3,4,5...\"\n如果是全部审核，则不添加筛选参数。\n注意：如果没有添加筛选参数，则全部数据都会被审核！"
  },
  {
    "RowNum": 54,
    "Id": 1287,
    "Name": "RoomUpdate",
    "Type": "T-SQL",
    "Sign": 68,
    "Code": "UPDATE [dbo].[Room]\n   SET [AlareId] = @AlareId\n      ,[RoomNo] =@RoomNo\n      ,[AlreadyCount] = @AlreadyCount\n      ,[SurplusCount] = @SurplusCount\n      ,[TheoryCount] = @TheoryCount\n      ,[ActualCount] = @ActualCount\n      ,[RoomUserId] = @RoomUserId\n      ,[AddUserId] = @UserId\n      ,[AddTime] = @Now\n WHERE Id=@Id",
    "CacheToken": "",
    "Description": "员工宿舍管理-房间管理（修改）",
    "Demo": ""
  },
  {
    "RowNum": 55,
    "Id": 1286,
    "Name": "GetHouseReportTotal",
    "Type": "T-SQL",
    "Sign": 65,
    "Code": "SELECT COUNT(0) Total\n FROM (\n\t         select AlareIDText,count(*)  as roomNum,sum(AlreadyCount) as AlreadyCount,sum(TheoryCount) as TheoryCount,sum(ActualCount) as ActualCount ,\n\t   ( sum(TheoryCount)-sum(ActualCount) ) as ErrorCount\n                        From\n                        (\n                           select r.*,d.name as AlareIDText,b.* from [dbo].[Room]   as r\n                           Left outer join [dbo].[BD_Dictionary]  as d on r.AlareId=d.Value and d.Type='AlareType'\n                           Left outer join \n                                                 (\n                                                     --实际每个房间床位使用数量\n                                                    SELECT * FROM (select RoomID,State,count(*) as Num from [dbo].[Bed]\n                                                     group by RoomID,State ) \n                                                    AS P\n                                                              PIVOT \n                                                             (\n                                                                 SUM(num) FOR \n                                                                 p.State IN ([1],[2],[3])\n                                                              ) AS T\n\n                                                   ) as b on r.Id=b.RoomId\n\n                     ) as Result\n                   group by AlareIDText   \n\n\t) T\nWHERE\n\t\t\t$Filters",
    "CacheToken": "",
    "Description": "员工宿舍管理-房间报表(总条数)",
    "Demo": ""
  },
  {
    "RowNum": 56,
    "Id": 1285,
    "Name": "ReadPageHouseReport",
    "Type": "T-SQL",
    "Sign": 1,
    "Code": "SELECT\n\t*\nFROM (\n\tSELECT\n\t\tROW_NUMBER()OVER(ORDER BY $Orders) RowNum,\n\t\t*\n\tFROM (\n\t\tSELECT TOP (@End)\n\t\t\t*\n\t\tFROM (         \n       select AlareIDText,count(*)  as roomNum,sum(AlreadyCount) as AlreadyCount,sum(TheoryCount) as TheoryCount,sum(ActualCount) as ActualCount ,\n\t   ( sum(TheoryCount)-sum(ActualCount) ) as ErrorCount\n                        From\n                        (\n                           select r.*,d.name as AlareIDText,b.* from [dbo].[Room]   as r\n                           Left outer join [dbo].[BD_Dictionary]  as d on r.AlareId=d.Value and d.Type='AlareType'\n                           Left outer join \n                                                 (\n                                                     --实际每个房间床位使用数量\n                                                    SELECT * FROM (select RoomID,State,count(*) as Num from [dbo].[Bed]\n                                                     group by RoomID,State ) \n                                                    AS P\n                                                              PIVOT \n                                                             (\n                                                                 SUM(num) FOR \n                                                                 p.State IN ([1],[2],[3])\n                                                              ) AS T\n\n                                                   ) as b on r.Id=b.RoomId\n\n                     ) as Result\n                   group by AlareIDText              \n\n\t\t) T\n\t\tWHERE\n\t\t\t$Filters\n\t\tORDER BY\n\t\t\t$Orders\n\t)T\n)T\nWHERE T.RowNum >= @Begin",
    "CacheToken": "",
    "Description": "员工宿舍管理-房间报表",
    "Demo": ""
  },
  {
    "RowNum": 57,
    "Id": 1284,
    "Name": "GetCostTotal",
    "Type": "T-SQL",
    "Sign": 65,
    "Code": "SELECT COUNT(0) Total\n FROM (\n\t      select c.*,d.name as AlareIDText from [dbo].[Cost] as c \n              Left outer join [dbo].[BD_Dictionary]  as d on c.AlareId=d.Value and d.Type='AlareType'\n\n\t) T\nWHERE\n\t\t\t$Filters",
    "CacheToken": "",
    "Description": "员工宿舍管理-水电费报表(总条数)",
    "Demo": ""
  },
  {
    "RowNum": 58,
    "Id": 1283,
    "Name": "ReadPageCost",
    "Type": "T-SQL",
    "Sign": 1,
    "Code": "SELECT\n\t*\nFROM (\n\tSELECT\n\t\tROW_NUMBER()OVER(ORDER BY $Orders) RowNum,\n\t\t*\n\tFROM (\n\t\tSELECT TOP (@End)\n\t\t\t*\n\t\tFROM (\n\t\t\tSELECT\n\t\t\t\tC.Accessory,\n\t\t\t\tC.AlareId,\n\t\t\t\tC.Electricity,\n\t\t\t\tC.Id,\n\t\t\t\tC.Management,\n\t\t\t\tCONCAT(YEAR(C.Month), '-', MONTH(C.Month)) TextMonth,\n\t\t\t\tC.Month,\n\t\t\t\tC.Rent,\n\t\t\t\tC.UpdateTime,\n\t\t\t\tC.Url,\n\t\t\t\tC.Water,\n\t\t\t\td.Name as AlareIDText\n\t\t\tFROM\n\t\t\t\t[dbo].[Cost] C \n\t\t\tLeft outer join\n\t\t\t\t[dbo].[BD_Dictionary] D\n\t\t\tON\n\t\t\t\tC.AlareId = D.Value\n\t\t\tAND\n\t\t\t\tD.Type='AlareType'\n\t\t) T\n\t\tWHERE\n\t\t\t$Filters\n\t\tORDER BY\n\t\t\t$Orders\n\t)T\n)T\nWHERE T.RowNum >= @Begin",
    "CacheToken": "",
    "Description": "员工宿舍管理-水电费报表",
    "Demo": ""
  },
  {
    "RowNum": 59,
    "Id": 1282,
    "Name": "GetRoomReportTotal",
    "Type": "T-SQL",
    "Sign": 65,
    "Code": "SELECT COUNT(0) Total\n FROM (\n\t     select b.*, r.RoomNo,d.Name as AlareIdText ,o.Name,o.WorkGroupName,o.Mobile from [dbo].[Bed] as b\n\t    left outer join [dbo].[BD_OuterStaff] as o on o.IdNumber=b.IDNumbar\n\t   left outer join [dbo].[Room] as r on b.RoomId=r.Id\n\t   Left outer join [dbo].[BD_Dictionary]  as d on r.AlareId=d.Value and d.Type='AlareType'\n\t) T\nWHERE\n\t\t\t$Filters",
    "CacheToken": "",
    "Description": "员工宿舍管理-员工宿舍报表（总条数）",
    "Demo": ""
  },
  {
    "RowNum": 60,
    "Id": 1281,
    "Name": "ReadPageRoomReport",
    "Type": "T-SQL",
    "Sign": 1,
    "Code": "SELECT\n\t*\nFROM (\n\tSELECT\n\t\tROW_NUMBER()OVER(ORDER BY $Orders) RowNum,\n\t\t*\n\tFROM (\n\t\tSELECT TOP (@End)\n\t\t\t*\n\t\tFROM (\n                             \n                                 select b.*, r.RoomNo,d.Name as AlareIdText ,o.Name,o.WorkGroupName,o.Mobile from [dbo].[Bed] as b\n\t\t\t\t left outer join [dbo].[BD_OuterStaff] as o on o.IdNumber=b.IDNumbar\n\t\t\t         left outer join [dbo].[Room] as r on b.RoomId=r.Id\n\t\t\t\tLeft outer join [dbo].[BD_Dictionary]  as d on r.AlareId=d.Value and d.Type='AlareType'\n\t\t) T\n\t\tWHERE\n\t\t\t$Filters\n\t\tORDER BY\n\t\t\t$Orders\n\t)T\n)T\nWHERE T.RowNum >= @Begin",
    "CacheToken": "",
    "Description": "员工宿舍管理-员工宿舍报表",
    "Demo": ""
  },
  {
    "RowNum": 61,
    "Id": 1280,
    "Name": "GetBedTotal",
    "Type": "T-SQL",
    "Sign": 65,
    "Code": "SELECT COUNT(0) Total\n FROM (\n\t   select b.*, r.RoomNo,d.Name as AlareIdText ,o.Name,o.WorkGroupName,o.Mobile from [dbo].[Bed] as b\n\t   left outer join [dbo].[BD_OuterStaff] as o on o.IdNumber=b.IDNumbar\n\t   left outer join [dbo].[Room] as r on b.RoomId=r.Id\n\t  Left outer join [dbo].[BD_Dictionary]  as d on r.AlareId=d.Value and d.Type='AlareType'\n\t) T\nWHERE\n\t\t\t$Filters",
    "CacheToken": "",
    "Description": "员工宿舍管理-员工床位管理（总条数）",
    "Demo": ""
  },
  {
    "RowNum": 62,
    "Id": 1279,
    "Name": "ReadPageBed",
    "Type": "T-SQL",
    "Sign": 1,
    "Code": "SELECT\n\t*\nFROM (\n\tSELECT\n\t\tROW_NUMBER()OVER(ORDER BY $Orders) RowNum,\n\t\t*\n\tFROM (\n\t\tSELECT TOP (@End)\n\t\t\t*\n\t\tFROM (\n                             \n                                 select b.*, r.RoomNo,d.Name as AlareIdText ,o.Name,o.WorkGroupName,o.Mobile from [dbo].[Bed] as b\n\t\t\t\t left outer join [dbo].[BD_OuterStaff] as o on o.IdNumber=b.IDNumbar\n\t\t\t         left outer join [dbo].[Room] as r on b.RoomId=r.Id\n\t\t\t\tLeft outer join [dbo].[BD_Dictionary]  as d on r.AlareId=d.Value and d.Type='AlareType'\n\t\t) T\n\t\tWHERE\n\t\t\t$Filters\n\t\tORDER BY\n\t\t\t$Orders\n\t)T\n)T\nWHERE T.RowNum >= @Begin",
    "CacheToken": "",
    "Description": "员工宿舍管理-员工床位管理",
    "Demo": ""
  },
  {
    "RowNum": 63,
    "Id": 1278,
    "Name": "InsertRoom",
    "Type": "T-SQL",
    "Sign": 66,
    "Code": "/*\nif 1=1 BEGIN\n\tRAISERROR('已经重复。', 16, 1);\n\tRETURN;\nEND\n*/\nINSERT INTO [dbo].[Room]  ([AlareId] ,[RoomNo] ,[AlreadyCount],[SurplusCount] ,[TheoryCount] ,[ActualCount] ,[RoomUserId] ,[AddUserId] ,[AddTime])\n     VALUES (@AlareId, @RoomNo, @AlreadyCount, @SurplusCount,  @TheoryCount,@ActualCount, @RoomUserId, @UserId,  @Now)",
    "CacheToken": "",
    "Description": "员工宿舍管理（领导层）-房间管理 （新增）",
    "Demo": ""
  },
  {
    "RowNum": 64,
    "Id": 1277,
    "Name": "ImportProvidentFunds",
    "Type": "System",
    "Sign": 66,
    "Code": "// SystemImpl",
    "CacheToken": "",
    "Description": "导入派遣员工公积金信息，支持 Excel 数据和文本数据",
    "Demo": ""
  },
  {
    "RowNum": 65,
    "Id": 1276,
    "Name": "ImportSocialSecuritys",
    "Type": "System",
    "Sign": 66,
    "Code": "// SystemImpl",
    "CacheToken": "",
    "Description": "导入派遣员工社保信息，支持 Excel 数据和文本数据",
    "Demo": ""
  },
  {
    "RowNum": 66,
    "Id": 1275,
    "Name": "ImportUserPayrolls",
    "Type": "System",
    "Sign": 66,
    "Code": "// SystemImpl",
    "CacheToken": "",
    "Description": "导入派遣员工工资信息，支持 Excel 数据和文本数据",
    "Demo": ""
  },
  {
    "RowNum": 67,
    "Id": 1274,
    "Name": "ReadPageSocialSecuritys",
    "Type": "T-SQL",
    "Sign": 1,
    "Code": "SELECT\n\t*\nFROM (\n\tSELECT\n\t\tROW_NUMBER()OVER(ORDER BY $Orders) RowNum,\n\t\t*\n\tFROM (\n\t\tSELECT TOP (@End)\n\t\t\t*\n\t\tFROM (\n\t\t\tSELECT\n\t\t\t\tSS.Id,\n\t\t\t\tSS.IdNumber,\n\t\t\t\tSS.SBNo,\n\t\t\t\tSS.YingshouTotal,\n\t\t\t\tSS.GerenTotal,\n\t\t\t\tSS.MethTotal,\n\t\t\t\tSS.YLBaseMoney,\n\t\t\t\tSS.YLMethTotal,\n\t\t\t\tSS.YLMyMoney,\n\t\t\t\tSS.YiLBaseMoney,\n\t\t\t\tSS.YiLMethTotal,\n\t\t\t\tSS.YiLMyMoney,\n\t\t\t\tSS.GSBaseMoney,\n\t\t\t\tSS.GSMethMoney,\n\t\t\t\tSS.GSMyMoney,\n\t\t\t\tSS.SYBaseMoney,\n\t\t\t\tSS.SYMethMoney,\n\t\t\t\tSS.SYMyMoney,\n\t\t\t\tSS.ShYBaseMoney,\n\t\t\t\tSS.ShYMethMoney,\n\t\t\t\tSS.ShYMyMoney,\n\t\t\t\tSS.Remark,\n\t\t\t\tSS.AddTime,\n\t\t\t\tCONCAT(YEAR(SS.AddMonth), '-', MONTH(SS.AddMonth)) TextAddMonth,\n\t\t\t\tSS.AddMonth,\n\t\t\t\tOS.Name,\n\t\t\t\tOS.Mobile\n\t\t\tFROM\n\t\t\t\tSocialSecurity SS\n\t\t\tLEFT JOIN\n\t\t\t\tBD_OuterStaff OS\n\t\t\tON\n\t\t\t\tOS.IdNumber = SS.IDNumber\n\t\t) T\n\t\tWHERE\n\t\t\t$Filters\n\t\tORDER BY\n\t\t\t$Orders\n\t)T\n)T\nWHERE T.RowNum >= @Begin",
    "CacheToken": "",
    "Description": "分页查询社保缴费信息",
    "Demo": ""
  },
  {
    "RowNum": 68,
    "Id": 1273,
    "Name": "GetSocialSecuritysTotal",
    "Type": "T-SQL",
    "Sign": 65,
    "Code": "SELECT\n\tCOUNT(0) Total\nFROM (\n\tSELECT\n\t\tSS.IdNumber,\n\t\tSS.SBNo,\n\t\tSS.YingshouTotal,\n\t\tSS.GerenTotal,\n\t\tSS.MethTotal,\n\t\tSS.YLBaseMoney,\n\t\tSS.YLMethTotal,\n\t\tSS.YLMyMoney,\n\t\tSS.YiLBaseMoney,\n\t\tSS.YiLMethTotal,\n\t\tSS.YiLMyMoney,\n\t\tSS.GSBaseMoney,\n\t\tSS.GSMethMoney,\n\t\tSS.GSMyMoney,\n\t\tSS.SYBaseMoney,\n\t\tSS.SYMethMoney,\n\t\tSS.SYMyMoney,\n\t\tSS.ShYBaseMoney,\n\t\tSS.ShYMethMoney,\n\t\tSS.ShYMyMoney,\n\t\tSS.Remark,\n\t\tSS.AddTime,\n\t\tSS.AddMonth,\n\t\tOS.Name,\n\t\tOS.Mobile\n\tFROM\n\t\tSocialSecurity SS\n\tLEFT JOIN\n\t\tBD_OuterStaff OS\n\tON\n\t\tOS.IdNumber = SS.IDNumber\n) T\nWHERE\n\t$Filters",
    "CacheToken": "",
    "Description": "获取社保缴费信息总数",
    "Demo": ""
  },
  {
    "RowNum": 69,
    "Id": 1272,
    "Name": "InsertSocialSecurity",
    "Type": "T-SQL",
    "Sign": 2,
    "Code": "IF NOT EXISTS(SELECT 1 FROM BD_OuterStaff WHERE IdNumber = @IdNumber) BEGIN\n\tGOTO StaffNotExist;\nEND\n\nSET @AddMonth = CAST(DATEADD(DAY, 1 - DAY(@AddMonth), @AddMonth) AS DATE) /* 选择月份的第一天 */\n\nIF EXISTS(SELECT 1 FROM SocialSecurity WHERE IDNumber = @IdNumber AND AddMonth = @AddMonth) BEGIN\n\tGOTO ExistCurrentMonth;\nEND\n\nINSERT SocialSecurity(IDNumber, SBNo, YingshouTotal, GerenTotal, MethTotal, YLBaseMoney, YLMethTotal, YLMyMoney, YiLBaseMoney, YiLMethTotal, YiLMyMoney, GSBaseMoney, GSMethMoney, GSMyMoney, SYBaseMoney, SYMethMoney, SYMyMoney, ShYBaseMoney, ShYMethMoney, ShYMyMoney, Remark, AddUserID, Addtime, AddMonth, UpdateTime, UpdateUserId)\n\tVALUES(@IdNumber, @SBNo, @YingshouTotal, @GerenTotal, @MethTotal, @YLBaseMoney, @YLMethTotal, @YLMyMoney, @YiLBaseMoney, @YiLMethTotal, @YiLMyMoney, @GSBaseMoney, @GSMethMoney, @GSMyMoney, @SYBaseMoney, @SYMethMoney, @SYMyMoney, @ShYBaseMoney, @ShYMethMoney, @ShYMyMoney, @Remark, @UserId, @Now, @AddMonth, NULL, NULL)\n\nUPDATE BD_OuterStaff SET SocialSecurityNumber = ISNULL(@SBNo, SocialSecurityNumber) WHERE IdNumber = @IdNumber;\nRETURN;\n\nStaffNotExist:\n\tRAISERROR('员工身份证不存在！', 16, 1);\n\tRETURN;\nExistCurrentMonth:\n\tRAISERROR('员工当前月份已经导入！', 16, 1);\n\tRETURN;",
    "CacheToken": "",
    "Description": "新增社保缴费信息",
    "Demo": ""
  },
  {
    "RowNum": 70,
    "Id": 1271,
    "Name": "GetProvidentFundsTotal",
    "Type": "T-SQL",
    "Sign": 65,
    "Code": "SELECT\n\tCOUNT(0) Total\nFROM (\n\tSELECT\n\t\tGJJ.IDNumber,\n\t\tGJJ.GgjNo,\n\t\tGJJ.BaseMoney,\n\t\tGJJ.MyRatio,\n\t\tGJJ.MethRatio,\n\t\tGJJ.Money,\n\t\tGJJ.Month,\n\t\tGJJ.AddTime,\n\t\tGJJ.AddMonth,\n\t\tOS.Name,\n\t\tOS.Mobile\n\tFROM\n\t\tGongjinjing GJJ\n\tLEFT JOIN\n\t\tBD_OuterStaff OS\n\tON\n\t\tOS.IdNumber = GJJ.IDNumber\n) T\nWHERE\n\t$Filters",
    "CacheToken": "",
    "Description": "获取公积金缴费信息总数",
    "Demo": ""
  },
  {
    "RowNum": 71,
    "Id": 1270,
    "Name": "ReadPageProvidentFunds",
    "Type": "T-SQL",
    "Sign": 1,
    "Code": "SELECT\n\t*\nFROM (\n\tSELECT\n\t\tROW_NUMBER()OVER(ORDER BY $Orders) RowNum,\n\t\t*\n\tFROM (\n\t\tSELECT TOP (@End)\n\t\t\t*\n\t\tFROM (\n\t\t\tSELECT\n\t\t\t\tGJJ.Id,\n\t\t\t\tGJJ.IdNumber,\n\t\t\t\tGJJ.GgjNo,\n\t\t\t\tGJJ.BaseMoney,\n\t\t\t\tGJJ.MyRatio,\n\t\t\t\tGJJ.MethRatio,\n\t\t\t\tGJJ.Money,\n\t\t\t\tGJJ.Month,\n\t\t\t\tGJJ.AddTime,\n\t\t\t\tGJJ.AddMonth,\n\t\t\t\tCONCAT(YEAR(GJJ.AddMonth), '-', MONTH(GJJ.AddMonth)) TextAddMonth,\n\t\t\t\tOS.Name,\n\t\t\t\tOS.Mobile\n\t\t\tFROM\n\t\t\t\tGongjinjing GJJ\n\t\t\tLEFT JOIN\n\t\t\t\tBD_OuterStaff OS\n\t\t\tON\n\t\t\t\tOS.IdNumber = GJJ.IDNumber\n\t\t) T\n\t\tWHERE\n\t\t\t$Filters\n\t\tORDER BY\n\t\t\t$Orders\n\t)T\n)T\nWHERE T.RowNum >= @Begin",
    "CacheToken": "",
    "Description": "分页读取公积金缴费信息",
    "Demo": ""
  },
  {
    "RowNum": 72,
    "Id": 1269,
    "Name": "InsertProvidentFund",
    "Type": "T-SQL",
    "Sign": 2,
    "Code": "IF NOT EXISTS(SELECT 1 FROM BD_OuterStaff WHERE IdNumber = @IdNumber) BEGIN\n\tGOTO StaffNotExist;\nEND\n\nSET @AddMonth = CAST(DATEADD(DAY, 1 - DAY(@AddMonth), @AddMonth) AS DATE) /* 选择月份的第一天 */\n\nIF EXISTS(SELECT 1 FROM Gongjinjing WHERE IDNumber = @IdNumber AND AddMonth = @AddMonth) BEGIN\n\tGOTO ExistCurrentMonth;\nEND\n\nINSERT Gongjinjing(IDNumber, GgjNo, BaseMoney, MyRatio, MethRatio, Money, Month, AddTime, AddMonth, AddUserId, UpdateTime, UpdateUserId)\n\tVALUES(@IdNumber, @GgjNo, @BaseMoney, @MyRatio, @MethRatio, @Money, @Month, @Now, @AddMonth, @UserId, NULL, NULL)\n\nUPDATE BD_OuterStaff SET ProvidentFundNumber = ISNULL(@GgjNo, ProvidentFundNumber) WHERE IdNumber = @IdNumber;\n\nRETURN;\n\nStaffNotExist:\n\tRAISERROR('员工身份证不存在！', 16, 1);\n\tRETURN;\nExistCurrentMonth:\n\tRAISERROR('员工当前月份已经导入！', 16, 1);\n\tRETURN;",
    "CacheToken": "",
    "Description": "新增公积金缴费信息",
    "Demo": ""
  },
  {
    "RowNum": 73,
    "Id": 1268,
    "Name": "InsertUserPayroll",
    "Type": "T-SQL",
    "Sign": 2,
    "Code": "IF NOT EXISTS(SELECT 1 FROM BD_OuterStaff WHERE IdNumber = @IdNumber) BEGIN\n\tGOTO StaffNotExist;\nEND\n\nSET @AddMonth = CAST(DATEADD(DAY, 1 - DAY(@AddMonth), @AddMonth) AS DATE) /* 选择月份的第一天 */\n\nIF EXISTS(SELECT 1 FROM UserPayroll WHERE IDNumber = @IdNumber AND AddMonth = @AddMonth) BEGIN\n\tGOTO ExistCurrentMonth;\nEND\n\nINSERT UserPayroll(IDNumber,Payroll, ShouldWages, PersonalTax, Debit, Utilities, Rent, Poundage, SocialSecurity, Fund, AddMonth, CreateTime, CreateUser, UpdateTime, UpdateUser)\n\tVALUES(@IdNumber, @Payroll, @ShouldWages, @PersonalTax, @Debit, @Utilities, @Rent, @Poundage, @SocialSecurity, @Fund, @AddMonth, @Now, @UserId, NULL, NULL)\n\nRETURN;\n\nStaffNotExist:\n\tRAISERROR('员工身份证不存在！', 16, 1);\n\tRETURN;\nExistCurrentMonth:\n\tRAISERROR('员工当前月份已经导入！', 16, 1);\n\tRETURN;",
    "CacheToken": "",
    "Description": "新增员工工资信息",
    "Demo": ""
  },
  {
    "RowNum": 74,
    "Id": 1267,
    "Name": "UpdateDebitSteps",
    "Type": "T-SQL",
    "Sign": 1,
    "Code": "update DebitSteps set Name=@Name,AuditRoleId=@AuditRoleId where Sort=@Sort",
    "CacheToken": "",
    "Description": "修改借支步骤",
    "Demo": ""
  },
  {
    "RowNum": 75,
    "Id": 1266,
    "Name": "AddDebitSteps",
    "Type": "T-SQL",
    "Sign": 2,
    "Code": "DECLARE @count int = 0;\n\n-- 判断当前步骤是否存在。\nselect @count=count(*) from DebitSteps where Sort=@Sort\n\nIF @count= 0 BEGIN\nINSERT INTO DebitSteps(Sort, Name, AuditRoleId) VALUES(@Sort,@Name,@AuditRoleId)\nEND ",
    "CacheToken": "",
    "Description": "添加借支步骤",
    "Demo": ""
  },
  {
    "RowNum": 76,
    "Id": 1265,
    "Name": "GetDebitStepsTotal",
    "Type": "T-SQL",
    "Sign": 65,
    "Code": "SELECT\n\t\t\tCOUNT(0) Total\n\t\tFROM (\n\t\t\tselect Sort,Name,AuditRoleId  from DebitSteps\n\t\t) T\n\t\tWHERE\n\t\t\t$Filters",
    "CacheToken": "GetDebitStepsTotal",
    "Description": "获取借支步骤",
    "Demo": ""
  },
  {
    "RowNum": 77,
    "Id": 1264,
    "Name": "ReadPageDebitSteps",
    "Type": "T-SQL",
    "Sign": 1,
    "Code": "SELECT\n\t*\nFROM (\n\tSELECT\n\t\tROW_NUMBER()OVER(ORDER BY $Orders) RowNum,\n\t\t*\n\tFROM (\n\t\tSELECT TOP (@End)\n\t\t\t*\n\t\tFROM (\n\t\t\tselect Sort,Name,AuditRoleId  from DebitSteps\n\t\t) T\n\t\tWHERE\n\t\t\t$Filters\n\t\tORDER BY\n\t\t\t$Orders\n\t)T\n)T\nWHERE T.RowNum >= @Begin",
    "CacheToken": "",
    "Description": "分页查询借支步骤",
    "Demo": ""
  },
  {
    "RowNum": 78,
    "Id": 1263,
    "Name": "GetDebitFailCount",
    "Type": "T-SQL",
    "Sign": 65,
    "Code": "select Count(1) Fail from DebitAudit de  left join  DebitMoney d on de.DebitId=d.Id where de.AuditState =0 and de.Sort in (select Sort from DebitSteps where AuditRoleId in($RoleIds)) and de.UserId=@UserId",
    "CacheToken": "",
    "Description": "借支统计审核失败",
    "Demo": ""
  },
  {
    "RowNum": 79,
    "Id": 1262,
    "Name": "GetDebitCount",
    "Type": "T-SQL",
    "Sign": 65,
    "Code": " select Total,(CASE WHEN SumMoney IS NULL THEN 0 ELSE SumMoney END)  SumMoney,(CASE WHEN AvgMoney IS NULL THEN 0 ELSE AvgMoney END)  AvgMoney from \n(\nselect Count(1) Total,Sum(Money) SumMoney,AVG(Money) AvgMoney  from DebitAudit de\nleft join  DebitMoney d\non de.DebitId=d.Id\nwhere de.AuditState IS NULL and de.Sort in (select Sort from DebitSteps where AuditRoleId in($RoleIds)) \n) T",
    "CacheToken": "",
    "Description": "借支统计",
    "Demo": ""
  },
  {
    "RowNum": 80,
    "Id": 1259,
    "Name": "GetDebitMoneyFinanceTotal",
    "Type": "T-SQL",
    "Sign": 65,
    "Code": "SELECT\n\t\t\tCOUNT(0) Total\n\t\tFROM (\n\t\t\tSELECT de.Id,d.Content,b.WorkNumber,b.Name,b.IdNumber,b.BankCardNumber,do.BankName, u.UnitName,(select Payroll from UserPayroll  where CreateTime=(select max(CreateTime) from UserPayroll where IDNumber=d.IDNumber )) Payroll ,d.Money,(select count(Id) from DebitMoney m where m.IDNumber=d.IDNumber and DATEDIFF (month,m.CreateTime,d.CreateTime ) <1 )  Times,(select sum(Money) from DebitMoney m where m.IDNumber=d.IDNumber and DATEDIFF (month,m.CreateTime,d.CreateTime ) <1 )  MoneyTotal,de.AuditContent from DebitAudit de left join  DebitMoney d on de.DebitId=d.Id left join BD_OuterStaff b on d.IDNumber=b.IdNumber left join Unit u on b.UnitId=u.Id left join DotBank do on b.BankId=do.Id where   de.Sort=( select MAX(Sort) from DebitSteps) and de.Sort in (select Sort from DebitSteps where AuditRoleId in($RoleIds)) \n\t\t) T\n\t\tWHERE\n\t\t\t$Filters",
    "CacheToken": "",
    "Description": "分页查询员工借支总数（出纳）",
    "Demo": ""
  },
  {
    "RowNum": 81,
    "Id": 1258,
    "Name": "ReadPageDebitMoneyFinance",
    "Type": "T-SQL",
    "Sign": 1,
    "Code": "SELECT\n\t*\nFROM (\n\tSELECT\n\t\tROW_NUMBER() OVER(ORDER BY $Orders) RowNum,\n\t\t*\n\tFROM (\n\t\tSELECT TOP (@End)\n\t\t\t*\n\t\tFROM (\n\t\t\tSELECT\n\t\t\t\tde.Id,d.Content,b.WorkNumber,b.Name,b.IdNumber,b.BankCardNumber,do.BankName, u.UnitName,\n\t\t\t\t(select Payroll from UserPayroll  where CreateTime=(select max(CreateTime) from UserPayroll where IDNumber=d.IDNumber ))  Payroll ,\n\t\t\t\td.Money,\n\t\t\t\t(select count(Id) from DebitMoney m where m.IDNumber=d.IDNumber and DATEDIFF (month,m.CreateTime,d.CreateTime ) <1 )  Times,\n\t\t\t\t(select sum(Money) from DebitMoney m where m.IDNumber=d.IDNumber and DATEDIFF (month,m.CreateTime,d.CreateTime ) <1 ) MoneyTotal,\n\t\t\t\tde.AuditContent\n\t\t\tfrom\n\t\t\t\tDebitAudit de\n\t\t\tleft join  DebitMoney d on de.DebitId=d.Id\n\t\t\tleft join BD_OuterStaff b on d.IDNumber=b.IdNumber\n\t\t\tleft join Unit u on b.UnitId=u.Id\n\t\t\tleft join DotBank do on b.BankId=do.Id\n\t\t\twhere  de.Sort=( select MAX(Sort) from DebitSteps) and de.Sort in (select Sort from DebitSteps where AuditRoleId in($RoleIds)) \n\t\t) T\n\t\tWHERE\n\t\t\t$Filters\n\t\tORDER BY\n\t\t\t$Orders\n\t) T\n) T\n\n   WHERE T.RowNum >= @Begin",
    "CacheToken": "",
    "Description": "分页查询员工借支（出纳）",
    "Demo": ""
  },
  {
    "RowNum": 82,
    "Id": 1257,
    "Name": "GetDebitMoneyManagerTotal",
    "Type": "T-SQL",
    "Sign": 65,
    "Code": "SELECT\n\t\t\tCOUNT(0) Total\n\t\tFROM (\n\t\t\tSELECT de.Id,d.Content,b.WorkNumber,b.Name,b.IdNumber,b.BankCardNumber,do.BankName, u.UnitName,(select Payroll from UserPayroll  where CreateTime=(select max(CreateTime) from UserPayroll where IDNumber=d.IDNumber )) Payroll ,d.Money,(select count(Id) from DebitMoney m where m.IDNumber=d.IDNumber and DATEDIFF (month,m.CreateTime,d.CreateTime ) <1 )Times,(select sum(Money) from DebitMoney m where m.IDNumber=d.IDNumber and DATEDIFF (month,m.CreateTime,d.CreateTime ) <1 )MoneyTotal,\n(select Name from BD_OuterStaff bd where bd.Id=b.ImportUserId )Stationer,( select AuditTime from DebitAudit  de where d.Id= de.DebitId and de.AuditState=1 and de.Sort=1) AuditTime,de.AuditContent \nfrom DebitAudit de\nleft join  DebitMoney d\non de.DebitId=d.Id\nleft join BD_OuterStaff b\non d.IDNumber=b.IdNumber \nleft join Unit u on b.UnitId=u.Id \nleft join DotBank do on b.BankId=do.Id\nwhere de.AuditState is null and de.Sort in (select Sort from DebitSteps where AuditRoleId in($RoleIds)) \n\t\t) T\n\t\tWHERE\n\t\t\t$Filters",
    "CacheToken": "",
    "Description": "获取员工借支总数（驻点管理员、财务、总经理）",
    "Demo": ""
  },
  {
    "RowNum": 83,
    "Id": 1256,
    "Name": "ReadPageDebitMoneyManager",
    "Type": "T-SQL",
    "Sign": 1,
    "Code": "SELECT\n\t*\nFROM (\n\tSELECT\n\t\tROW_NUMBER()OVER(ORDER BY $Orders) RowNum,\n\t\t*\n\tFROM (\n\t\tSELECT TOP (@End)\n\t\t\t*\n                  FROM (\n\t\tSELECT de.Id,d.Content,b.WorkNumber,b.Name,b.IdNumber,b.BankCardNumber,do.BankName, u.UnitName,(select Payroll from UserPayroll  where CreateTime=(select max(CreateTime) from UserPayroll where IDNumber=d.IDNumber )) Payroll ,d.Money,(select count(Id) from DebitMoney m where m.IDNumber=d.IDNumber and DATEDIFF (month,m.CreateTime,d.CreateTime ) <1 )Times,(select sum(Money) from DebitMoney m where m.IDNumber=d.IDNumber and DATEDIFF (month,m.CreateTime,d.CreateTime ) <1 )MoneyTotal,\n(select Name from BD_OuterStaff bd where bd.Id=b.ImportUserId )Stationer,( select AuditTime from DebitAudit  de where d.Id= de.DebitId and de.AuditState=1 and de.Sort=1) AuditTime,de.AuditContent \nfrom DebitAudit de\nleft join  DebitMoney d\non de.DebitId=d.Id\nleft join BD_OuterStaff b\non d.IDNumber=b.IdNumber \nleft join Unit u on b.UnitId=u.Id \nleft join DotBank do on b.BankId=do.Id\nwhere de.AuditState  is null and de.Sort in (select Sort from DebitSteps where AuditRoleId in($RoleIds)) \n\t\t) T\n\n\t\tWHERE\n\t\t\t$Filters\n\t\tORDER BY\n\t\t\t$Orders\n\t) T\n\n) T \n\n WHERE T.RowNum >= @Begin",
    "CacheToken": "",
    "Description": "分页查询员工借支（驻点管理员、财务、总经理）",
    "Demo": ""
  },
  {
    "RowNum": 84,
    "Id": 1255,
    "Name": "GetRoomsTotal",
    "Type": "T-SQL",
    "Sign": 65,
    "Code": "SELECT COUNT(0) Total\n FROM (\n\t    select r.*,d.name as AlareIDText,u.Contact as RooUserName,u.ContactPhone  from [dbo].[Room] as r\n            Left outer join [dbo].[BD_Dictionary]  as d on r.AlareId=d.Value and d.Type='AlareType'\n            Left outer join [dbo].[BD_Users]  as u on r.RoomUserId=u.Id \n\t) T\nWHERE\n\t\t\t$Filters",
    "CacheToken": "",
    "Description": "宿舍管理（领导层）-房间管理 （总条数）",
    "Demo": ""
  },
  {
    "RowNum": 85,
    "Id": 1254,
    "Name": "APPGetAllBank",
    "Type": "T-SQL",
    "Sign": 1,
    "Code": "select Id,BankName from DotBank",
    "CacheToken": "",
    "Description": "获取全部银行信息",
    "Demo": ""
  },
  {
    "RowNum": 86,
    "Id": 1253,
    "Name": "ReadPageRooms",
    "Type": "T-SQL",
    "Sign": 1,
    "Code": "SELECT\n\t*\nFROM (\n\tSELECT\n\t\tROW_NUMBER()OVER(ORDER BY $Orders) RowNum,\n\t\t*\n\tFROM (\n\t\tSELECT TOP (@End)\n\t\t\t*\n\t\tFROM (\n                            select r.*,d.name as AlareIDText,u.Contact as RooUserName,u.ContactPhone  from [dbo].[Room] as r\n                            Left outer join [dbo].[BD_Dictionary]  as d on r.AlareId=d.Value and d.Type='AlareType'\n                             Left outer join [dbo].[BD_Users]  as u on r.RoomUserId=u.Id \n\t\t) T\n\t\tWHERE\n\t\t\t$Filters\n\t\tORDER BY\n\t\t\t$Orders\n\t)T\n)T\nWHERE T.RowNum >= @Begin\n",
    "CacheToken": "",
    "Description": "宿舍管理（领导层）-房间管理",
    "Demo": ""
  },
  {
    "RowNum": 87,
    "Id": 1246,
    "Name": "GetDebitMoneyStationerTotal",
    "Type": "T-SQL",
    "Sign": 65,
    "Code": "SELECT\n\t\t\tCOUNT(0) Total\n\t\tFROM (\n\t\t\tSELECT de.Id,b.WorkNumber,b.Name,b.IdNumber,b.Mobile,(select ShouldWages from UserPayroll  where CreateTime=(select max(CreateTime) from UserPayroll where IDNumber=d.IDNumber )) ShouldWages,u.UnitName,d.Money,(select count(Id) from DebitMoney m where m.IDNumber=d.IDNumber and DATEDIFF (month,m.CreateTime,d.CreateTime ) <1 )Times,(select sum(Money) from DebitMoney m where m.IDNumber=d.IDNumber and DATEDIFF (month,m.CreateTime,d.CreateTime ) <1 )MoneyTotal,d.Content\nfrom DebitAudit de \nleft join  DebitMoney d\non de.DebitId=d.Id\nleft join BD_OuterStaff b\non d.IDNumber=b.IdNumber \nleft join Unit u on b.UnitId=u.Id \nwhere IsStill<1 and b.ImportUserId=@UserId and de.AuditState  is null and de.Sort in (select Sort from DebitSteps where AuditRoleId in($RoleIds)) \n\t\t) T\n\t\tWHERE\n\t\t\t$Filters",
    "CacheToken": "",
    "Description": "获取员工借支总数（驻点员）",
    "Demo": ""
  },
  {
    "RowNum": 88,
    "Id": 1245,
    "Name": "UpdateRepairByUser",
    "Type": "T-SQL",
    "Sign": 4,
    "Code": "UPDATE Repair SET AlareId = @AlareId, RepContent = @RepContent, RepCount = @RepCount, RepRemark = @RepRemark, RepTime = @Now, State = 0, RoomNumber = @RoomNumber WHERE Id=@Id AND RepUserId = @UserId AND State = 2",
    "CacheToken": "",
    "Description": "宿舍维修驳回重新申请",
    "Demo": ""
  },
  {
    "RowNum": 89,
    "Id": 1238,
    "Name": "ReadPageDebitMoneyStationer",
    "Type": "T-SQL",
    "Sign": 1,
    "Code": "SELECT\n\t*\nFROM (\n\tSELECT\n\t\tROW_NUMBER()OVER(ORDER BY $Orders) RowNum,\n\t\t*\n\tFROM (\n\t\tSELECT TOP (@End)\n\t\t\t*\n\t\tFROM (\n\t\t\tSELECT de.Id,b.WorkNumber,b.Name,b.IdNumber,b.Mobile,(select ShouldWages from UserPayroll  where CreateTime=(select max(CreateTime) from UserPayroll where IDNumber=d.IDNumber )) ShouldWages,u.UnitName,d.Money,(select count(Id) from DebitMoney m where m.IDNumber=d.IDNumber and DATEDIFF (month,m.CreateTime,d.CreateTime ) <1 )Times,(select sum(Money) from DebitMoney m where m.IDNumber=d.IDNumber and DATEDIFF (month,m.CreateTime,d.CreateTime ) <1 )MoneyTotal,d.Content\nfrom DebitAudit de \nleft join  DebitMoney d\non de.DebitId=d.Id\nleft join BD_OuterStaff b\non d.IDNumber=b.IdNumber \nleft join Unit u on b.UnitId=u.Id \nwhere IsStill<1 and b.ImportUserId=@UserId and de.AuditState  is null and de.Sort in (select Sort from DebitSteps where AuditRoleId in($RoleIds)) \n\t\t) T\n\t\tWHERE\n\t\t\t$Filters\n\t\tORDER BY\n\t\t\t$Orders\n\t) T\n) T\nWHERE T.RowNum >= @Begin",
    "CacheToken": "",
    "Description": "分页查询员工借支（驻点员）",
    "Demo": ""
  },
  {
    "RowNum": 90,
    "Id": 1237,
    "Name": "GetRepairTotal",
    "Type": "T-SQL",
    "Sign": 65,
    "Code": "SELECT\n\tCOUNT(0) Total\nFROM (\n\tSELECT\n\t\tR.Id,\n\t\tR.AlareId,\n\t\tR.RepContent,\n\t\tR.RepCount,\n\t\tR.State,\n\t\tR.RepRemark,\n\t\tR.ReviewUserId,\n\t\tR.ReviewTime,\n\t\tR.ReviewRemark,\n\t\tR.RepUserId,\n\t\tR.RepTime,\n\t\tR.RoomNumber,\n\t\tRVU.Nickname ReviewUserName,\n\t\tRPU.Nickname RepUserName,\n\t\tAD.Name AlareName\n\tFROM\n\t\tRepair R\n\tLEFT JOIN\n\t\tBD_Users RVU\n\tON\n\t\tRVU.Id = R.ReviewUserId\n\tLEFT JOIN\n\t\tBD_Users RPU\n\tON\n\t\tRPU.Id = R.RepUserId\n\tLEFT JOIN\n\t\tBD_Dictionary AD\n\tON\n\t\tAD.Type = 'AlareType' AND AD.Value = R.AlareId\n       WHERE R.RepUserId=@UserId\n) T\nWHERE\n\t$Filters",
    "CacheToken": "",
    "Description": "宿舍维修表获取总条数",
    "Demo": ""
  },
  {
    "RowNum": 91,
    "Id": 1235,
    "Name": "GetWorkTypes",
    "Type": "T-SQL",
    "Sign": 1,
    "Code": " select Name WorkTypes,Value Id from  BD_Dictionary where Type = 'WorkTypes' ",
    "CacheToken": "",
    "Description": "获取工种",
    "Demo": ""
  },
  {
    "RowNum": 92,
    "Id": 1232,
    "Name": "GetDepartment",
    "Type": "T-SQL",
    "Sign": 1,
    "Code": " select Name Department,Value Id from  BD_Dictionary where Type = 'Department' ",
    "CacheToken": "",
    "Description": "获取部门（月度）",
    "Demo": ""
  },
  {
    "RowNum": 93,
    "Id": 1231,
    "Name": "GetWeeKReportDetails",
    "Type": "T-SQL",
    "Sign": 65,
    "Code": "SELECT w.Id,w.ComId,w.Title,u.UnitName,d.Name WorkTypes,w.UpUserCount,w.AddUserCount,w.ZiliCount,w.CizhiCount,w.CituiCount,w.NoPassCount,w.ExpireCount,w.PassCount,w.NowCount, (cast(((w.ZiliCount+w.CizhiCount)*1.0/(w.UpUserCount+w.AddUserCount))as decimal(18,4))*100) LossRate,w.GongshangCount, convert(varchar(10), w.BeginTime,120) BeginTime , convert(varchar(10), w.EndTime,120) EndTime,w.YiwaiCount from  WeeKReport w\n\t\t\t\t\tleft join Unit u on w.ComId =u.Id\n\t\t\t\t\tleft join BD_Dictionary d \n\t\t\t\t\ton d.Type='WorkTypes' and d.Value=u.WorkTypeId\n                                        Where w.Id=@Id",
    "CacheToken": "",
    "Description": "周检表详情",
    "Demo": ""
  },
  {
    "RowNum": 94,
    "Id": 1230,
    "Name": "GetReportInfo",
    "Type": "T-SQL",
    "Sign": 65,
    "Code": "select r.*,u.UserName_c Name,u.DepartmentId  from  Report r left join BD_Users u on r.UserId=u.Id   Where r.Id=@Id",
    "CacheToken": "",
    "Description": "获取月度报表信息",
    "Demo": ""
  },
  {
    "RowNum": 95,
    "Id": 1229,
    "Name": "ReadPageUserPayrolls",
    "Type": "T-SQL",
    "Sign": 1,
    "Code": "SELECT\n\t*\nFROM (\n\tSELECT\n\t\tROW_NUMBER()OVER(ORDER BY $Orders) RowNum,\n\t\t*\n\tFROM (\n\t\tSELECT TOP (@End)\n\t\t\t*\n\t\tFROM (\n\t\t\tSELECT\n\t\t\t\tUP.Id,\n\t\t\t\tUP.IdNumber,\n\t\t\t\tUP.Payroll,\n\t\t\t\tUP.ShouldWages,\n\t\t\t\tUP.PersonalTax,\n\t\t\t\tUP.Debit,\n\t\t\t\tUP.Utilities,\n\t\t\t\tUP.Rent,\n\t\t\t\tUP.Poundage,\n\t\t\t\tUP.SocialSecurity,\n\t\t\t\tUP.Fund,\n\t\t\t\tCONCAT(YEAR(UP.AddMonth), '-', MONTH(UP.AddMonth)) TextAddMonth,\n\t\t\t\tUP.AddMonth,\n\t\t\t\tUP.CreateTime,\n\t\t\t\tUP.CreateUser,\n\t\t\t\tOS.Name\n\t\t\tFROM\n\t\t\t\tUserPayroll UP\n\t\t\tLEFT JOIN\n\t\t\t\tBD_OuterStaff OS\n\t\t\tON\n\t\t\t\tOS.IdNumber = UP.IDNumber\n\t\t) T\n\t\tWHERE\n\t\t\t$Filters\n\t\tORDER BY\n\t\t\t$Orders\n\t)T\n)T\nWHERE T.RowNum >= @Begin",
    "CacheToken": "",
    "Description": "分页读取派遣员工工资数据",
    "Demo": ""
  },
  {
    "RowNum": 96,
    "Id": 1228,
    "Name": "GetUserPayrollsTotal",
    "Type": "T-SQL",
    "Sign": 65,
    "Code": "SELECT\n\tCOUNT(0) Total\nFROM (\n\tSELECT\n\t\tUP.Id,\n\t\tUP.IdNumber,\n\t\tUP.Payroll,\n\t\tUP.ShouldWages,\n\t\tUP.PersonalTax,\n\t\tUP.Debit,\n\t\tUP.Utilities,\n\t\tUP.Rent,\n\t\tUP.Poundage,\n\t\tUP.SocialSecurity,\n\t\tUP.Fund,\n\t\tUP.AddMonth,\n\t\tUP.CreateTime,\n\t\tUP.CreateUser,\n\t\tOS.Name\n\tFROM\n\t\tUserPayroll UP\n\tLEFT JOIN\n\t\tBD_OuterStaff OS\n\tON\n\t\tOS.IdNumber = UP.IDNumber\n) T\nWHERE\n\t$Filters",
    "CacheToken": "",
    "Description": "获取派遣员工工资数据总数",
    "Demo": ""
  },
  {
    "RowNum": 97,
    "Id": 1227,
    "Name": "UpdateRepair",
    "Type": "T-SQL",
    "Sign": 4,
    "Code": "UPDATE Repair SET ReviewUserId = @UserId, ReviewRemark = @ReviewRemark, ReviewTime= @Now, State = @State WHERE Id=@Id",
    "CacheToken": "",
    "Description": "宿舍维修审核",
    "Demo": ""
  },
  {
    "RowNum": 98,
    "Id": 1226,
    "Name": "ReadPageRepair",
    "Type": "T-SQL",
    "Sign": 1,
    "Code": "SELECT\n\t*\nFROM (\n\tSELECT\n\t\tROW_NUMBER()OVER(ORDER BY $Orders) RowNum,\n\t\t*\n\tFROM (\n\t\tSELECT TOP (@End)\n\t\t\t*\n\t\tFROM (\n\t\t\tSELECT\n\t\t\t\tR.Id,\n\t\t\t\tR.AlareId,\n\t\t\t\tR.RepContent,\n\t\t\t\tR.RepCount,\n\t\t\t\tR.State,\n\t\t\t\tR.RepRemark,\n\t\t\t\tR.ReviewUserId,\n\t\t\t\tR.ReviewTime,\n\t\t\t\tR.ReviewRemark,\n\t\t\t\tR.RepUserId,\n\t\t\t\tR.RepTime,\n\t\t\t\tR.RoomNumber,\n\t\t\t\tRVU.Nickname ReviewUserName,\n\t\t\t\tRPU.Nickname RepUserName,\n\t\t\t\tAD.Name AlareName\n\t\t\tFROM\n\t\t\t\tRepair R\n\t\t\tLEFT JOIN\n\t\t\t\tBD_Users RVU\n\t\t\tON\n\t\t\t\tRVU.Id = R.ReviewUserId\n\t\t\tLEFT JOIN\n\t\t\t\tBD_Users RPU\n\t\t\tON\n\t\t\t\tRPU.Id = R.RepUserId\n\t\t\tLEFT JOIN\n\t\t\t\tBD_Dictionary AD\n\t\t\tON\n\t\t\t\tAD.Type = 'AlareType' AND AD.Value = R.AlareId\n\t\t\tWHERE R.RepUserId=@UserId\n\t\t) T\n\t\tWHERE\n\t\t\t$Filters\n\t\tORDER BY\n\t\t\t$Orders\n\t)T\n)T\nWHERE T.RowNum >= @Begin",
    "CacheToken": "",
    "Description": "分页读取宿舍维修表获取",
    "Demo": ""
  },
  {
    "RowNum": 99,
    "Id": 1225,
    "Name": "InsertRepair",
    "Type": "T-SQL",
    "Sign": 2,
    "Code": "INSERT INTO Repair(AlareId, RepContent, RepCount, RepRemark, RepUserId, RepTime, RoomNumber, State) VALUES(@AlareId, @RepContent, @RepCount, @RepRemark, @UserId, \n @Now, @RoomNumber, 0)",
    "CacheToken": "",
    "Description": "宿舍维修申请",
    "Demo": ""
  },
  {
    "RowNum": 100,
    "Id": 1224,
    "Name": "ReadAllInformations",
    "Type": "T-SQL",
    "Sign": 1,
    "Code": "SELECT Id, Title, Content FROM Information WHERE $Filters",
    "CacheToken": "",
    "Description": "读取所有资讯信息",
    "Demo": ""
  },
  {
    "RowNum": 101,
    "Id": 1223,
    "Name": "UpdateInformation",
    "Type": "T-SQL",
    "Sign": 4,
    "Code": "DECLARE @IsAdd int=0\n\nselect @IsAdd=COUNT(1) from Information where Type=@Type\n\nif @IsAdd=0\nbegin\nINSERT INTO Information VALUES (@Type,@Title,@Content,1,@UserId,@Now)       \nend\nelse\nbegin\nUPDATE Information SET Content = @Content WHERE Id = @Type\nend",
    "CacheToken": "",
    "Description": "修改资讯内容",
    "Demo": ""
  },
  {
    "RowNum": 102,
    "Id": 1222,
    "Name": "APPGetServiceType",
    "Type": "T-SQL",
    "Sign": 1,
    "Code": "select  Title,Content  from Information where Type=@Type",
    "CacheToken": "",
    "Description": "获取资讯类型信息",
    "Demo": ""
  },
  {
    "RowNum": 103,
    "Id": 1219,
    "Name": "GetWeeKReportLeaderTotal",
    "Type": "T-SQL",
    "Sign": 65,
    "Code": "\t\tSELECT\n\t\t\tCOUNT(0) Total\n\t\tFROM (\n\t\t\t\tSELECT \n\t\t\t\t\tw.Id,\n                                        w.Title,\n\t\t\t\t\tu.UnitName,\n\t\t\t\t\td.Name WorkTypes,\n\t\t\t\t\tw.UpUserCount,\n\t\t\t\t\tw.AddUserCount,\n\t\t\t\t\tw.ZiliCount,\n\t\t\t\t\tw.CizhiCount,\n\t\t\t\t\tw.CituiCount,\n\t\t\t\t\tw.NoPassCount,\n\t\t\t\t\tw.ExpireCount,\n\t\t\t\t\tw.PassCount,\n\t\t\t\t\tw.NowCount,\n\t\t\t\t\t (cast(((w.ZiliCount+w.CizhiCount)*1.0/(w.UpUserCount+w.AddUserCount))as decimal(18,4))*100) LossRate,\n\t\t\t\t\tw.GongshangCount,\n                                        convert(varchar(10), w.Time,120)  Time,\n                                        convert(varchar(10), w.BeginTime,120) BeginTime ,\n                                        convert(varchar(10), w.EndTime,120) EndTime,\n\t\t\t\t\tw.YiwaiCount\n\t\t\t\t\tfrom  WeeKReport w\n\t\t\t\t\tleft join Unit u on w.ComId =u.Id\n\t\t\t\t\tleft join BD_Dictionary d \n\t\t\t\t\ton d.Type='WorkTypes' and d.Value=u.WorkTypeId\n\t\t) T\n\t\tWHERE\n\t\t\t$Filters",
    "CacheToken": "",
    "Description": "获取周检表信息总数（领导）",
    "Demo": ""
  },
  {
    "RowNum": 104,
    "Id": 1218,
    "Name": "ReadPageWeeKReportLeader",
    "Type": "T-SQL",
    "Sign": 1,
    "Code": "SELECT\n\t*\nFROM (\n\tSELECT\n\t\tROW_NUMBER()OVER(ORDER BY $Orders) RowNum,\n\t\t*\n\tFROM (\n\t\tSELECT TOP (@End)\n\t\t\t*\n\t\tFROM (\n\t\t\t\t\tSELECT \n\t\t\t\t\tw.Id,\n                                        w.Title,\n\t\t\t\t\tu.UnitName,\n\t\t\t\t\td.Name WorkTypes,\n\t\t\t\t\tw.UpUserCount,\n\t\t\t\t\tw.AddUserCount,\n\t\t\t\t\tw.ZiliCount,\n\t\t\t\t\tw.CizhiCount,\n\t\t\t\t\tw.CituiCount,\n\t\t\t\t\tw.NoPassCount,\n\t\t\t\t\tw.ExpireCount,\n\t\t\t\t\tw.PassCount,\n\t\t\t\t\tw.NowCount,\n\t\t\t\t\t (cast(((w.ZiliCount+w.CizhiCount)*1.0/(w.UpUserCount+w.AddUserCount))as decimal(18,4))*100) LossRate,\n\t\t\t\t\tw.GongshangCount,\n                                        convert(varchar(10), w.Time,120)  Time,\n                                        convert(varchar(10), w.BeginTime,120) BeginTime ,\n                                        convert(varchar(10), w.EndTime,120) EndTime,\n\t\t\t\t\tw.YiwaiCount\n\t\t\t\t\tfrom  WeeKReport w\n\t\t\t\t\tleft join Unit u on w.ComId =u.Id\n\t\t\t\t\tleft join BD_Dictionary d \n\t\t\t\t\ton d.Type='WorkTypes' and d.Value=u.WorkTypeId\n\t\t) T\n\t\tWHERE\n\t\t\t$Filters\n\t\tORDER BY\n\t\t\t$Orders\n\t)T\n)T\nWHERE T.RowNum >= @Begin",
    "CacheToken": "",
    "Description": "分页查询周检表信息（领导）",
    "Demo": ""
  },
  {
    "RowNum": 105,
    "Id": 1217,
    "Name": "GetWeeKReportStationerTotal",
    "Type": "T-SQL",
    "Sign": 65,
    "Code": "\t\tSELECT\n\t\t\tCOUNT(0) Total\n\t\tFROM (\n\t\t\t\tSELECT \n\t\t\t\t\tw.Id,\n                                        w.Title,\n\t\t\t\t\tu.UnitName,\n\t\t\t\t\td.Name WorkTypes,\n\t\t\t\t\tw.UpUserCount,\n\t\t\t\t\tw.AddUserCount,\n\t\t\t\t\tw.ZiliCount,\n\t\t\t\t\tw.CizhiCount,\n\t\t\t\t\tw.CituiCount,\n\t\t\t\t\tw.NoPassCount,\n\t\t\t\t\tw.ExpireCount,\n\t\t\t\t\tw.PassCount,\n\t\t\t\t\tw.NowCount,\n                                        (cast(((w.ZiliCount+w.CizhiCount)*1.0/(w.UpUserCount+w.AddUserCount))as decimal(18,4))*100) LossRate,\n\t\t\t\t\tw.GongshangCount,\n                                        convert(varchar(10), w.Time,120)  Time,\n                                        convert(varchar(10), w.BeginTime,120) BeginTime ,\n                                        convert(varchar(10), w.EndTime,120) EndTime,\n\t\t\t\t\tw.YiwaiCount\n\t\t\t\t\tfrom  WeeKReport w\n\t\t\t\t\tleft join Unit u on w.ComId =u.Id\n\t\t\t\t\tleft join BD_Dictionary d \n\t\t\t\t\ton d.Type='WorkTypes' and d.Value=u.WorkTypeId\n                                        Where StationedUserId=@UserId\n\t\t) T\n\t\tWHERE\n\t\t\t$Filters",
    "CacheToken": "",
    "Description": "获取周检表信息总数（驻点员）",
    "Demo": ""
  },
  {
    "RowNum": 106,
    "Id": 1216,
    "Name": "ReadPageWeeKReportStationer",
    "Type": "T-SQL",
    "Sign": 1,
    "Code": "SELECT\n\t*\nFROM (\n\tSELECT\n\t\tROW_NUMBER()OVER(ORDER BY $Orders) RowNum,\n\t\t*\n\tFROM (\n\t\tSELECT TOP (@End)\n\t\t\t*\n\t\tFROM (\n\t\t\t\tSELECT \n\t\t\t\t\tw.Id,\n                                        w.Title,\n\t\t\t\t\tu.UnitName,\n\t\t\t\t\td.Name WorkTypes,\n\t\t\t\t\tw.UpUserCount,\n\t\t\t\t\tw.AddUserCount,\n\t\t\t\t\tw.ZiliCount,\n\t\t\t\t\tw.CizhiCount,\n\t\t\t\t\tw.CituiCount,\n\t\t\t\t\tw.NoPassCount,\n\t\t\t\t\tw.ExpireCount,\n\t\t\t\t\tw.PassCount,\n\t\t\t\t\tw.NowCount,\n                                         (cast(((w.ZiliCount+w.CizhiCount)*1.0/(w.UpUserCount+w.AddUserCount))as decimal(18,4))*100) LossRate,\n\t\t\t\t\tw.GongshangCount,    \n                                         convert(varchar(10), w.Time,120)  Time,\n                                        convert(varchar(10), w.BeginTime,120) BeginTime ,\n                                        convert(varchar(10), w.EndTime,120) EndTime,\n\t\t\t\t\tw.YiwaiCount\n\t\t\t\t\tfrom  WeeKReport w\n\t\t\t\t\tleft join Unit u on w.ComId =u.Id\n\t\t\t\t\tleft join BD_Dictionary d \n\t\t\t\t\ton d.Type='WorkTypes' and d.Value=u.WorkTypeId\n                                        Where StationedUserId=@UserId\n\t\t) T\n\t\tWHERE\n\t\t\t$Filters\n\t\tORDER BY\n\t\t\t$Orders\n\t)T\n)T\nWHERE T.RowNum >= @Begin",
    "CacheToken": "",
    "Description": "分页查询周检表信息（驻点员）",
    "Demo": ""
  },
  {
    "RowNum": 107,
    "Id": 1215,
    "Name": "UpdateWeeKReport",
    "Type": "T-SQL",
    "Sign": 4,
    "Code": "UPDATE WeeKReport  SET UpUserCount = @UpUserCount, AddUserCount = @AddUserCount , ZiliCount = @ZiliCount, CizhiCount= @CizhiCount, CituiCount= @CituiCount, NoPassCount = @NoPassCount, ExpireCount= @ExpireCount, PassCount= @PassCount, NowCount= @NowCount, GongshangCount= @GongshangCount  , YiwaiCount= @YiwaiCount,Title=@Title, ComId=@ComId,BeginTime=@BeginTime, EndTime=@EndTime WHERE Id = @Id",
    "CacheToken": "",
    "Description": "修改周检表",
    "Demo": ""
  },
  {
    "RowNum": 108,
    "Id": 1214,
    "Name": "AddWeeKReport",
    "Type": "T-SQL",
    "Sign": 2,
    "Code": "DECLARE @FirstDayOfWeek DATE = DATEADD(week,DATEDIFF(week,0,getdate()),0);\n\nDECLARE @FirstDayOfNextWeek DATE =DATEADD(week,DATEDIFF(week,0,getdate()),7);\n\nDECLARE @IsAdd int=0\n\nif(@BeginTime>=@FirstDayOfWeek and @BeginTime<@FirstDayOfNextWeek and @EndTime>@FirstDayOfWeek and @EndTime<@FirstDayOfNextWeek)\nbegin\n      select @IsAdd=count(Id)  from WeeKReport where StationedUserId=@UserId\nend\nif(@IsAdd=0)\nBEGIN\nINSERT INTO WeeKReport(Title, ComId, BeginTime, EndTime, StationedUserId,Time,UpUserCount , AddUserCount , ZiliCount, CizhiCount, CituiCount, NoPassCount , ExpireCount, PassCount, NowCount,  GongshangCount , YiwaiCount) VALUES(@Title, @ComId, @BeginTime, @EndTime, @UserId, @Time,@UpUserCount, @AddUserCount, @ZiliCount,@CizhiCount,@CituiCount,@NoPassCount,@ExpireCount,@PassCount,@NowCount,@GongshangCount,@YiwaiCount );\nEND\n  ELSE BEGIN\n\tRAISERROR('没有找到记录。', 16, 1);\n\tRETURN;\nEND",
    "CacheToken": "",
    "Description": "添加周检表",
    "Demo": ""
  },
  {
    "RowNum": 109,
    "Id": 1213,
    "Name": "GetUnits",
    "Type": "T-SQL",
    "Sign": 1,
    "Code": "if @UserRoleId=2031 \nBEGIN\nSELECT Id, UnitName FROM Unit WHERE UserId_n = @UserId ANd IsDet = 0\nEnd\nelse\nBEGIN\nSELECT  Id,UnitName  FROM  Unit Where IsDet=0\nEnd",
    "CacheToken": "",
    "Description": "获取用工单位",
    "Demo": ""
  },
  {
    "RowNum": 110,
    "Id": 1212,
    "Name": "GetReportCEOTotal",
    "Type": "T-SQL",
    "Sign": 65,
    "Code": "\t\tSELECT\n\t\t\tCOUNT(0) Total\n\t\tFROM (\n\t\t\t\tSELECT \n\t\t\t\t\tr.Id,\n                                         convert(varchar(7),r.CreateTime,120) Month,\n\t\t\t\t\tu.Nickname,\n\t\t\t\t\td.Name Department,\n\t\t\t\t\tr.CreateTime,\n\t\t\t\t\tr.HeadContent,\n\t\t\t\t\tr.HeadTime\n\t\t\t\t\tfrom  Report r\n\t\t\t\t\tleft join BD_Users u \n\t\t\t\t\ton r.UserId=u.Id \n\t\t\t\t\tleft join BD_Dictionary d\n\t\t\t\t\tON\n\t\t\t\t         d.Type = 'Department' AND d.Value = u.DepartmentId\n                                        where  HeadUserId is not null and  CEOTime is null\n\t\t) T\n\t\tWHERE\n\t\t\t$Filters",
    "CacheToken": "",
    "Description": "获取月度报表信息总数（总经理、所有领导）",
    "Demo": ""
  },
  {
    "RowNum": 111,
    "Id": 1211,
    "Name": "ReadPageReportCEO",
    "Type": "T-SQL",
    "Sign": 1,
    "Code": "SELECT\n\t*\nFROM (\n\tSELECT\n\t\tROW_NUMBER()OVER(ORDER BY $Orders) RowNum,\n\t\t*\n\tFROM (\n\t\tSELECT TOP (@End)\n\t\t\t*\n\t\tFROM (\n\t\t\t\tSELECT \n\t\t\t\t\tr.Id,\n                                         convert(varchar(7),r.CreateTime,120) Month,\n\t\t\t\t\tu.Nickname,\n\t\t\t\t\td.Name Department,\n\t\t\t\t\tr.CreateTime,\n\t\t\t\t\tr.HeadContent,\n\t\t\t\t\tr.HeadTime\n\t\t\t\t\tfrom  Report r\n\t\t\t\t\tleft join BD_Users u \n\t\t\t\t\ton r.UserId=u.Id \n\t\t\t\t\tleft join BD_Dictionary d\n\t\t\t\t\tON\n\t\t\t\t         d.Type = 'Department' AND d.Value = u.DepartmentId\n                                        where  HeadUserId is not null and CEOTime is null\n\t\t) T\n\t\tWHERE\n\t\t\t$Filters\n\t\tORDER BY\n\t\t\t$Orders\n\t)T\n)T\nWHERE T.RowNum >= @Begin",
    "CacheToken": "",
    "Description": "分页查询月度报表信息（总经理、所有领导）",
    "Demo": ""
  },
  {
    "RowNum": 112,
    "Id": 1210,
    "Name": "GetReportHeadTotal",
    "Type": "T-SQL",
    "Sign": 65,
    "Code": "\t\tSELECT\n\t\t\tCOUNT(0) Total\n\t\tFROM (\n\t\t\tSELECT \n\t\t\t\t\tr.Id,\n                                         convert(varchar(7),r.CreateTime,120) Month,\n\t\t\t\t\tu.Nickname,\n\t\t\t\t\td.Name Department,\n\t\t\t\t\tr.CreateTime\n\t\t\t\t\tfrom  Report r\n\t\t\t\t\tleft join BD_Users u \n\t\t\t\t\ton r.UserId=u.Id \n\t\t\t\t\tleft join BD_Dictionary d\n\t\t\t\t\tON\n\t\t\t\t         d.Type = 'Department' AND d.Value = u.DepartmentId\n\t\t\t\t\tleft join BD_OuterStaff s on u.IdNumber=s.IdNumber\n\t\t\t\t\twhere s.UnitId =( select UnitId from BD_OuterStaff where IdNumber =( select IdNumber from BD_Users where Id=@UserId )) and HeadUserId is null\n\t\t) T\n\t\tWHERE\n\t\t\t$Filters",
    "CacheToken": "",
    "Description": "获取月度报表信息总数（负责人）",
    "Demo": ""
  },
  {
    "RowNum": 113,
    "Id": 1209,
    "Name": "ReadPageReportHead",
    "Type": "T-SQL",
    "Sign": 1,
    "Code": "SELECT\n\t*\nFROM (\n\tSELECT\n\t\tROW_NUMBER()OVER(ORDER BY $Orders) RowNum,\n\t\t*\n\tFROM (\n\t\tSELECT TOP (@End)\n\t\t\t*\n\t\tFROM (\n\t\t\t    \t\t\t\tSELECT \n\t\t\t\tr.Id,\n\t\t\t\tconvert(varchar(7),r.CreateTime,120) Month,\n\t\t\t\tu.Nickname,\n\t\t\t\td.Name Department,\n\t\t\t\tr.CreateTime\n\t\t\t\tfrom  Report r\n\t\t\t\tleft join BD_Users u \n\t\t\t\ton r.UserId=u.Id \n\t\t\t\tleft join BD_Dictionary d\n\t\t\t\tON\n\t\t\t\td.Type = 'Department' AND d.Value = u.DepartmentId\n\t\t\t\tleft join BD_OuterStaff s on u.IdNumber=s.IdNumber\n\t\t\t\twhere u.ParentId=@UserId  and HeadUserId is null\n\t\t) T\n\t\tWHERE\n\t\t\t$Filters\n\t\tORDER BY\n\t\t\t$Orders\n\t)T\n)T\nWHERE T.RowNum >= @Begin",
    "CacheToken": "",
    "Description": "分页查询月度报表信息（负责人）",
    "Demo": ""
  },
  {
    "RowNum": 114,
    "Id": 1208,
    "Name": "GetReportTotal",
    "Type": "T-SQL",
    "Sign": 65,
    "Code": "\t\tSELECT\n\t\t\tCOUNT(0) Total\n\t\tFROM (\n\t\t\tSELECT \n                                   r.Id,\n                                   convert(varchar(7),r.CreateTime,120) Month,\n                                   r.CreateTime, \n                                  (case  when r.CEOTime is not null and  r.HeadTime is not null  then 3 when r.CEOTime is  null  and r.HeadTime is not null then  2 else 1 end ) AuditStart\n                                  ,d.Name Department,\n                                  r.HeadContent,\n                                  r.CEOContent \n                                 from  Report r\n                                 left join BD_Users u \n                                 on r.UserId=u.Id \n                                 left join BD_Dictionary d\n                                 ON\n\t\t\t\t d.Type = 'Department' AND d.Value = u.DepartmentId\n                                 Where r.UserId=@UserId\n\t\t) T\n\t\tWHERE\n\t\t\t$Filters",
    "CacheToken": "",
    "Description": "获取月度报表信息总数（员工）",
    "Demo": ""
  },
  {
    "RowNum": 115,
    "Id": 1207,
    "Name": "ReadPageReport",
    "Type": "T-SQL",
    "Sign": 1,
    "Code": "SELECT\n\t*\nFROM (\n\tSELECT\n\t\tROW_NUMBER()OVER(ORDER BY $Orders) RowNum,\n\t\t*\n\tFROM (\n\t\tSELECT TOP (@End)\n\t\t\t*\n\t\tFROM (\n\t\t\tSELECT \n                                   r.Id,\n                                   convert(varchar(7),r.CreateTime,120) Month,\n                                   r.CreateTime,\n                                  (case  when r.CEOTime is not null and  r.HeadTime is not null  then 3 when r.CEOTime is  null  and r.HeadTime is not null then  2 else 1 end ) AuditStart\n                                  ,d.Name Department,\n                                  r.HeadContent,\n                                  r.CEOContent \n                                 from  Report r\n                                 left join BD_Users u \n                                 on r.UserId=u.Id \n                                 left join BD_Dictionary d\n                                 ON\n\t\t\t\t d.Type = 'Department' AND d.Value = u.DepartmentId\n                                 Where r.UserId=@UserId\n\t\t) T\n\t\tWHERE\n\t\t\t$Filters\n\t\tORDER BY\n\t\t\t$Orders\n\t)T\n)T\nWHERE T.RowNum >= @Begin",
    "CacheToken": "",
    "Description": "分页查询月度报表信息（员工）",
    "Demo": ""
  },
  {
    "RowNum": 116,
    "Id": 1206,
    "Name": "UpdateReportCEOAudit",
    "Type": "T-SQL",
    "Sign": 4,
    "Code": "UPDATE Report SET CEOContent = @CEOContent, CEOTime = @Time WHERE Id = @Id\n\nDECLARE @Title varchar(10) = '月度总结审核';--标题\n\nDECLARE @AuditContent varchar(50) = '您的月度总结已被总经理';--内容\n\nDECLARE @Name varchar(10) = '';--内容\n\nselect @Name=Name from  BD_OuterStaff o \nleft join BD_Users u on o.IdNumber=u.IdNumber where u.Id=@UserId\n\nINSERT INTO Message(Title,Content,State,PushUserId,CreateTime,CreateUser)\nselect @Title,@AuditContent+@Name+'审核',0,r.UserId,GETDATE(),@UserId from Report r WHERE Id = @Id\n\n\n\n",
    "CacheToken": "",
    "Description": "月度总结总经理审核",
    "Demo": ""
  },
  {
    "RowNum": 117,
    "Id": 1205,
    "Name": "UpdateReportHeadAudit",
    "Type": "T-SQL",
    "Sign": 4,
    "Code": "UPDATE Report SET Ability = @Ability, Attitude = @Attitude, Communicate = @Communicate, Obey = @Obey, Handle = @Handle, HeadContent = @HeadContent, HeadUserId = @UserId, HeadTime = @Time WHERE Id = @Id\n\n\nDECLARE @Title varchar(10) = '月度总结审核';--标题\n\nDECLARE @AuditContent varchar(50) = '您的月度总结已被部门经理';--内容\n\nDECLARE @Name varchar(10) = '';--内容\n\nselect @Name=Name from  BD_OuterStaff o \nleft join BD_Users u on o.IdNumber=u.IdNumber where u.Id=@UserId\n\nINSERT INTO Message(Title,Content,State,PushUserId,CreateTime,CreateUser)\nselect @Title,@AuditContent+@Name+'审核',0,r.UserId,GETDATE(),@UserId from Report r WHERE Id = @Id\n",
    "CacheToken": "",
    "Description": "月度总结部门负责人审核",
    "Demo": ""
  },
  {
    "RowNum": 118,
    "Id": 1204,
    "Name": "UpdateReport",
    "Type": "T-SQL",
    "Sign": 4,
    "Code": "UPDATE Report SET Attendance= @Attendance,  Emergency= @Emergency, Lackwork= @Lackwork, Innovation= @Innovation, Business= @Business WHERE Id = @Id",
    "CacheToken": "",
    "Description": "月度总结修改",
    "Demo": ""
  },
  {
    "RowNum": 119,
    "Id": 1203,
    "Name": "ImportQuits",
    "Type": "System",
    "Sign": 66,
    "Code": "// SystemImpl",
    "CacheToken": "",
    "Description": "导入派遣员工离职记录，支持 Excel 数据和文本数据",
    "Demo": ""
  },
  {
    "RowNum": 120,
    "Id": 1202,
    "Name": "GetQuitsTotal",
    "Type": "T-SQL",
    "Sign": 65,
    "Code": "SELECT\n\tCOUNT(0) Total\nFROM (\n\tSELECT\n\t\tQ.IDNumber IdNumber,\n\t\tQ.ContractNumber,\n\t\tQ.EntryTime,\n\t\tQ.Id,\n\t\tQ.QuitTime,\n\t\tQ.Remark,\n\t\tQ.Type,\n\t\tQ.UnitId,\n\t\tQ.WorkNumber,\n\t\tOS.Name,\n\t\tOS.Mobile,\n\t\tU.UnitName,\n\t\tDType.Name TypeName\n\tFROM\n\t\tQuit Q\n\tLEFT JOIN\n\t\tBD_OuterStaff OS\n\tON\n\t\tOS.IdNumber = Q.IDNumber\n\tLEFT JOIN\n\t\tUnit U\n\tON\n\t\tU.Id = Q.UnitId\n\tLEFT JOIN\n\t\tBD_Dictionary DType\n\tON\n\t\tDType.Type = 'StaffQuitTypes' AND DType.Value = Q.Type\n) T\nWHERE\n\t$Filters",
    "CacheToken": "",
    "Description": "获取派遣员工离职记录总数",
    "Demo": ""
  },
  {
    "RowNum": 121,
    "Id": 1201,
    "Name": "ReadPageQuits",
    "Type": "T-SQL",
    "Sign": 1,
    "Code": "SELECT\n\t*\nFROM (\n\tSELECT\n\t\tROW_NUMBER()OVER(ORDER BY $Orders) RowNum,\n\t\t*\n\tFROM (\n\t\tSELECT TOP (@End)\n\t\t\t*\n\t\tFROM (\n\t\t\tSELECT\n\t\t\t\tQ.IDNumber IdNumber,\n\t\t\t\tQ.ContractNumber,\n\t\t\t\tQ.EntryTime,\n\t\t\t\tQ.Id,\n\t\t\t\tQ.QuitTime,\n\t\t\t\tQ.Remark,\n\t\t\t\tQ.Type,\n\t\t\t\tQ.UnitId,\n\t\t\t\tQ.WorkNumber,\n\t\t\t\tOS.Name,\n\t\t\t\tOS.Mobile,\n\t\t\t\tU.UnitName,\n\t\t\t\tDType.Name TypeName\n\t\t\tFROM\n\t\t\t\tQuit Q\n\t\t\tLEFT JOIN\n\t\t\t\tBD_OuterStaff OS\n\t\t\tON\n\t\t\t\tOS.IdNumber = Q.IDNumber\n\t\t\tLEFT JOIN\n\t\t\t\tUnit U\n\t\t\tON\n\t\t\t\tU.Id = Q.UnitId\n\t\t\tLEFT JOIN\n\t\t\t\tBD_Dictionary DType\n\t\t\tON\n\t\t\t\tDType.Type = 'StaffQuitTypes' AND DType.Value = Q.Type\n\t\t) T\n\t\tWHERE\n\t\t\t$Filters\n\t\tORDER BY\n\t\t\t$Orders\n\t)T\n)T\nWHERE T.RowNum >= @Begin",
    "CacheToken": "",
    "Description": "分页查询派遣员工离职记录",
    "Demo": ""
  },
  {
    "RowNum": 122,
    "Id": 1200,
    "Name": "InsertReport",
    "Type": "T-SQL",
    "Sign": 2,
    "Code": "INSERT INTO Report(UserId, Attendance, Emergency, Lackwork, Innovation, Business, CreateTime,CreateUser) VALUES(@UserId, @Attendance, @Emergency, @Lackwork, @Innovation, @Business, @Now,@UserId);",
    "CacheToken": "",
    "Description": "月度总结填写",
    "Demo": ""
  },
  {
    "RowNum": 123,
    "Id": 1199,
    "Name": "InsertQuit",
    "Type": "T-SQL",
    "Sign": 2,
    "Code": "DECLARE @ExistId INT = NULL;\nDECLARE @State INT = NULL;\n\nSELECT @ExistId = Id, @State = State FROM BD_OuterStaff WHERE IdNumber = @IdNumber;\n\nIF @ExistId IS NULL BEGIN\n\tGOTO IdNumberNotExist;\nEND\n\nIF @State != 2 BEGIN\n\tGOTO StaffNotWorking;\nEND\n\nIF @TypeName IS NOT NULL BEGIN\n\tSELECT @Type = Value FROM BD_Dictionary WHERE Type = 'StaffQuitTypes' AND Name = @TypeName;\nEND\n\nIF @Type IS NULL OR @Type = 0 BEGIN\n\tSET @Type = 1;\nEND\n\nUPDATE BD_OuterStaff SET State = 1 WHERE IdNumber = @IdNumber;\n\nINSERT Quit(IDNumber, EntryTime, QuitTime, UnitId, ContractNumber, WorkNumber, Type, Remark, ImportUserId)\n\tSELECT IdNumber, EnterDate, @QuitTime, UnitId, ContractNumber, WorkNumber, @Type, @Remark, @UserId FROM BD_OuterStaff WHERE IdNumber = @IdNumber;\n\nRETURN;\n\nIdNumberNotExist:\n\tRAISERROR('未找到该身份证', 16, 1);\n\tRETURN;\n\n\nStaffNotWorking:\n\tRAISERROR('该员工未在职', 16, 1);\n\tRETURN;",
    "CacheToken": "",
    "Description": "新增离职信息",
    "Demo": ""
  },
  {
    "RowNum": 124,
    "Id": 1198,
    "Name": "ExportCommands",
    "Type": "System",
    "Sign": 65,
    "Code": "// System Impl",
    "CacheToken": "",
    "Description": "导出命令信息",
    "Demo": "方法"
  },
  {
    "RowNum": 125,
    "Id": 1197,
    "Name": "GetDotBanksTotal",
    "Type": "T-SQL",
    "Sign": 65,
    "Code": "SELECT COUNT(0) Total FROM DotBank WHERE $Filters",
    "CacheToken": "",
    "Description": "获取网点银行数据总数",
    "Demo": ""
  },
  {
    "RowNum": 126,
    "Id": 1196,
    "Name": "ReadPageDotBanks",
    "Type": "T-SQL",
    "Sign": 1,
    "Code": "SELECT\n\t*\nFROM (\n\tSELECT\n\t\tROW_NUMBER()OVER(ORDER BY $Orders) RowNum,\n\t\t*\n\tFROM (\n\t\tSELECT TOP (@End)\n\t\t\tId,\n\t\t\tBankName,\n\t\t\tAddress,\n\t\t\tBankNo,\n\t\t\tRemark\n\t\tFROM\n\t\t\tDotBank\n\t\tWHERE\n\t\t\t$Filters\n\t\tORDER BY\n\t\t\t$Orders\n\t)T\n)T\nWHERE T.RowNum >= @Begin",
    "CacheToken": "",
    "Description": "分页查询网点银行信息",
    "Demo": ""
  },
  {
    "RowNum": 127,
    "Id": 1195,
    "Name": "DeleteDotBank",
    "Type": "T-SQL",
    "Sign": 8,
    "Code": "DELETE DotBank WHERE Id IN ($Id)",
    "CacheToken": "",
    "Description": "删除网点银行数据",
    "Demo": ""
  },
  {
    "RowNum": 128,
    "Id": 1194,
    "Name": "UpdateDotBank",
    "Type": "T-SQL",
    "Sign": 4,
    "Code": "UPDATE DotBank SET BankName = @BankName, Address = @Address, BankNo = @BankNo, Remark = @Remark WHERE Id = @Id",
    "CacheToken": "",
    "Description": "修改网点银行信息",
    "Demo": ""
  },
  {
    "RowNum": 129,
    "Id": 1193,
    "Name": "InsertDotBank",
    "Type": "T-SQL",
    "Sign": 2,
    "Code": "INSERT DotBank(BankName, Address, BankNo, Remark)\n\tVALUES(@BankName, @Address, @BankNo, @Remark)",
    "CacheToken": "",
    "Description": "新增网点银行信息",
    "Demo": ""
  },
  {
    "RowNum": 130,
    "Id": 1192,
    "Name": "GetUnitsTotal",
    "Type": "T-SQL",
    "Sign": 65,
    "Code": "\t\tSELECT\n\t\t\tCOUNT(0) Total\n\t\tFROM (\n\t\t\tSELECT\n\t\t\t\tU.Id,\n\t\t\t\tU.LinkName,\n\t\t\t\tU.UnitName,\n\t\t\t\tU.Telephone,\n\t\t\t\tU.Address,\n\t\t\t\tU.WorkTypeId,\n\t\t\t\tU.Remark,\n\t\t\t\tU.UserId_n,\n\t\t\t\tBU.Nickname UserName_c,\n\t\t\t\tBD.Name WorkTypeName\n\t\t\tFROM\n\t\t\t\tUnit U\n\t\t\tLEFT JOIN\n\t\t\t\tBD_Users BU\n\t\t\tON\n\t\t\t\tBU.Id = U.Id\n\t\t\tLEFT JOIN\n\t\t\t\tBD_Dictionary BD\n\t\t\tON\n\t\t\t\tBD.Type = 'WorkTypes' AND BD.Value = U.WorkTypeId\n\t\t\tWHERE\n\t\t\t\tU.IsDet = 0\n\t\t) T\n\t\tWHERE\n\t\t\t$Filters",
    "CacheToken": "",
    "Description": "获取用工单位数据总数",
    "Demo": ""
  },
  {
    "RowNum": 131,
    "Id": 1191,
    "Name": "ReadPageUnits",
    "Type": "T-SQL",
    "Sign": 1,
    "Code": "SELECT\n\t*\nFROM (\n\tSELECT\n\t\tROW_NUMBER()OVER(ORDER BY $Orders) RowNum,\n\t\t*\n\tFROM (\n\t\tSELECT TOP (@End)\n\t\t\t*\n\t\tFROM (\n\t\t\tSELECT\n\t\t\t\tU.Id,\n\t\t\t\tU.LinkName,\n\t\t\t\tU.UnitName,\n\t\t\t\tU.Telephone,\n\t\t\t\tU.Address,\n\t\t\t\tU.WorkTypeId,\n\t\t\t\tU.Remark,\n\t\t\t\tU.UserId_n,\n\t\t\t\tBU.Nickname UserName_c,\n\t\t\t\tBU.ContactPhone,\n\t\t\t\tBD.Name WorkTypeName\n\t\t\tFROM\n\t\t\t\tUnit U\n\t\t\tLEFT JOIN\n\t\t\t\tBD_Users BU\n\t\t\tON\n\t\t\t\tBU.Id = U.UserId_n\n\t\t\tLEFT JOIN\n\t\t\t\tBD_Dictionary BD\n\t\t\tON\n\t\t\t\tBD.Type = 'WorkTypes' AND BD.Value = U.WorkTypeId\n\t\t\tWHERE\n\t\t\t\tU.IsDet = 0\n\t\t) T\n\t\tWHERE\n\t\t\t$Filters\n\t\tORDER BY\n\t\t\t$Orders\n\t)T\n)T\nWHERE T.RowNum >= @Begin",
    "CacheToken": "",
    "Description": "分页读取用工单位信息",
    "Demo": ""
  },
  {
    "RowNum": 132,
    "Id": 1190,
    "Name": "DeleteUnit",
    "Type": "T-SQL",
    "Sign": 8,
    "Code": "UPDATE Unit SET IsDet = 1 WHERE Id IN ($Id)",
    "CacheToken": "",
    "Description": "删除用工单位信息",
    "Demo": ""
  },
  {
    "RowNum": 133,
    "Id": 1189,
    "Name": "UpdateUnit",
    "Type": "T-SQL",
    "Sign": 4,
    "Code": "UPDATE Unit SET UnitName = @UnitName, Telephone = @Telephone, Address = @Address, UpdateTime = @Now, UpdateUser = @UserId, WorkTypeId = @WorkTypeId, Remark = @Remark, UserId_n = @UserId_n, LinkName = @LinkName WHERE Id = @Id",
    "CacheToken": "",
    "Description": "修改用工单位信息",
    "Demo": ""
  },
  {
    "RowNum": 134,
    "Id": 1188,
    "Name": "InsertUnit",
    "Type": "T-SQL",
    "Sign": 2,
    "Code": "INSERT Unit(UnitName, Telephone, Address, CreateTime, CreateUser, UpdateTime, UpdateUser, IsDet, WorkTypeId, Remark, UserId_n, LinkName)\n\tVALUES(@UnitName, @Telephone, @Address, @Now, @UserId, NULL, NULL, 0, @WorkTypeId, @Remark, @UserId_n, @LinkName)",
    "CacheToken": "",
    "Description": "新增用工单位信息",
    "Demo": ""
  },
  {
    "RowNum": 135,
    "Id": 1187,
    "Name": "GetAbnormalsTotal",
    "Type": "T-SQL",
    "Sign": 65,
    "Code": "SELECT\n\tCOUNT(0) Total\nFROM (\n\tSELECT\n\t\tA.Id,\n\t\tA.IDNumber IdNumber,\n\t\tA.LastEntryUnit,\n\t\tA.LastEntryTime,\n\t\tA.LastUserId,\n\t\tA.EntryUnit,\n\t\tA.EntryTime,\n\t\tA.UserId,\n\t\tOS.Name,\n\t\tOS.Mobile,\n\t\tLB.Nickname LastUserName,\n\t\tB.Nickname UserName_c,\n\t\tLU.UnitName LastEntryUnitName,\n\t\tU.UnitName EntryUnitName\n\tFROM\n\t\tAbnormal A\n\tLEFT JOIN\n\t\tBD_OuterStaff OS\n\tON\n\t\tOS.IdNumber = A.IDNumber\n\tLEFT JOIN\n\t\tBD_Users LB\n\tON\n\t\tLB.Id = A.LastUserId\n\tLEFT JOIN\n\t\tBD_Users B\n\tON\n\t\tB.Id = A.UserId\n\tLEFT JOIN\n\t\tUnit LU\n\tON\n\t\tLU.Id = A.LastEntryUnit\n\tLEFT JOIN\n\t\tUnit U\n\tON\n\t\tU.Id = A.EntryUnit\n) T\nWHERE\n\t$Filters",
    "CacheToken": "",
    "Description": "获取员工异常数据总数",
    "Demo": ""
  },
  {
    "RowNum": 136,
    "Id": 1186,
    "Name": "ReadPageAbnormals",
    "Type": "T-SQL",
    "Sign": 1,
    "Code": "SELECT\n\t*\nFROM (\n\tSELECT\n\t\tROW_NUMBER()OVER(ORDER BY $Orders) RowNum,\n\t\t*\n\tFROM (\n\t\tSELECT TOP (@End)\n\t\t\t*\n\t\tFROM (\n\t\t\tSELECT\n\t\t\t\tA.Id,\n\t\t\t\tA.IDNumber IdNumber,\n\t\t\t\tA.LastEntryUnit,\n\t\t\t\tA.LastEntryTime,\n\t\t\t\tA.LastUserId,\n\t\t\t\tA.EntryUnit,\n\t\t\t\tA.EntryTime,\n\t\t\t\tA.UserId,\n\t\t\t\tOS.Name,\n\t\t\t\tOS.Mobile,\n\t\t\t\tLB.Nickname LastUserName,\n\t\t\t\tB.Nickname UserName_c,\n\t\t\t\tLU.UnitName LastEntryUnitName,\n\t\t\t\tU.UnitName EntryUnitName\n\t\t\tFROM\n\t\t\t\tAbnormal A\n\t\t\tLEFT JOIN\n\t\t\t\tBD_OuterStaff OS\n\t\t\tON\n\t\t\t\tOS.IdNumber = A.IDNumber\n\t\t\tLEFT JOIN\n\t\t\t\tBD_Users LB\n\t\t\tON\n\t\t\t\tLB.Id = A.LastUserId\n\t\t\tLEFT JOIN\n\t\t\t\tBD_Users B\n\t\t\tON\n\t\t\t\tB.Id = A.UserId\n\t\t\tLEFT JOIN\n\t\t\t\tUnit LU\n\t\t\tON\n\t\t\t\tLU.Id = A.LastEntryUnit\n\t\t\tLEFT JOIN\n\t\t\t\tUnit U\n\t\t\tON\n\t\t\t\tU.Id = A.EntryUnit\n\t\t) T\n\t\tWHERE\n\t\t\t$Filters\n\t\tORDER BY\n\t\t\t$Orders\n\t)T\n)T\nWHERE T.RowNum >= @Begin",
    "CacheToken": "",
    "Description": "分页读取员工异常报表",
    "Demo": ""
  },
  {
    "RowNum": 137,
    "Id": 1185,
    "Name": "GetOuterStaffsTotal",
    "Type": "T-SQL",
    "Sign": 65,
    "Code": "SELECT\n\tCOUNT(0) Total\nFROM (\n\tSELECT \n\t\tOS.Id,\n\t\tOS.Name,\n\t\tOS.Sex,\n\t\tOS.IdNumber,\n\t\tOS.Mobile,\n\t\tOS.UnitId,\n\t\tOS.EnterDate,\n\t\tOS.Salary,\n\t\tOS.EmergencyContact,\n\t\tOS.EmergencyContactNumber,\n\t\tOS.ContractNumber,\n\t\tOS.WorkNumber,\n\t\tOS.Ethnicity,\n\t\tOS.Origin,\n\t\tOS.Education,\n\t\tOS.GraduateInstitutions,\n\t\tOS.IsMarried,\n\t\tOS.ContractEndDate,\n\t\tOS.BirthDate,\n\t\tOS.HomeAddress,\n\t\tOS.IdIssuanceAuthority,\n\t\tOS.IdEndDate,\n\t\tOS.BankCardNumber,\n\t\tOS.AccommodationState,\n\t\tOS.SocialSecurityNumber,\n\t\tOS.ProvidentFundNumber,\n\t\tOS.Remark,\n\t\tOS.ImportUserId,\n\t\tOS.ImportDate,\n\t\tOS.BankId,\n\t\tOS.WorkGroupName,\n\t\tOS.Age,\n\t\tOS.State,\n\t\tU.UnitName UnitName,\n\t\tB.BankName BankName,\n\t\tD.Name AccommodationStateName,\n\t\tBU.Nickname ImportUserName\n\tFROM\n\t\tBD_OuterStaff OS\n\tLEFT JOIN\n\t\tUnit U\n\tON\n\t\tU.Id = OS.UnitId\n\tLEFT JOIN\n\t\tDotBank B\n\tON\n\t\tB.Id = OS.BankId\n\tLEFT JOIN\n\t\tBD_Dictionary D\n\tON\n\t\tD.Type = 'AccommodationStates' AND D.Value = AccommodationState\n\tLEFT JOIN\n\t\tBD_Users BU\n\tON\n\t\tBU.Id = OS.ImportUserId\n) T\nWHERE\n\t$Filters",
    "CacheToken": "",
    "Description": "获取派遣员工数据总数",
    "Demo": ""
  },
  {
    "RowNum": 138,
    "Id": 1184,
    "Name": "ReadPageOuterStaffs",
    "Type": "T-SQL",
    "Sign": 1,
    "Code": "SELECT\n\t*\nFROM (\n\tSELECT\n\t\tROW_NUMBER()OVER(ORDER BY $Orders) RowNum,\n\t\t*\n\tFROM (\n\t\tSELECT TOP (@End)\n\t\t\t*\n\t\tFROM (\n\t\t\tSELECT \n\t\t\t\tOS.Id,\n\t\t\t\tOS.Name,\n\t\t\t\tOS.Sex,\n\t\t\t\tOS.IdNumber,\n\t\t\t\tOS.Mobile,\n\t\t\t\tOS.UnitId,\n\t\t\t\tOS.EnterDate,\n\t\t\t\tOS.Salary,\n\t\t\t\tOS.EmergencyContact,\n\t\t\t\tOS.EmergencyContactNumber,\n\t\t\t\tOS.ContractNumber,\n\t\t\t\tOS.WorkNumber,\n\t\t\t\tOS.Ethnicity,\n\t\t\t\tOS.Origin,\n\t\t\t\tOS.Education,\n\t\t\t\tOS.GraduateInstitutions,\n\t\t\t\tOS.IsMarried,\n\t\t\t\tOS.ContractEndDate,\n\t\t\t\tOS.BirthDate,\n\t\t\t\tOS.HomeAddress,\n\t\t\t\tOS.IdIssuanceAuthority,\n\t\t\t\tOS.IdEndDate,\n\t\t\t\tOS.BankCardNumber,\n\t\t\t\tOS.AccommodationState,\n\t\t\t\tOS.SocialSecurityNumber,\n\t\t\t\tOS.ProvidentFundNumber,\n\t\t\t\tOS.Remark,\n\t\t\t\tOS.ImportUserId,\n\t\t\t\tOS.ImportDate,\n\t\t\t\tOS.BankId,\n\t\t\t\tOS.WorkGroupName,\n\t\t\t\tOS.Age,\n\t\t\t\tOS.State,\n\t\t\t\tU.UnitName UnitName,\n\t\t\t\tB.BankName BankName,\n\t\t\t\tD.Name AccommodationStateName,\n\t\t\t\tBU.Nickname ImportUserName\n\t\t\tFROM\n\t\t\t\tBD_OuterStaff OS\n\t\t\tLEFT JOIN\n\t\t\t\tUnit U\n\t\t\tON\n\t\t\t\tU.Id = OS.UnitId\n\t\t\tLEFT JOIN\n\t\t\t\tDotBank B\n\t\t\tON\n\t\t\t\tB.Id = OS.BankId\n\t\t\tLEFT JOIN\n\t\t\t\tBD_Dictionary D\n\t\t\tON\n\t\t\t\tD.Type = 'AccommodationStates' AND D.Value = AccommodationState\n\t\t\tLEFT JOIN\n\t\t\t\tBD_Users BU\n\t\t\tON\n\t\t\t\tBU.Id = OS.ImportUserId\n\t\t) T\n\t\tWHERE\n\t\t\t$Filters\n\t\tORDER BY\n\t\t\t$Orders\n\t)T\n)T\nWHERE T.RowNum >= @Begin",
    "CacheToken": "",
    "Description": "分页读取派遣员工信息",
    "Demo": ""
  },
  {
    "RowNum": 139,
    "Id": 1183,
    "Name": "APPGetWeeKReport",
    "Type": "T-SQL",
    "Sign": 1,
    "Code": "DECLARE @FirstWeek int=(@Week)*7;\n\nDECLARE @NextWeek int=(@Week+1)*7;\n\nDECLARE @FirstDayOfWeek DATE = DATEADD(week,DATEDIFF(week,0,getdate()),@FirstWeek);\n\nDECLARE @FirstDayOfNextWeek DATE =DATEADD(week,DATEDIFF(week,0,getdate()),@NextWeek);\n\nSELECT WorkTypeId,WorkTypes,SUM(UpUserCount) UpUserCount,SUM(AddUserCount) AddUserCount,SUM(ZiliCount) ZiliCount,SUM(LossRate) LossRate,(select COUNT(1) from BD_Users \nwhere Id in ( select distinct ImportUserId from BD_OuterStaff where ImportUserId>0 and UnitId in( select Id from Unit where WorkTypeId=T.WorkTypeId ) )) ActualCount,COUNT(Id) AlreadyCount from\n(SELECT w.Id,u.WorkTypeId,d.Name WorkTypes,w.UpUserCount,w.AddUserCount,w.CizhiCount ZiliCount,(cast(((w.ZiliCount+w.CizhiCount)*1.0/(w.UpUserCount+w.AddUserCount))as decimal(18,4))*100) LossRate\n from WeeKReport w\nleft join Unit u on w.ComId =u.Id\nleft join BD_Dictionary d \non d.Type='WorkTypes' and d.Value=u.WorkTypeId\nwhere w.BeginTime>=@FirstDayOfWeek and w.BeginTime<@FirstDayOfNextWeek and w.EndTime>@FirstDayOfWeek and w.EndTime<@FirstDayOfNextWeek\n ) T\n group by WorkTypes,WorkTypeId\n\n",
    "CacheToken": "",
    "Description": "周检表报表",
    "Demo": "[\n  {\n    \"Id\": \"001\",\n    \"UnitName\": \"京东项目\",\n    \"UpUserCount\": \"45\",\n    \"AddUserCount\": \"45\",\n    \"CizhiCount\": \"45\",\n    \"LossRate\": \"0%\"\n  },\n  {\n    \"Id\": \"002\",\n    \"UnitName\": \"富士康项目\",\n    \"UpUserCount\": \"45\",\n    \"AddUserCount\": \"45\",\n    \"CizhiCount\": \"45\",\n    \"LossRate\": \"0%\"\n  },\n  {\n    \"Id\": \"003\",\n    \"UnitName\": \"外派小时工\",\n    \"UpUserCount\": \"45\",\n    \"AddUserCount\": \"45\",\n    \"CizhiCount\": \"45\",\n    \"LossRate\": \"0%\"\n  }\n]"
  },
  {
    "RowNum": 140,
    "Id": 1182,
    "Name": "APPGetReportPersonal",
    "Type": "T-SQL",
    "Sign": 1,
    "Code": "SELECT\n\t*\nFROM (\n\tSELECT\n\t\tROW_NUMBER()OVER(ORDER BY Month desc ) RowNum,\n\t\t*\n\tFROM (\n\t\tSELECT TOP (@End)\n\t\t\t*\n\t\tFROM (\n\t\t\tselect r.Id,o.Name,d.Name Department,convert(varchar(7),r.CreateTime,120) Month,case when r.HeadTime is null and r.CEOTime is null then 0 else 1 end AuditStart  from Report r\nleft join BD_Users u on r.UserId=u.Id\nleft join BD_OuterStaff o on u.IdNumber=o.IdNumber\nleft join BD_Dictionary d ON d.Type = 'Department' AND d.Value = u.DepartmentId  and r.UserId=@UserId\n\t\t) T\n\t\tWHERE\n\t\t\t$Filters\n\t\tORDER BY\n\t\t\tMonth desc\n\t)T\n)T\nWHERE T.RowNum >= @Begin",
    "CacheToken": "",
    "Description": "月度总结个人",
    "Demo": " [\n{\"Id\":“1001”, “Name”:”张三”,\" CreateTime \":“2018-01-05 18:38:10” ,” AuditStart”:1}，\n{\"Id\":“1002”, “Name”:”张三”,\" CreateTime \":“2018-02-05 18:38:10” ,” AuditStart”:1}，\n{\"Id\":“1003”, “Name”:”张三”,\" CreateTime \":“2018-03-05 18:38:10”,” AuditStart”:1}\n]\n"
  },
  {
    "RowNum": 141,
    "Id": 1181,
    "Name": "APPDebitTimes",
    "Type": "T-SQL",
    "Sign": 1,
    "Code": "DECLARE @FirstDayOfMonth DATE = DATEADD(DAY, 1 - DAY(@Now), @Now);\nDECLARE @FirstDayOfNextMonth DATE = DATEADD(MONTH, 1, @FirstDayOfMonth);\n\nSELECT Id, IdNumber, Card, Bank, Money, Content, CreateTime, Sort, IsStill, StillTime FROM DebitMoney WHERE IDNumber = @IdNumber AND CreateTime >= @FirstDayOfMonth AND CreateTime < @FirstDayOfNextMonth",
    "CacheToken": "",
    "Description": "通过身份证号读取本月借支记录",
    "Demo": ""
  },
  {
    "RowNum": 142,
    "Id": 1180,
    "Name": "APPGetBank",
    "Type": "T-SQL",
    "Sign": 65,
    "Code": "select BankCardNumber, BankName Address from BD_Users u left join BD_OuterStaff o  on u.IdNumber=o.IdNumber left join DotBank d on o.BankId=d.Id where u.Id=@UserId",
    "CacheToken": "",
    "Description": "获取银行信息",
    "Demo": "{\n   \" BankCardNumber \":\"6223636265565493\",\n   \" Address \":\"民生银行坂田支行\"\n}\n"
  },
  {
    "RowNum": 143,
    "Id": 1179,
    "Name": "APPGetRentalFee",
    "Type": "T-SQL",
    "Sign": 1,
    "Code": "\nSELECT\n\t*\nFROM (\n\tSELECT\n\t\tROW_NUMBER()OVER(ORDER BY Id Asc ) RowNum,\n\t\t*\n\tFROM (\n\t\tSELECT TOP (@End)\n\t\t\t*\n\t\tFROM (\n                       SELECT c.Id,c.AlareId,d.Name AlareName, convert(varchar(7),c.Month,120) TextMonth,c.Month,c.Water,c.Electricity,c.Management,c.Rent,c.UpdateTime,c.Accessory,c.Url  from Cost c\n                        left join BD_Dictionary d\n                        on d.Type='AlareType' and  c.AlareId=d.Value\n\t\t) T\n\t\tWHERE\n\t\t\t$Filters\n\t\tORDER BY\n\t\t\tId Asc\n\t) T\n) T\nWHERE T.RowNum >= @Begin",
    "CacheToken": "",
    "Description": "宿舍电费管理",
    "Demo": "[\n{\" Id\":“001”, \"AlareId\":1,\"AlareName\":\"卫东龙\", \"Month\":“201805”, “Electricity”：“45”,“Water”：“ 45”,“Management”:“45”，“Rent”：“45”，“Accessory”:“ 1805详情表”，“Url”：“www.baidu.com”}，\n{\" Id\":“002”, \"AlareId\":1, \"AlareName\":\"卫东龙\", \"Month\":“201806”, “Electricity”：“45”,“Water”：“ 45”,“Management”:“45”，“Rent”：“45”，“Accessory”:“ 1806详情表” ，“Url”：“www.baidu.com”}，\n{\" Id\":“003”, \"AlareId\":1, \"AlareName\":\"卫东龙\", \"Month\":“201807”, “Electricity”：“45”,“Water”：“ 45”,“Management”:“45”，“Rent”：“45”，“Accessory”:“ 1807详情表” ，“Url”：“www.baidu.com”}\n]"
  },
  {
    "RowNum": 144,
    "Id": 1178,
    "Name": "APPGetWeeKReportDetails",
    "Type": "T-SQL",
    "Sign": 1,
    "Code": "SELECT w.Id,w.ComId,w.Title,u.UnitName,d.Name WorkTypes,w.UpUserCount,w.AddUserCount,w.ZiliCount,w.CizhiCount,w.CituiCount,w.NoPassCount,w.ExpireCount,w.PassCount,w.NowCount, (cast(((w.ZiliCount+w.CizhiCount)*1.0/(w.UpUserCount+w.AddUserCount))as decimal(18,4))*100) LossRate,w.GongshangCount, convert(varchar(10), w.BeginTime,120) BeginTime , convert(varchar(10), w.EndTime,120) EndTime,w.YiwaiCount from  WeeKReport w\n\t\t\t\t\tleft join Unit u on w.ComId =u.Id\n\t\t\t\t\tleft join BD_Dictionary d \n\t\t\t\t\ton d.Type='WorkTypes' and d.Value=u.WorkTypeId\n                                        Where w.Id=@Id",
    "CacheToken": "",
    "Description": "周检表详情",
    "Demo": "{\n\"Id\":1, \"UnitName\":“京东项目”, “UpUserCount”：45, “AddUserCount”：45, “ZiliCount”：1，“CizhiCount”：“1” , “CituiCount”：1，“NoPassCount”：1，“ExpireCount”：1，“PassCount”：1,” NowCount”:1， “LossRate”：“0%”， “GongshangCount”：1，“YiwaiCount”：1，“Remark”：“备注”\n}"
  },
  {
    "RowNum": 145,
    "Id": 1173,
    "Name": "APPAddReportCEO",
    "Type": "T-SQL",
    "Sign": 4,
    "Code": "UPDATE Report SET CEOContent = @CEOContent, CEOTime = @Time WHERE Id = @Id\n\nDECLARE @Title varchar(10) = '月度总结审核';--标题\n\nDECLARE @AuditContent varchar(50) = '您的月度总结已被总经理';--内容\n\nDECLARE @Name varchar(10) = '';--内容\n\nselect @Name=Name from  BD_OuterStaff o \nleft join BD_Users u on o.IdNumber=u.IdNumber where u.Id=@UserId\n\nINSERT INTO Message(Title,Content,State,PushUserId,CreateTime,CreateUser)\nselect @Title,@AuditContent+@Name+'审核',0,r.UserId,GETDATE(),@UserId from Report r WHERE Id = @Id",
    "CacheToken": "",
    "Description": "月度总结审核（总经理）",
    "Demo": "{\n    \"code\":\"0\",\n\" msg \": \"正确执行\"\n}\n"
  },
  {
    "RowNum": 146,
    "Id": 1172,
    "Name": "APPAddReportHead",
    "Type": "T-SQL",
    "Sign": 4,
    "Code": "UPDATE Report SET Ability = @Ability, Attitude = @Attitude, Communicate = @Communicate, Obey = @Obey, Handle = @Handle, HeadContent = @HeadContent, HeadUserId = @UserId, HeadTime = @Time WHERE Id = @Id\n\nDECLARE @Title varchar(10) = '月度总结审核';--标题\n\nDECLARE @AuditContent varchar(50) = '您的月度总结已被部门经理';--内容\n\nDECLARE @Name varchar(10) = '';--内容\n\nselect @Name=Name from  BD_OuterStaff o \nleft join BD_Users u on o.IdNumber=u.IdNumber where u.Id=@UserId\n\nINSERT INTO Message(Title,Content,State,PushUserId,CreateTime,CreateUser)\nselect @Title,@AuditContent+@Name+'审核',0,r.UserId,GETDATE(),@UserId from Report r WHERE Id = @Id",
    "CacheToken": "",
    "Description": "月度总结审核（负责人）",
    "Demo": "{\n    \"code\":\"0\",\n\" msg \": \"正确执行\"，\n}\n"
  },
  {
    "RowNum": 147,
    "Id": 1171,
    "Name": "APPGetReportInfo",
    "Type": "T-SQL",
    "Sign": 1,
    "Code": "select Id,Attendance,Emergency,Lackwork,Innovation,Business,HeadContent,CEOContent,Ability,Attitude,Communicate,Obey,Handle from  Report   Where Id=@Id",
    "CacheToken": "",
    "Description": "获取月度总结数据",
    "Demo": "{\n   Id \":“1001”,\n \"Emergency \":“突发事件”, \n\" Lackwork \":“工作不足”, \n“Innovation”：“创新及可行性建议”,\n“Business”：“ 业务成交明细”,\n“Ability”：“A”，\n“Attitude”：“A”，\n“Communicate”：“A”，\n“Obey”：“A”，\n“Handle”：“A”，\n“HeadContent ”：“部门负责人考核确认内容”，\n“CEOContent”:“总经理确认内容”\n}\n"
  },
  {
    "RowNum": 148,
    "Id": 1170,
    "Name": "APPGetReport",
    "Type": "T-SQL",
    "Sign": 1,
    "Code": "SELECT\n\t*\nFROM (\n\tSELECT\n\t\tROW_NUMBER()OVER(ORDER BY Month desc ) RowNum,\n\t\t*\n\tFROM (\n\t\tSELECT TOP (@End)\n\t\t\t*\n\t\tFROM (\n\t\t\tselect r.Id,o.Name,o.IdNumber,d.Name Department,convert(varchar(7),r.CreateTime,120) Month,case when r.HeadTime is null and r.CEOTime is null then 0 when r.HeadTime is not null and r.CEOTime is not null then 2 else 1 end AuditStart from Report r\nleft join BD_Users u on r.UserId=u.Id\nleft join BD_OuterStaff o on u.IdNumber=o.IdNumber\nleft join BD_Dictionary d ON d.Type = 'Department' AND d.Value = u.DepartmentId\n\t\t) T\n\t\tWHERE\n\t\t\t$Filters\n\t\tORDER BY\n\t\t\tMonth desc\n\t)T\n)T\nWHERE T.RowNum >= @Begin",
    "CacheToken": "",
    "Description": "月度总结历史",
    "Demo": " [\n{\"Id\":“1001”, “Name”:”张三”,\" CreateTime \":“2018-01-05 18:38:10” .” AuditStart”:0}，\n{\"Id\":“1002”, “Name”:”张三”,\" CreateTime \":“2018-02-05 18:38:10” ,” AuditStart”:0}，\n{\"Id\":“1003”, “Name”:”张三”,\" CreateTime \":“2018-03-05 18:38:10”,” AuditStart”:0 }\n]"
  },
  {
    "RowNum": 149,
    "Id": 1167,
    "Name": "AutoImportResults",
    "Type": "System",
    "Sign": 65,
    "Code": "// SystemImpl",
    "CacheToken": "",
    "Description": "自动识别返回值",
    "Demo": ""
  },
  {
    "RowNum": 150,
    "Id": 1166,
    "Name": "APPGetDebitHistory",
    "Type": "T-SQL",
    "Sign": 1,
    "Code": "select AuditTime,AuditContent from DebitAudit where DebitId=@Id  and AuditTime is not null  order by Sort Asc\n",
    "CacheToken": "",
    "Description": "借支历史记录详情",
    "Demo": "[\n{\" AuditTime \":\" 2018年6月5日09:54 \", \" AuditContent \":\"借款中\"}，\n{\" AuditTime \":\" 2018年6月6日09:54 \", \" AuditContent \":\"汪瑛审核[审核同意] \"}，\n{ \" AuditTime \":\" 2018年6月7日09:54 \", \" AuditContent \":\"部门审核\"}，\n{ \" AuditTime \":\" 2018年6月11日14:04 \", \" AuditContent \":\"副总经理审核\"}，\n{ \" AuditTime \":\" 2018年6月12日14:04 \", \" AuditContent \":\"总经理审核\"}，\n{ \" AuditTime \":\"2018年6月13日14:04 \", \" AuditContent \":\"转支付宝成功\"}，\n]"
  },
  {
    "RowNum": 151,
    "Id": 1165,
    "Name": "APPDebitHistory",
    "Type": "T-SQL",
    "Sign": 1,
    "Code": "SELECT\n\t*\nFROM (\n\tSELECT\n\t\tROW_NUMBER()OVER(ORDER BY Id) RowNum,\n\t\t*\n\tFROM (\n\t\tSELECT TOP (@End)\n\t\t\t*\n\t\tFROM (\n\t\t\tSELECT Id,Money,CreateTime,(case when IsStill=1 then 3\n     when IsStill=0 and Sort<5  then 1\n\t when IsStill=0 and (select AuditState from DebitAudit d where d.DebitId=m.Id and Sort=5 )>0 then 2\n     else 0 end  )DebitState from DebitMoney m where IdNumber = (SELECT TOP 1 IdNumber FROM BD_Users WHERE Id = @UserId)\n\t\t) T\n\t\tWHERE\n\t\t\t$Filters\n\t\tORDER BY\n\t\t\tId\n\t)T\n)T\nWHERE T.RowNum >= @Begin\n",
    "CacheToken": "",
    "Description": "借支历史记录",
    "Demo": "[\n{ \" Id \":001,\" Money\":200, \"  CreateTime\":\" 2018年6月5日09:54 \", \" DebitState \":\"借款中\"}，\n{ \" Id \":002,\" Money\":200, \" CreateTime \":\" 2018年6月10日09:54 \", \" DebitState \":\"已放款\"}，\n{ \" Id \":003,\"  Money\":200, \" CreateTime \":\" 2018年6月11日09:54 \", \" DebitState\":\"已放款\"}\n]\n"
  },
  {
    "RowNum": 152,
    "Id": 1164,
    "Name": "APPGetUnretracted",
    "Type": "System",
    "Sign": 65,
    "Code": " [\n{ \" Unit\":\"京东派遣 \", \" DebitNumber\":\"45\",\" DebitMoney \":\"200.00\"}，\n{ \" Unit\":\"京东派遣 \", \" DebitNumber\":\"45\",\" DebitMoney \":\"200.00\"}，\n{ \" Unit\":\"京东派遣 \", \" DebitNumber\":\"45\",\"Debit Money \":\"200.00\"}",
    "CacheToken": "",
    "Description": "借支未收回款项",
    "Demo": " [\n{ \" Unit\":\"京东派遣 \", \" DebitNumber\":\"45\"，\" DebitMoney \":\"200.00\"}，\n{ \" Unit\":\"京东派遣 \", \" DebitNumber\":\"45\"，\" DebitMoney \":\"200.00\"}，\n{ \" Unit\":\"京东派遣 \", \" DebitNumber\":\"45\"，\"Debit Money \":\"200.00\"}\n]\n"
  },
  {
    "RowNum": 153,
    "Id": 1163,
    "Name": "APPGetAuditedDebit",
    "Type": "T-SQL",
    "Sign": 1,
    "Code": "DECLARE @FirstDayOfMonth DATE = DATEADD(DAY, 1 - DAY(@Now), @Now);\nDECLARE @FirstDayOfNextMonth DATE = DATEADD(MONTH, 1, @FirstDayOfMonth);\n\nIF(@BeginTime is not null )\nbegin\n    set @FirstDayOfMonth=@BeginTime\nend\nIF(@EndTime is not null )\nbegin\n    set @FirstDayOfNextMonth=@EndTime\nend\n\nbegin\nSELECT\n\t*\nFROM (\n\tSELECT\n\t\tROW_NUMBER()OVER(ORDER BY CreateTime desc ) RowNum,\n\t\t*\n\tFROM (\n\t\tSELECT TOP (@End)\n\t\t\t*\n\t\tFROM (\n\t\t\tSELECT m.Id,u.Name,u.IdNumber,un.UnitName,d.Name WorkName, m.Content,m.Money,m.CreateTime from DebitMoney m\n                        left join BD_OuterStaff u on m.IDNumber = u.IdNumber\n                        left join Unit un on u.UnitId=un.Id\n                        left join BD_Dictionary d on un.WorkTypeId=d.Value and d.Type='WorkTypes'\n\t\t\tleft join DebitAudit a on m.Sort=a.Sort\n\t\t\twhere m.Sort=( select MAX(Sort) from  DebitAudit) and a.AuditState>0\n\n\t\t) T\n\t\twhere T.CreateTime >= @FirstDayOfMonth AND T.CreateTime < @FirstDayOfNextMonth and ($Filters) \n\t\t--\t$Filters \n\t\tORDER BY\n\t\t\tCreateTime desc\n\t)T\n)T\nWHERE T.RowNum >= @Begin\nend\n",
    "CacheToken": "",
    "Description": "已审核借支",
    "Demo": "[\n{ \" Id \":\"1\",\" Name\":\"张三\", \" Content \":\"没钱吃饭\", \" Money \":200.00, \"CreateTime\":\"2018年6月5日09:54\" }，\n{ \" Id \":\"2\",\" Name\":\"张三\", \" Content \":\"没钱吃饭\", \" Money \":200.00, \"CreateTime\":\"2018年6月5日09:54\" }，\n{ \" Id \":\"3\",\" Name\":\"张三\", \" Content \":\"没钱吃饭 \", \" Money \":200.00, \"CreateTime\":\"2018年6月5日09:54\" }\n]"
  },
  {
    "RowNum": 154,
    "Id": 1162,
    "Name": "APPUpdateDebitAuditList",
    "Type": "T-SQL",
    "Sign": 4,
    "Code": "DECLARE @IsFind BIT = 0;\n\nDECLARE @Sort int = 0;\n\nDECLARE @MaxSort int = 0;\n\n\n-- 判断当前用户是否有审核该记录的角色。\nSELECT @IsFind = 1 FROM DebitAudit DA Left Join DebitSteps DS ON DS.Sort = DA.Sort WHERE DS.AuditRoleId IN ($RoleIds) AND ($Filters)\n\nIF @IsFind = 1 BEGIN\n   SELECT @Sort=Max(DA.Sort) FROM DebitAudit DA Left Join DebitSteps DS ON DS.Sort = DA.Sort WHERE DS.AuditRoleId IN ($RoleIds) AND ($Filters)\n\tSELECT @MaxSort=max(Sort)+1 from DebitSteps;\n\tIF @AuditState = 1 BEGIN\n\t\t-- 如果审核步骤有下一步，则新增一条审核数据。\n\t\tif(@Sort<@MaxSort)\n\t\tBEGIN\n\t\tDECLARE @DebitId int = 0;\n\t\tINSERT DebitAudit(DebitId, Sort) \n\t\tSELECT  DA.DebitId,@Sort+1 FROM DebitAudit DA Left Join DebitSteps DS ON DS.Sort = DA.Sort WHERE DS.AuditRoleId IN ($RoleIds) AND ($Filters)\n\t\t\t\n        END\n\tEND\n\n\tUPDATE DebitAudit SET AuditState = @AuditState, UserId = @UserId, AuditContent = @AuditContent, AuditTime = @Now WHERE Id IN (SELECT Id FROM DebitAudit DA Left Join DebitSteps DS ON DS.Sort = DA.Sort WHERE DS.AuditRoleId IN ($RoleIds) AND ($Filters))\n\n               DECLARE @Title varchar(10) = '借支审核';--标题\n\n       DECLARE @Content varchar(50) = '您的借支已被';--内容\n\n       DECLARE @RoleName varchar(20)='';--角色名\n\n       DECLARE @Name varchar(20)='';--姓名\n\n       select @RoleName=Name from BD_Roles where  Id=@UserRoleId\n       DECLARE @StateContent varchar(10) = '[不同意]';--内容\n\n       if(convert(bit,@AuditState)=1)\n        BEGIN\n       set @StateContent='[同意]'\n        END\n       INSERT INTO Message(Title,Content,State,PushUserId,CreateTime,CreateUser)\n       SELECT  @Title,@StateContent+@Content+@RoleName+'审核('+AuditContent+')',0,u.Id,GETDATE(),11 FROM BD_OuterStaff o \nleft join BD_Users u on o.IdNumber=u.IdNumber left join  DebitMoney d on o.IdNumber=d.IDNumber  WHERE  d.Id in ( select DebitId from DebitAudit where ( $Filters ) )\n\nEND ELSE BEGIN\n\tRAISERROR('没有找到记录。', 16, 1);\n\tRETURN;\nEND",
    "CacheToken": "",
    "Description": "批量借支审核",
    "Demo": "{\n    \"code\":\"0\",\n\" msg \": \"正确执行\"\n}\n\n\n如果是单个审核，添加一个筛选参数 \"[E]Id\": 1。\n如果是批量审核，添加一个筛选参数 \"[IN]Id\" : \"1,2,3,4,5...\"\n如果是全部审核，则不添加筛选参数。\n注意：如果没有添加筛选参数，则全部数据都会被审核！"
  },
  {
    "RowNum": 155,
    "Id": 1161,
    "Name": "APPUpdateDebitAudit",
    "Type": "T-SQL",
    "Sign": 4,
    "Code": "DECLARE @IsFind BIT = 0;\n\nDECLARE @Sort int = 0;\n\nDECLARE @MaxSort int = 0;\n\n\n-- 判断当前用户是否有审核该记录的角色。\nSELECT @IsFind = 1 FROM DebitAudit DA Left Join DebitSteps DS ON DS.Sort = DA.Sort WHERE DS.AuditRoleId IN ($RoleIds) AND ($Filters)\n\nIF @IsFind = 1 BEGIN\n   SELECT @Sort=Max(DA.Sort) FROM DebitAudit DA Left Join DebitSteps DS ON DS.Sort = DA.Sort WHERE DS.AuditRoleId IN ($RoleIds) AND ($Filters)\n\tSELECT @MaxSort=max(Sort)+1 from DebitSteps;\n\tIF @AuditState = 1 BEGIN\n\t\t-- 如果审核步骤有下一步，则新增一条审核数据。\n\t\tif(@Sort<@MaxSort)\n\t\tBEGIN\n\t\tDECLARE @DebitId int = 0;\n\t\tINSERT DebitAudit(DebitId, Sort) \n\t\tSELECT  DA.DebitId,@Sort+1 FROM DebitAudit DA Left Join DebitSteps DS ON DS.Sort = DA.Sort WHERE DS.AuditRoleId IN ($RoleIds) AND ($Filters)\n\t\t\t\n        END\n\tEND\n\n\tUPDATE DebitAudit SET AuditState = @AuditState, UserId = @UserId, AuditContent = @AuditContent, AuditTime = @Now WHERE Id IN (SELECT Id FROM DebitAudit DA Left Join DebitSteps DS ON DS.Sort = DA.Sort WHERE DS.AuditRoleId IN ($RoleIds) AND ($Filters))\n\n       DECLARE @Title varchar(10) = '借支审核';--标题\n\n       DECLARE @Content varchar(50) = '您的借支已被';--内容\n\n       DECLARE @RoleName varchar(20)='';--角色名\n\n       DECLARE @Name varchar(20)='';--姓名\n\n       select @RoleName=Name from BD_Roles where  Id=@UserRoleId\n       DECLARE @StateContent varchar(10) = '[不同意]';--内容\n\n       if(convert(bit,@AuditState)=1)\n        BEGIN\n       set @StateContent='[同意]'\n        END\n       INSERT INTO Message(Title,Content,State,PushUserId,CreateTime,CreateUser)\n       SELECT  @Title,@StateContent+@Content+@RoleName+'审核('+AuditContent+')',0,u.Id,GETDATE(),11 FROM BD_OuterStaff o \nleft join BD_Users u on o.IdNumber=u.IdNumber left join  DebitMoney d on o.IdNumber=d.IDNumber  WHERE  d.Id in ( select DebitId from DebitAudit where ( $Filters ) )\n\nEND ELSE BEGIN\n\tRAISERROR('没有找到记录。', 16, 1);\n\tRETURN;\nEND",
    "CacheToken": "",
    "Description": "单个借支审核",
    "Demo": "{\n    \"code\":\"0\",\n\" msg \": \"正确执行\"\n}\n\n\n如果是单个审核，添加一个筛选参数 \"[E]Id\": 1。\n如果是批量审核，添加一个筛选参数 \"[IN]Id\" : \"1,2,3,4,5...\"\n如果是全部审核，则不添加筛选参数。\n注意：如果没有添加筛选参数，则全部数据都会被审核！"
  },
  {
    "RowNum": 156,
    "Id": 1160,
    "Name": "APPGetDebitAuditList",
    "Type": "T-SQL",
    "Sign": 1,
    "Code": "SELECT\n\t*\nFROM (\n\tSELECT\n\t\tROW_NUMBER()OVER(ORDER BY Id) RowNum,\n\t\t*\n\tFROM (\n\t\tSELECT TOP (@End)\n\t\t\t*\n\t\tFROM (\n\t\t\t\t\t\t\tSELECT\n\t\t\t\tde.Id,\n\t\t\t\tb.Name,\n\t\t\t\tu.UnitName,\n\t\t\t\td.Money,\n\t\t\t\td.Content,\n\t\t\t\tb.EnterDate,\n\t\t\t\tb.IdNumber,\n\t\t\t\t(SELECT\n\t\t\t\tCOUNT(Id)\n\t\t\t\tFROM\n\t\t\t\tDebitMoney m\n\t\t\t\tWHERE\n\t\t\t\tm.IDNumber = d.IDNumber\n\t\t\t\tAND\n\t\t\t\tDATEDIFF(MONTH, m.CreateTime, d.CreateTime) < 1) Times, (SELECT SUM(MONEY) FROM DebitMoney m WHERE m.IDNumber=d.IDNumber AND DATEDIFF (MONTH, m.CreateTime,d.CreateTime ) <1 )MoneyTotal\n\t\t\t\tfrom DebitAudit de\n\t\t\t\tleft join  DebitMoney d\n\t\t\t\ton de.DebitId=d.Id\n\t\t\t\tleft join BD_OuterStaff b\n\t\t\t\ton d.IDNumber=b.IdNumber \n\t\t\t\tleft join Unit u on b.UnitId=u.Id \n\t\t\t\twhere IsStill<1 and de.AuditState  is null and de.Sort in (select Sort from DebitSteps where AuditRoleId in($RoleIds)) \n\t\t) T\n\t\tWHERE\n\t\t\t$Filters\n\t\tORDER BY\n\t\t\tId\n\t)T\n)T\nWHERE T.RowNum >= @Begin",
    "CacheToken": "",
    "Description": "获取借支审核",
    "Demo": "[{\"Id\":1,\"Name\":\"张三\",\"UnitName\":\"京东派遣\",\"Money\":200,\"Content\":\"没钱吃饭\",\"Times\":2,\"MoneyTotal\":1000},{\"Id\":2,\"Name\":\"张三\",\"UnitName\":\"京东派遣\",\"Money\":200,\"Content\":\"没钱吃饭\",\"Times\":2,\"MoneyTotal\":1000},{\"Id\":3,\"Name\":\"张三\",\"UnitName\":\"京东派遣\",\"Money\":200,\"Content\":\"没钱吃饭\",\"Times\":2,\"MoneyTotal\":1000}]"
  },
  {
    "RowNum": 157,
    "Id": 1159,
    "Name": "APPAddDebitMoney",
    "Type": "T-SQL",
    "Sign": 2,
    "Code": "DECLARE @DebitId INT;\n\nDECLARE @ImportUserId int = 0; \n\nselect @ImportUserId=ImportUserId from BD_OuterStaff o\n left join BD_Users u on o.IdNumber=u.IdNumber\n where u.Id=@UserId\n\nif @ImportUserId>0 \nBEGIN\nINSERT INTO DebitMoney(IDNumber, Card, Bank, Money, Content, CreateTime, Sort, IsStill) VALUES((select IdNumber from BD_Users where Id=@UserId ), @Card, @Bank,  @Money, @Content,@Now, 1, 0)\nSET @DebitId = @@IDENTITY;\nINSERT INTO DebitAudit(DebitId ,Sort) VALUES( @DebitId ,1)\nend",
    "CacheToken": "",
    "Description": "我要借支",
    "Demo": "{\n    \"code\":\"0\",\n\" msg \": \"正确执行\"\n\n}\n"
  },
  {
    "RowNum": 158,
    "Id": 1158,
    "Name": "APPUpdateInformation",
    "Type": "T-SQL",
    "Sign": 4,
    "Code": "declare @BirthDate varchar(20)\n\ndeclare @Age int\n\ndeclare @Sex bit\n\nexec sp_GetBirthDate_Age_Sex @IdNumber,@BirthDate output,@Age output,@Sex output\n\nUPDATE BD_Users SET IdNumber = @IdNumber WHERE Id = @UserId\n\nif exists(select 1  from BD_OuterStaff where IdNumber=@IdNumber) begin\n    UPDATE BD_OuterStaff SET Name=@FullName, WorkNumber = @WorkNumber, BankCardNumber = @BankCardNumber, BankId=@BankId,Sex=@Sex,BirthDate=@BirthDate,Age=@Age  WHERE IdNumber=@IdNumber\n\n\tif exists (select 1 from BD_OuterStaff where IdNumber=@IdNumber and ImportUserId is not null) begin\n\t\tupdate BD_Users set Role = @Int_OuterStaffRole where Id = @UserId;\n\tend\n\nend else begin\n    INSERT INTO BD_OuterStaff(IdNumber,Name,WorkNumber,BankCardNumber,BankId,Sex,BirthDate,Age ) VALUES (@IdNumber,@FullName,@WorkNumber,@BankCardNumber,@BankId,@Sex,@BirthDate,@Age)\nend",
    "CacheToken": "",
    "Description": "修改入职办理",
    "Demo": "{\n    \"code\":\"0\",\n\" msg \": \"正确执行\"\n}\n"
  },
  {
    "RowNum": 159,
    "Id": 1157,
    "Name": "InsertOuterStaff",
    "Type": "T-SQL",
    "Sign": 2,
    "Code": "// valid IdNumber IdNumber\n\n\n\nDECLARE @UnitId INT;\nDECLARE @InternalAccommodationState INT = NULL;\n\nIF @UnitName IS NULL OR @UnitName = '' BEGIN\n\tGOTO UnitNoExist;\nEND\n\nSELECT @UnitId = Id FROM Unit WHERE UnitName = @UnitName;\n\nIF @UnitId IS NULL BEGIN\n\tGOTO UnitNoExist;\nEND\n\nIF @BankId IS NULL BEGIN\n\tSELECT @BankId = Id FROM DotBank WHERE BankName = @BankName\nEND\n\nIF @AccommodationState IS NOT NULL BEGIN\n\tSET @InternalAccommodationState = @AccommodationState;\nEND ELSE IF @AccommodationStateName IS NOT NULL BEGIN\n\tSELECT @InternalAccommodationState = Value FROM BD_Dictionary WHERE Type = 'AccommodationStates' AND Name = @AccommodationStateName;\nEND\n\n-- 如果性别为 NULL，则读取身份证的性别\nIF @Sex IS NULL BEGIN\n\tSET @Sex = @SexByIdNumber;\nEND\n\n-- 如果年龄为 NULL，则读取身份证的年龄\nIF @Age IS NULL BEGIN\n\tSET @Age = @AgeByIdNumber;\nEND\n\n-- 如果出生日期为 NULL，则读取身份证的生日\nIF @BirthDate IS NULL BEGIN\n\tSET @BirthDate = @BirthdayByIdNumber;\nEND\n\n-- 如果离职状态为 NULL，则设为在职\nIF @State IS NULL BEGIN\n\tSET @State = 2;\nEND\n\nDECLARE @ExistId INT;\nDECLARE @ExistState INT;\n\nSELECT @ExistId = Id, @ExistState = State FROM BD_OuterStaff WHERE IdNumber = @IdNumber;\n\n-- 如果身份证存在则修改，不存在则更新。\nIF @ExistId IS NULL BEGIN\n\tINSERT BD_OuterStaff(Name, Sex, Age, IdNumber, Mobile, UnitId, EnterDate, Salary,\n\t\tEmergencyContact, EmergencyContactNumber, ContractNumber, WorkNumber,\n\t\tEthnicity, Origin, Education, GraduateInstitutions, IsMarried,\n\t\tContractEndDate, BirthDate, HomeAddress, IdIssuanceAuthority, IdEndDate,\n\t\tBankCardNumber, AccommodationState, SocialSecurityNumber, ProvidentFundNumber,\n\t\tRemark, ImportUserId, ImportDate, BankId, WorkGroupName, State)\n\t\tVALUES(@Name, @Sex, @Age, @IdNumber, @Mobile, @UnitId, @EnterDate, @Salary,\n\t\t@EmergencyContact, @EmergencyContactNumber, @ContractNumber, @WorkNumber,\n\t\t@Ethnicity, @Origin, @Education, @GraduateInstitutions, @IsMarried,\n\t\t@ContractEndDate, @BirthDate, @HomeAddress, @IdIssuanceAuthority, @IdEndDate,\n\t\t@BankCardNumber, @InternalAccommodationState, @SocialSecurityNumber, @ProvidentFundNumber,\n\t\t@Remark, @UserId, @Now, @BankId, @WorkGroupName, @State)\nEND ELSE BEGIN\n\n\t-- 黑名单判断\n\tIF @ExistState = 3 BEGIN\n\t\tGOTO Blacklist;\n\tEND\n\n\t-- TODO: 离职三天内不能导入\n\tIF @ExistState = 1 BEGIN\n\t\tDECLARE @LeaveDate DATE;\n\n\t\tSELECT @LeaveDate = QuitTime FROM Quit WHERE IDNumber = @IdNumber;\n\n\t\tIF @LeaveDate IS NOT NULL AND DATEDIFF(DAY, @LeaveDate, @Now) <= 3 BEGIN\n\t\t\tGOTO LeaveLess3Days;\n\t\tEND\n\tEND\n\n\t-- 当导入用户或工作单位和之前不一致时插入到异常表。\n\tINSERT Abnormal(IDNumber, LastEntryTime, LastEntryUnit, LastUserId, EntryTime, EntryUnit, UserId)\n\t\tSELECT IdNumber, EnterDate, UnitId, ImportUserId, @EnterDate, @UnitId, @UserId FROM BD_OuterStaff WHERE IDNumber = @IdNumber AND (ImportUserId != @UserId OR UnitId != @UnitId)\n\n\tUPDATE BD_OuterStaff SET\n\t\tName = \t\t\t\t\tISNULL(@Name, Name),\n\t\tSex = \t\t\t\t\tISNULL(@Sex, Sex),\n\t\tAge = \t\t\t\t\tISNULL(@Age, Age),\n\t\tMobile = \t\t\t\tISNULL(@Mobile, Mobile),\n\t\tUnitId = \t\t\t\t\tISNULL(@UnitId, UnitId),\n\t\tEnterDate = \t\t\t\tISNULL(@EnterDate, EnterDate),\n\t\tSalary = \t\t\t\t\tISNULL(@Salary, Salary),\n\t\tEmergencyContact =\t\tISNULL(@EmergencyContact, EmergencyContact),\n\t\tEmergencyContactNumber =\tISNULL(@EmergencyContactNumber, EmergencyContactNumber),\n\t\tContractNumber =\t\t\tISNULL(@ContractNumber, ContractNumber),\n\t\tWorkNumber =\t\t\tISNULL(@WorkNumber, WorkNumber),\n\t\tEthnicity = \t\t\t\tISNULL(@Ethnicity, Ethnicity),\n\t\tOrigin = \t\t\t\t\tISNULL(@Origin, Origin),\n\t\tEducation = \t\t\t\tISNULL(@Education, Education),\n\t\tGraduateInstitutions =\t\tISNULL(@GraduateInstitutions, GraduateInstitutions),\n\t\tIsMarried = \t\t\t\tISNULL(@IsMarried, IsMarried),\n\t\tContractEndDate = \t\tISNULL(@ContractEndDate, ContractEndDate),\n\t\tBirthDate = \t\t\t\tISNULL(@BirthDate, BirthDate),\n\t\tHomeAddress = \t\t\tISNULL(@HomeAddress, HomeAddress),\n\t\tIdIssuanceAuthority =\t\tISNULL(@IdIssuanceAuthority, IdIssuanceAuthority),\n\t\tIdEndDate = \t\t\t\tISNULL(@IdEndDate, IdEndDate),\n\t\tBankCardNumber =\t\tISNULL(@BankCardNumber, BankCardNumber),\n\t\tAccommodationState =\t\tISNULL(@InternalAccommodationState, AccommodationState),\n\t\tSocialSecurityNumber =\t\tISNULL(@SocialSecurityNumber, SocialSecurityNumber),\n\t\tRemark = \t\t\t\tISNULL(@Remark, Remark),\n\t\tImportUserId = \t\t\tISNULL(@UserId, ImportUserId),\n\t\tImportDate = \t\t\t\tISNULL(@Now, ImportDate),\n\t\tBankId =  \t\t\t\tISNULL(@BankId, BankId),\n\t\tWorkGroupName = \t\tISNULL(@WorkGroupName, WorkGroupName),\n\t\tState =  \t\t\t\t\tISNULL(@State, State)\n\tWHERE Id = @ExistId\nEND\n\nUPDATE BD_Users SET Role = @Int_OuterStaffRole WHERE Type = 3 AND IdNumber = @IdNumber;\n\nRETURN;\n\nUnitNoExist:\n\tRAISERROR('工作单位不存在！', 16, 1);\n\tRETURN;\n\nBankNoExist:\n\tRAISERROR('银行不存在！', 16, 1);\n\tRETURN;\n\nBlacklist:\n\tRAISERROR('黑名单！', 16, 1);\n\tRETURN;\n\nLeaveLess3Days:\n\tRAISERROR('离职未超过三天！', 16, 1);\n\tRETURN;",
    "CacheToken": "",
    "Description": "新增派遣员工信息",
    "Demo": ""
  },
  {
    "RowNum": 160,
    "Id": 1154,
    "Name": "ImportOuterStaffs",
    "Type": "System",
    "Sign": 66,
    "Code": "// SystemImpl",
    "CacheToken": "",
    "Description": "导入派遣员工信息，支持 Excel 数据和文本数据",
    "Demo": ""
  },
  {
    "RowNum": 161,
    "Id": 1153,
    "Name": "APPMyPayroll",
    "Type": "T-SQL",
    "Sign": 65,
    "Code": "SELECT TOP 1 Id, IdNumber, Payroll, ShouldWages, PersonalTax, Debit, Utilities, Rent, Poundage, SocialSecurity, Fund, CONCAT(YEAR(AddMonth), '-', MONTH(AddMonth)) AddMonth FROM UserPayroll WHERE IDNumber = (SELECT IdNumber FROM BD_Users WHERE Id = @UserId) ORDER BY Id DESC",
    "CacheToken": "",
    "Description": "我的工资条",
    "Demo": ""
  },
  {
    "RowNum": 162,
    "Id": 1152,
    "Name": "APPMyMessage",
    "Type": "T-SQL",
    "Sign": 1,
    "Code": "SELECT\n\t*\nFROM (\n\tSELECT\n\t\tROW_NUMBER()OVER(ORDER BY Id DESC) RowNum,\n\t\t*\n\tFROM (\n\t\tSELECT TOP (@End)\n\t\t\t*\n\t\tFROM (\n\t\t\tSELECT Id,Title,Content,CreateTime,State from Message where PushUserId=@UserId\n\t\t) T\n\t\tWHERE\n\t\t\t$Filters\n\t\tORDER BY\n\t\t\tId DESC\n\t) T\n) T\nWHERE T.RowNum >= @Begin\n\n",
    "CacheToken": "",
    "Description": "我的消息",
    "Demo": "[\n{\" Id\":“001”, \"Title\":“您提交的周报已被汪瑛审核”, \"Content\":“您提交的周报已被汪瑛审核”, “CreateTime”：“2018年6月5日18:38:10”,“State”：“ 0”}\n{\" Id\":“002”, \"Title\":“路人甲，您的辞职申请已审核通过”, \"Content\":“路人甲，您的辞职申请已审核通过”, “CreateTime”：“2018年6月5日18:38:10”,“State”：“ 0”}\n}"
  },
  {
    "RowNum": 163,
    "Id": 1151,
    "Name": "APPViewMessage",
    "Type": "T-SQL",
    "Sign": 4,
    "Code": "UPDATE Message SET State = 1 WHERE Id = @Id",
    "CacheToken": "",
    "Description": "修改消息状态",
    "Demo": "{\n    \"code\":\"0\",\n\" msg \": \"正确执行\"\n\n}\n"
  },
  {
    "RowNum": 164,
    "Id": 1148,
    "Name": "APPGetInformation",
    "Type": "T-SQL",
    "Sign": 65,
    "Code": "select o.Name,o.IdNumber,o.WorkNumber,o.BankCardNumber,do.Id BankId,do.BankName from BD_OuterStaff o left join BD_Users d on o.IdNumber=d.IdNumber left join DotBank do on o.BankId=do.Id where d.Id=@UserId\n",
    "CacheToken": "",
    "Description": "获取入职办理",
    "Demo": "{\"FullName\":\"张三\",\" IDNumber\":\"420621965236852361\",\" WorkNumber\":\"688493\",\"BankCardNumber\":\"6223636265565493\",\"Address\":\"民生银行坂田支行\"}"
  },
  {
    "RowNum": 165,
    "Id": 1147,
    "Name": "GetVerificationCode",
    "Type": "System",
    "Sign": 65,
    "Code": "// System Impl",
    "CacheToken": "",
    "Description": "用户注册验证码获取-tjw",
    "Demo": ""
  },
  {
    "RowNum": 166,
    "Id": 1146,
    "Name": "APPUserRegister",
    "Type": "T-SQL",
    "Sign": 2,
    "Code": "If exists(Select top 1 * from [BD_Users] where UserName_c=@Phone)\n   Begin\n              RAISERROR('PhoneExist', 16, 1)\n              RETURN\n  End\nElse\n      Begin\n                    Declare @GetCode nvarchar(10)  --最近2分钟发出去的最后一条验证码\n                    select  top 1  @GetCode=isnull(Vl_Verification,'-1') from [dbo].[T_VerificationList] Where Vl_UserPhone=@Phone and DATEDIFF(MINUTE,Vl_Time,GETDATE())<=5 ORDER BY Vl_Id DESC;\n                     If  Len(@Code)=0\n                               Begin\n                                          RAISERROR('CodeIsNull', 17, 1)\n                                          RETURN\n                               End\n                     Else If @Code<>@GetCode  or @GetCode is null\n                                Begin\n                                         RAISERROR('CodeIsErr', 18, 1)\n                                        RETURN\n                                End\n\n\n                     Declare @Role int ,\n\t                         @Type int\n                    Select @Role=id from [dbo].[BD_Roles] where name='普通用户'\n                   Set @Type=3\n                   INSERT INTO [dbo].[BD_Users] ([UserName_c] ,[Password],[Role],[Nickname] ,[Type],Avatar,Contact,ContactPhone,Guid)\n                                                   VALUES (@Phone, dbo.MD5(@Password),@Role,@Name,@Type,'',@Name,@Phone,@NewGuid)\n       End",
    "CacheToken": "",
    "Description": "进行用户注册-tjw",
    "Demo": "get请求示例：http://47.106.146.13:806/api?Command=APPUserRegister&Time=2018-07-19&"
  },
  {
    "RowNum": 167,
    "Id": 1144,
    "Name": "PrintGAP",
    "Type": "System",
    "Sign": 82,
    "Code": "// System Impl",
    "CacheToken": "",
    "Description": "打印告知书（生成页面文件）",
    "Demo": ""
  },
  {
    "RowNum": 168,
    "Id": 1143,
    "Name": "UploadFile",
    "Type": "System",
    "Sign": 68,
    "Code": "// System Impl",
    "CacheToken": "",
    "Description": "上传文件 (multipart/form-data) 格式。",
    "Demo": ""
  },
  {
    "RowNum": 169,
    "Id": 1109,
    "Name": "DeleteAdminAndRole",
    "Type": "T-SQL",
    "Sign": 24,
    "Code": "BEGIN TRAN\n\nINSERT System_DataLogs(Guid, OpType, Time, UserId) SELECT Guid, 3, @Now, @UserId FROM BD_Roles WHERE Id IN (SELECT Role FROM BD_Users WHERE Id IN($Id))\n\nDELETE BD_UsersAuthorization WHERE RoleId IN (SELECT Role FROM BD_Users WHERE Id IN($Id))\n\nDELETE BD_RolesAuthorization WHERE RoleId IN (SELECT Role FROM BD_Users WHERE Id IN($Id))\n\nDELETE BD_RolesMenusAuthorization WHERE RoleId IN (SELECT Role FROM BD_Users WHERE Id IN($Id))\n\nDELETE BD_Roles WHERE Id IN (SELECT Role FROM BD_Users WHERE Id IN($Id))\n\nINSERT System_DataLogs(Guid, OpType, Time, UserId) SELECT Guid, 3, @Now, @UserId FROM BD_Users WHERE Id IN ($Id)\n\nDELETE BD_UsersAuthorization WHERE UserId IN ($Id)\n\nDELETE BD_Users WHERE Id IN ($Id)\n\nCOMMIT TRAN",
    "CacheToken": "Menus",
    "Description": "删除管理员信息",
    "Demo": ""
  },
  {
    "RowNum": 170,
    "Id": 1108,
    "Name": "AdminAuthorizeDictionarys",
    "Type": "T-SQL",
    "Sign": 20,
    "Code": "DECLARE @RoleId INT;\n\nSELECT @RoleId = Role FROM BD_Users WHERE Id = @Id\n\nDELETE BD_RolesDictionarysAuthorization WHERE RoleId IN (@RoleId);\n\nINSERT\n\tBD_RolesDictionarysAuthorization(RoleId, DictionaryId)\nSELECT\n\tR.Id,\n\tD.Id\nFROM\n\tBD_Roles R, BD_Dictionary D\nWHERE\n\tR.Id IN (@RoleId)\nAND\n\tD.Id IN ($DictionaryId);",
    "CacheToken": "",
    "Description": "角色授权字典",
    "Demo": ""
  },
  {
    "RowNum": 171,
    "Id": 1107,
    "Name": "AdminAuthorizeMenus",
    "Type": "T-SQL",
    "Sign": 20,
    "Code": "DECLARE @RoleId INT;\n\nSELECT @RoleId = Role FROM BD_Users WHERE Id = @Id\n\nDELETE BD_RolesAuthorization WHERE RoleId IN (@RoleId)\n\tAND CommandId IN (\n\t\tSELECT DISTINCT\n\t\t\tMC.CommandId\n\t\tFROM\n\t\t\tBD_MenusCommandsBind MC\n\t\tJOIN\n\t\t\tBD_RolesMenusAuthorization MA\n\t\tON\n\t\t\tMA.MenuId = MC.MenuId\n\t\tWHERE\n\t\t\tMA.RoleId IN (@RoleId)\n\t);\n\nDELETE BD_RolesMenusAuthorization WHERE RoleId IN (@RoleId);\n\nINSERT\n\tBD_RolesMenusAuthorization(RoleId, MenuId)\nSELECT\n\tR.Id,\n\tM.Id\nFROM\n\tBD_Roles R, BD_Menus M\nWHERE\n\tR.Id IN (@RoleId)\nAND\n\tM.Id IN ($MenuId);\n\n\nINSERT\n\tBD_RolesAuthorization(RoleId, CommandId)\nSELECT DISTINCT\n\tM.RoleId,\n\tC.CommandId\nFROM\n\tBD_RolesMenusAuthorization M\nJOIN\n\tBD_MenusCommandsBind C\nON\n\tC.MenuId = M.MenuId\nWHERE\n\tM.RoleId IN(@RoleId)\nAND\n\tM.MenuId IN($MenuId)",
    "CacheToken": "Menus",
    "Description": "角色授权菜单",
    "Demo": ""
  },
  {
    "RowNum": 172,
    "Id": 1106,
    "Name": "UpdateAdminAndRole",
    "Type": "T-SQL",
    "Sign": 20,
    "Code": "BEGIN TRAN\n\nDECLARE @RoleId INT;\n\nBEGIN TRY\n\tUPDATE BD_Users SET @RoleId = Role, Avatar = @Avatar, Contact = @Contact, ContactPhone = @ContactPhone, Nickname = @Nickname WHERE Id = @Id\n\n\tIF @Password IS NOT NULL BEGIN\n\t\tUPDATE BD_Users SET Password = dbo.MD5(@Password) WHERE Id = @Id\n\tEND\n\n\tINSERT INTO System_DataLogs(Guid, OpType, Time, UserId) SELECT Guid, 2, @Now, @UserId FROM BD_Users WHERE Id = @Id;\n\n\tUPDATE BD_Roles SET Name = @RoleName, Address = @RoleAddress WHERE Id = @RoleId\n\n\tINSERT INTO System_DataLogs(Guid, OpType, Time, UserId) SELECT Guid, 2, @Now, @UserId FROM BD_Users WHERE Id = @RoleId;\n\n\n\tCOMMIT TRAN\nEND TRY\nBEGIN CATCH\n\tROLLBACK TRAN\n\n\tEXEC usp_RethrowError;\nEND CATCH",
    "CacheToken": "Menus",
    "Description": "更新管理员信息",
    "Demo": ""
  },
  {
    "RowNum": 173,
    "Id": 1102,
    "Name": "InsertAdminAndRole",
    "Type": "T-SQL",
    "Sign": 18,
    "Code": "BEGIN TRAN\n\nDECLARE @Guid uniqueidentifier;\nDECLARE @RoleId INT;\n\nSET @Guid = NEWID();\n\nBEGIN TRY\n\n\tINSERT INTO BD_Roles(Name, Address, Guid) VALUES(@RoleName, @RoleAddress, @Guid);\n\n\tSET @RoleId = @@IDENTITY;\n\n\tINSERT INTO System_DataLogs(Guid, OpType, Time, UserId) VALUES(@Guid, 1, @Now, @UserId);\n\n\tSET @Guid = NEWID();\n\n\tINSERT INTO System_DataLogs(Guid, OpType, Time, UserId) VALUES(@Guid, 1, @Now, @UserId);\n\n\tINSERT INTO BD_Users(Avatar, Contact, ContactPhone, Guid, Nickname, Password, Role, UserName_c) VALUES(@Avatar, @Contact, @ContactPhone, @Guid, @Nickname, dbo.MD5(@Password), @RoleId, @UserName_c);\n\n\tCOMMIT TRAN\n\nEND TRY\nBEGIN CATCH\n\tROLLBACK TRAN\n\n\tEXEC usp_RethrowError\nEND CATCH",
    "CacheToken": "",
    "Description": "新增管理员信息",
    "Demo": ""
  },
  {
    "RowNum": 174,
    "Id": 1098,
    "Name": "UpdateConfig",
    "Type": "T-SQL",
    "Sign": 20,
    "Code": "UPDATE System_Configs SET Name = @Name, Type = @Type, Value = @Value, Description = @Description WHERE Id = @Id",
    "CacheToken": "",
    "Description": "更新配置项信息",
    "Demo": ""
  },
  {
    "RowNum": 175,
    "Id": 1097,
    "Name": "DeleteConfig",
    "Type": "T-SQL",
    "Sign": 24,
    "Code": "DELETE System_Configs WHERE Id IN ($Id)",
    "CacheToken": "",
    "Description": "删除配置项信息",
    "Demo": ""
  },
  {
    "RowNum": 176,
    "Id": 1096,
    "Name": "GetConfigsTotal",
    "Type": "T-SQL",
    "Sign": 81,
    "Code": "SELECT COUNT(0) Total FROM System_Configs WHERE $Filters",
    "CacheToken": "",
    "Description": "获取配置项数据总数",
    "Demo": ""
  },
  {
    "RowNum": 177,
    "Id": 1095,
    "Name": "ReadPageConfigs",
    "Type": "T-SQL",
    "Sign": 17,
    "Code": "SELECT\n\t*\nFROM (\n\tSELECT\n\t\tROW_NUMBER()OVER(ORDER BY $Orders) RowNum,\n\t\t*\n\tFROM (\n\t\tSELECT TOP (@End)\n\t\t\tId,\n\t\t\tName,\n\t\t\tType,\n\t\t\tValue,\n\t\t\tDescription\n\t\tFROM\n\t\t\tSystem_Configs\n\t\tWHERE\n\t\t\t$Filters\n\t\tORDER BY\n\t\t\t$Orders\n\t)T\n)T\nWHERE T.RowNum >= @Begin",
    "CacheToken": "",
    "Description": "分页读取配置项信息",
    "Demo": ""
  },
  {
    "RowNum": 178,
    "Id": 1094,
    "Name": "InsertConfig",
    "Type": "T-SQL",
    "Sign": 18,
    "Code": "INSERT INTO System_Configs(Name, Type, Value, Description) VALUES(@Name, @Type, @Value, @Description)",
    "CacheToken": "",
    "Description": "新增配置项",
    "Demo": ""
  },
  {
    "RowNum": 179,
    "Id": 1093,
    "Name": "RolesAuthorizeDictionarys",
    "Type": "T-SQL",
    "Sign": 20,
    "Code": "DELETE BD_RolesDictionarysAuthorization WHERE RoleId IN ($Id);\n\nINSERT\n\tBD_RolesDictionarysAuthorization(RoleId, DictionaryId)\nSELECT\n\tR.Id,\n\tD.Id\nFROM\n\tBD_Roles R, BD_Dictionary D\nWHERE\n\tR.Id IN ($Id)\nAND\n\tD.Id IN ($DictionaryId);",
    "CacheToken": "",
    "Description": "角色授权字典",
    "Demo": ""
  },
  {
    "RowNum": 180,
    "Id": 1092,
    "Name": "ReadTreeAuthorizeDictionarys",
    "Type": "T-SQL",
    "Sign": 17,
    "Code": "IF @Id = '-' BEGIN\n\tSELECT Type Id, (SELECT TOP 1 Description FROM BD_Dictionary WHERE Type = D.Type ORDER BY Id ASC) Name, MAX(Value) MaxValue, 1 IsAuthorized FROM BD_Dictionary D GROUP BY Type\nEND ELSE BEGIN\n\tSELECT Id, Name, Value, Description, (SELECT COUNT(0) FROM BD_RolesDictionarysAuthorization WHERE RoleId IN ($RoleId) AND DictionaryId = Id) IsAuthorized FROM BD_Dictionary WHERE Type = @Id\nEND",
    "CacheToken": "",
    "Description": "读取所有字典信息",
    "Demo": ""
  },
  {
    "RowNum": 181,
    "Id": 1089,
    "Name": "UpdateAdminPassword",
    "Type": "T-SQL",
    "Sign": 20,
    "Code": "IF EXISTS(SELECT 1 FROM BD_Users WHERE Id = @UserId AND Password = @Password) BEGIN\n\n\tUPDATE BD_Users SET Password = dbo.MD5(@NewPassword) WHERE Id = @UserId AND Password = @Password\n\n\tINSERT INTO System_DataLogs(Guid, OpType, Time, UserId) SELECT Guid, 2, @Now, @UserId FROM BD_Users WHERE Id = @UserId;\n\nEND ELSE BEGIN\n\tRAISERROR('密码错误！', 18, 1);\nEND",
    "CacheToken": "",
    "Description": "管理员修改密码",
    "Demo": ""
  },
  {
    "RowNum": 182,
    "Id": 1088,
    "Name": "AdminExit",
    "Type": "System",
    "Sign": 81,
    "Code": "// System Impl",
    "CacheToken": "",
    "Description": "管理员退出登录",
    "Demo": ""
  },
  {
    "RowNum": 183,
    "Id": 1080,
    "Name": "ReceiveMessage",
    "Type": "System",
    "Sign": 65,
    "Code": "// System Impl",
    "CacheToken": "",
    "Description": "系统用户等待接收消息",
    "Demo": ""
  },
  {
    "RowNum": 184,
    "Id": 1079,
    "Name": "SendMessage",
    "Type": "System",
    "Sign": 66,
    "Code": "// System Impl",
    "CacheToken": "",
    "Description": "给指定系统用户发送消息",
    "Demo": ""
  },
  {
    "RowNum": 185,
    "Id": 1078,
    "Name": "ReadListDictionary",
    "Type": "T-SQL",
    "Sign": 1,
    "Code": "IF @Type IS NULL BEGIN\n\tSELECT Value Id, Name, ExtraParams FROM BD_Dictionary /*WHERE Id IN (SELECT DictionaryId FROM BD_RolesDictionarysAuthorization WHERE RoleId IN ($RoleIds))*/\nEND ELSE BEGIN\n\tSELECT Value Id, Name, ExtraParams FROM BD_Dictionary WHERE Type = @Type/* AND Id IN (SELECT DictionaryId FROM BD_RolesDictionarysAuthorization WHERE RoleId IN ($RoleIds))*/\nEND",
    "CacheToken": "",
    "Description": "读取列表结构字典信息",
    "Demo": ""
  },
  {
    "RowNum": 186,
    "Id": 1077,
    "Name": "DeleteDictionary",
    "Type": "T-SQL",
    "Sign": 24,
    "Code": "INSERT System_DataLogs(Guid, OpType, Time, UserId) SELECT Guid, 3, @Now, @UserId FROM BD_Dictionary WHERE Id IN ($Id)\n\nDELETE BD_Dictionary WHERE Id IN ($Id)",
    "CacheToken": "",
    "Description": "删除字典信息",
    "Demo": ""
  },
  {
    "RowNum": 187,
    "Id": 1076,
    "Name": "UpdateDictionary",
    "Type": "T-SQL",
    "Sign": 20,
    "Code": "UPDATE BD_Dictionary SET Type = @Type, Name = @Name, Value = @Value, Description = @Description, ExtraParams = @ExtraParams WHERE Id = @Id\n\nINSERT INTO System_DataLogs(Guid, OpType, Time, UserId) SELECT Guid, 2, @Now, @UserId FROM BD_Dictionary WHERE Id = @Id;\n",
    "CacheToken": "",
    "Description": "更新字典信息",
    "Demo": ""
  },
  {
    "RowNum": 188,
    "Id": 1075,
    "Name": "InsertDictionary",
    "Type": "T-SQL",
    "Sign": 18,
    "Code": "INSERT INTO BD_Dictionary(Type, Name, Value, Description, Guid, ExtraParams) VALUES(@Type, @Name, @Value, @Description, @NewGuid, @ExtraParams)\n\nIF @UserRoleId IS NOT NULL BEGIN\n\tINSERT BD_RolesDictionarysAuthorization(DictionaryId, RoleId) VALUES(@@IDENTITY, @UserRoleId);\nEND\n\nINSERT INTO System_DataLogs(Guid, OpType, Time, UserId) VALUES(@NewGuid, 1, @Now, @UserId)",
    "CacheToken": "",
    "Description": "新增字典",
    "Demo": ""
  },
  {
    "RowNum": 189,
    "Id": 1074,
    "Name": "GetDictionarysTotal",
    "Type": "T-SQL",
    "Sign": 81,
    "Code": "SELECT COUNT(0) Total FROM BD_Dictionary WHERE $Filters",
    "CacheToken": "",
    "Description": "获得字典数据总数",
    "Demo": ""
  },
  {
    "RowNum": 190,
    "Id": 1073,
    "Name": "ReadPageDictionarys",
    "Type": "T-SQL",
    "Sign": 17,
    "Code": "SELECT\n\t*\nFROM (\n\tSELECT\n\t\tROW_NUMBER()OVER(ORDER BY $Orders) RowNum,\n\t\t*\n\tFROM (\n\t\tSELECT TOP (@End)\n\t\t\tId,\n\t\t\tType,\n\t\t\tName,\n\t\t\tValue,\n\t\t\tDescription,\n\t\t\tExtraParams\n\t\tFROM\n\t\t\tBD_Dictionary\n\t\tWHERE\n\t\t\t$Filters\n\t\tORDER BY\n\t\t\t$Orders\n\t)T\n)T\nWHERE T.RowNum >= @Begin",
    "CacheToken": "",
    "Description": "分页读取字典信息",
    "Demo": ""
  },
  {
    "RowNum": 191,
    "Id": 1067,
    "Name": "UploadImage",
    "Type": "System",
    "Sign": 68,
    "Code": "// System Impl",
    "CacheToken": "",
    "Description": "上传图像 (multipart/form-data) 格式。",
    "Demo": ""
  },
  {
    "RowNum": 192,
    "Id": 1064,
    "Name": "ExportExcel",
    "Type": "System",
    "Sign": 65,
    "Code": "// System Impl",
    "CacheToken": "",
    "Description": "导出 Excel 命令",
    "Demo": ""
  },
  {
    "RowNum": 193,
    "Id": 1063,
    "Name": "AdminLogin",
    "Type": "System",
    "Sign": 65,
    "Code": "// System Impl",
    "CacheToken": "",
    "Description": "管理员登录",
    "Demo": ""
  },
  {
    "RowNum": 194,
    "Id": 1062,
    "Name": "ReadUserInfoByUserName",
    "Type": "T-SQL",
    "Sign": 33,
    "Code": "SELECT TOP 1\n\tU.Id,\n\tU.UserName_c,\n\tU.Password,\n\tU.Avatar,\n\tU.Nickname,\n\tU.Contact,\n\tU.ContactPhone,\n\tU.Type,\n\tR.Id RoleId,\n\tR.Name RoleName,\n\tR.Address RoleAddress\nFROM\n\tBD_Users U\nLEFT JOIN\n\tBD_Roles R\nON\n\tR.Id = U.Role\nWHERE\n\tU.UserName_c = @UserName_c\nOR\n\tU.ContactPhone = @UserName_c",
    "CacheToken": "",
    "Description": "通过用户名称读取用户信息",
    "Demo": ""
  },
  {
    "RowNum": 195,
    "Id": 1061,
    "Name": "ReadRoleCommands",
    "Type": "T-SQL",
    "Sign": 33,
    "Code": "SELECT CommandId FROM BD_RolesAuthorization WHERE RoleId = @RoleId",
    "CacheToken": "",
    "Description": "读取角色所有的命令",
    "Demo": ""
  },
  {
    "RowNum": 196,
    "Id": 1060,
    "Name": "ReadUserRoles",
    "Type": "T-SQL",
    "Sign": 33,
    "Code": "SELECT Role RoleId FROM BD_Users WHERE Id = @UserId_n UNION SELECT RoleId FROM BD_UsersAuthorization WHERE UserId = @UserId_n",
    "CacheToken": "",
    "Description": "读取用户的所有角色",
    "Demo": ""
  },
  {
    "RowNum": 197,
    "Id": 1059,
    "Name": "RolesAuthorizeMenus",
    "Type": "T-SQL",
    "Sign": 20,
    "Code": "DELETE BD_RolesAuthorization WHERE RoleId IN ($Id)\n\tAND CommandId IN (\n\t\tSELECT DISTINCT\n\t\t\tMC.CommandId\n\t\tFROM\n\t\t\tBD_MenusCommandsBind MC\n\t\tJOIN\n\t\t\tBD_RolesMenusAuthorization MA\n\t\tON\n\t\t\tMA.MenuId = MC.MenuId\n\t\tWHERE\n\t\t\tMA.RoleId IN ($Id)\n\t);\n\nDELETE BD_RolesMenusAuthorization WHERE RoleId IN ($Id);\n\nINSERT\n\tBD_RolesMenusAuthorization(RoleId, MenuId)\nSELECT\n\tR.Id,\n\tM.Id\nFROM\n\tBD_Roles R, BD_Menus M\nWHERE\n\tR.Id IN ($Id)\nAND\n\tM.Id IN ($MenuId);\n\n\nINSERT\n\tBD_RolesAuthorization(RoleId, CommandId)\nSELECT DISTINCT\n\tM.RoleId,\n\tC.CommandId\nFROM\n\tBD_RolesMenusAuthorization M\nJOIN\n\tBD_MenusCommandsBind C\nON\n\tC.MenuId = M.MenuId\nWHERE\n\tM.RoleId IN($Id)\nAND\n\tM.MenuId IN($MenuId)",
    "CacheToken": "Menus",
    "Description": "角色授权菜单",
    "Demo": ""
  },
  {
    "RowNum": 198,
    "Id": 1057,
    "Name": "ReadTreeAuthorizeMenus",
    "Type": "T-SQL",
    "Sign": 17,
    "Code": "SELECT Id, Name, Type, ParentId, (SELECT COUNT(0) FROM BD_RolesMenusAuthorization WHERE MenuId = Id AND RoleId IN ($RoleId)) IsAuthorized FROM BD_Menus WHERE ParentId = @Id ORDER BY Sort",
    "CacheToken": "",
    "Description": "读取所有菜单信息",
    "Demo": ""
  },
  {
    "RowNum": 199,
    "Id": 1056,
    "Name": "DeleteRole",
    "Type": "T-SQL",
    "Sign": 24,
    "Code": "INSERT System_DataLogs(Guid, OpType, Time, UserId) SELECT Guid, 3, @Now, @UserId FROM BD_Roles WHERE Id IN ($Id)\n\nDELETE BD_UsersAuthorization WHERE RoleId IN ($Id)\n\nDELETE BD_RolesAuthorization WHERE RoleId IN ($Id)\n\nDELETE BD_RolesMenusAuthorization WHERE RoleId IN ($Id)\n\nDELETE BD_Roles WHERE Id IN ($Id)",
    "CacheToken": "",
    "Description": "删除角色信息",
    "Demo": ""
  },
  {
    "RowNum": 200,
    "Id": 1055,
    "Name": "UpdateRole",
    "Type": "T-SQL",
    "Sign": 20,
    "Code": "UPDATE BD_Roles SET Name = @Name, Address = @Address WHERE Id = @Id\n\nINSERT INTO System_DataLogs(Guid, OpType, Time, UserId) SELECT Guid, 2, @Now, @UserId FROM BD_Users WHERE Id = @Id;",
    "CacheToken": "",
    "Description": "更新角色信息",
    "Demo": ""
  },
  {
    "RowNum": 201,
    "Id": 1054,
    "Name": "InsertRole",
    "Type": "T-SQL",
    "Sign": 2,
    "Code": "INSERT INTO System_DataLogs(Guid, OpType, Time, UserId) VALUES(@NewGuid, 1, @Now, @UserId);\n\nINSERT INTO BD_Roles(Name, Address, Guid) VALUES(@Name, @Address, @NewGuid);",
    "CacheToken": "",
    "Description": "新增角色信息",
    "Demo": ""
  },
  {
    "RowNum": 202,
    "Id": 1053,
    "Name": "GetRolesTotal",
    "Type": "T-SQL",
    "Sign": 81,
    "Code": "SELECT COUNT(0) Total FROM BD_Roles WHERE $Filters",
    "CacheToken": "",
    "Description": "获得角色总数",
    "Demo": ""
  },
  {
    "RowNum": 203,
    "Id": 1052,
    "Name": "ReadPageRoles",
    "Type": "T-SQL",
    "Sign": 17,
    "Code": "SELECT\n\t*\nFROM (\n\tSELECT\n\t\tROW_NUMBER()OVER(ORDER BY $Orders) RowNum,\n\t\t*\n\tFROM (\n\t\tSELECT TOP (@End)\n\t\t\tId,\n\t\t\tName,\n\t\t\tAddress\n\t\tFROM\n\t\t\tBD_Roles\n\t\tWHERE\n\t\t\t$Filters\n\t\tORDER BY\n\t\t\t$Orders\n\t)T\n)T\nWHERE T.RowNum >= @Begin",
    "CacheToken": "",
    "Description": "分页读取角色信息",
    "Demo": ""
  },
  {
    "RowNum": 204,
    "Id": 1051,
    "Name": "ReadListRoles",
    "Type": "T-SQL",
    "Sign": 1,
    "Code": "SELECT Id, Name FROM BD_Roles",
    "CacheToken": "",
    "Description": "读取列表结构角色信息",
    "Demo": ""
  },
  {
    "RowNum": 205,
    "Id": 1050,
    "Name": "DeleteAdmin",
    "Type": "T-SQL",
    "Sign": 24,
    "Code": "INSERT System_DataLogs(Guid, OpType, Time, UserId) SELECT Guid, 3, @Now, @UserId FROM BD_Users WHERE Id IN ($Id)\n\nDELETE BD_UsersAuthorization WHERE UserId IN ($Id)\n\nDELETE BD_Users WHERE Id IN ($Id)",
    "CacheToken": "Menus",
    "Description": "删除管理员信息",
    "Demo": ""
  },
  {
    "RowNum": 206,
    "Id": 1049,
    "Name": "UpdateAdmin",
    "Type": "T-SQL",
    "Sign": 20,
    "Code": "IF @Password IS NOT NULL BEGIN\n\tUPDATE BD_Users SET Password = dbo.MD5(@Password) WHERE Id = @Id\nEND\n\nINSERT INTO System_DataLogs(Guid, OpType, Time, UserId) SELECT Guid, 2, @Now, @UserId FROM BD_Users WHERE Id = @Id;\n\n\nUPDATE BD_Users SET Avatar = @Avatar, Contact = @Contact, ContactPhone = @ContactPhone, Nickname = @Nickname, Role = @Role WHERE Id = @Id\n",
    "CacheToken": "Menus",
    "Description": "更新管理员信息",
    "Demo": ""
  },
  {
    "RowNum": 207,
    "Id": 1047,
    "Name": "InsertAdmin",
    "Type": "T-SQL",
    "Sign": 18,
    "Code": "INSERT INTO System_DataLogs(Guid, OpType, Time, UserId) VALUES(@NewGuid, 1, @Now, @UserId)\n\nINSERT INTO BD_Users(Avatar, Contact, ContactPhone, Guid, Nickname, Password, Role, UserName_c) VALUES(@Avatar, @Contact, @ContactPhone, @NewGuid, @Nickname, dbo.MD5(@Password), @Role, @UserName_c)",
    "CacheToken": "",
    "Description": "新增管理员信息",
    "Demo": ""
  },
  {
    "RowNum": 208,
    "Id": 1046,
    "Name": "GetAdminsTotal",
    "Type": "T-SQL",
    "Sign": 81,
    "Code": "SELECT COUNT(0) Total FROM BD_Users BU LEFT JOIN BD_Roles BR ON BR.Id = BU.Role WHERE $Filters",
    "CacheToken": "",
    "Description": "获得管理员总数",
    "Demo": ""
  },
  {
    "RowNum": 209,
    "Id": 1045,
    "Name": "ReadPageAdmins",
    "Type": "T-SQL",
    "Sign": 17,
    "Code": "SELECT\n\t*\nFROM (\n\tSELECT\n\t\tROW_NUMBER()OVER(ORDER BY $Orders) RowNum,\n\t\t*\n\tFROM (\n\t\tSELECT TOP (@End)\n\t\t\tBU.Id,\n\t\t\tBU.UserName_c,\n\t\t\tBU.Role,\n\t\t\tBU.Nickname,\n\t\t\tBU.Avatar,\n\t\t\tBU.Contact,\n\t\t\tBU.ContactPhone,\n\t\t\tBR.Name RoleName,\n\t\t\tBR.Address RoleAddress\n\t\tFROM\n\t\t\tBD_Users BU\n\t\tLEFT JOIN\n\t\t\tBD_Roles BR\n\t\tON\n\t\t\tBR.Id = BU.Role\n\t\tWHERE\n\t\t\t$Filters\n\t\tORDER BY\n\t\t\t$Orders\n\t)T\n)T\nWHERE T.RowNum >= @Begin",
    "CacheToken": "",
    "Description": "分页读取管理员信息",
    "Demo": ""
  },
  {
    "RowNum": 210,
    "Id": 1034,
    "Name": "UpdateCommand",
    "Type": "T-SQL",
    "Sign": 20,
    "Code": "UPDATE System_Commands SET Name = @Name, Type = @Type, Sign = @Sign, Code = @Code, CacheToken = @CacheToken, Description = @Description, Demo = @Demo WHERE Id = @Id\n\nDELETE System_CommandParams WHERE CommandId = @Id\n\nINSERT System_DataLogs(Guid, OpType, Time, UserId) SELECT Guid, 2, @Now, @UserId FROM System_Commands WHERE Id = @Id",
    "CacheToken": "Commands",
    "Description": "更新命令信息",
    "Demo": ""
  },
  {
    "RowNum": 211,
    "Id": 1033,
    "Name": "ReadAllConfigs",
    "Type": "T-SQL",
    "Sign": 33,
    "Code": "SELECT Id, Name, Type, Value, Description FROM System_Configs",
    "CacheToken": "",
    "Description": "读取所有配置项信息。",
    "Demo": ""
  },
  {
    "RowNum": 212,
    "Id": 1031,
    "Name": "ReadPagingData",
    "Type": "System",
    "Sign": 1,
    "Code": "// System Impl",
    "CacheToken": "",
    "Description": "读取分页数据，需要已定义的 ReadPage{TableName} 命令。",
    "Demo": ""
  },
  {
    "RowNum": 213,
    "Id": 1030,
    "Name": "ReadCommandById",
    "Type": "T-SQL",
    "Sign": 33,
    "Code": "SELECT Id, Name, Type, Sign, Code, CacheToken, Description FROM System_Commands WHERE Id IN ($Id)",
    "CacheToken": null,
    "Description": "通过命令 Id 读取命令信息",
    "Demo": ""
  },
  {
    "RowNum": 214,
    "Id": 1026,
    "Name": "DeleteCommand",
    "Type": "T-SQL",
    "Sign": 24,
    "Code": "INSERT System_DataLogs(Guid, OpType, Time, UserId) SELECT Guid, 3, @Now, @UserId FROM System_Commands WHERE Id IN ($Id)\n\nDELETE System_CommandParams WHERE CommandId IN ($Id)\n\nDELETE System_Commands WHERE Id IN ($Id)\n\nDELETE System_TriggersBinds WHERE Bind IN ($Id)",
    "CacheToken": "Commands",
    "Description": "删除命令信息",
    "Demo": ""
  },
  {
    "RowNum": 215,
    "Id": 1025,
    "Name": "DeleteMenu",
    "Type": "T-SQL",
    "Sign": 24,
    "Code": "INSERT System_DataLogs(Guid, OpType, Time, UserId) SELECT Guid, 3, @Now, @UserId FROM BD_Menus WHERE Id IN ($Id)\n\nDELETE BD_RolesMenusAuthorization WHERE MenuId IN (SELECT Id FROM BD_Menus WHERE Id IN ($Id))\n\nDELETE BD_MenusCommandsBind WHERE MenuId IN (SELECT Id FROM BD_Menus WHERE Id IN ($Id))\n\nDELETE BD_Menus WHERE Id IN ($Id)",
    "CacheToken": "Menus",
    "Description": "删除菜单信息",
    "Demo": ""
  },
  {
    "RowNum": 216,
    "Id": 1024,
    "Name": "UpdateMenu",
    "Type": "T-SQL",
    "Sign": 20,
    "Code": "UPDATE BD_Menus SET Identifier = @Identifier, Name = @Name, ParentId = @ParentId, Sort = @Sort, Type = @Type, Url = @Url WHERE Id = @Id\n\nDELETE BD_MenusCommandsBind WHERE MenuId = @Id;\n\nDELETE BD_RolesMenusAuthorization WHERE MenuId = @Id;\n\nINSERT INTO BD_MenusCommandsBind(MenuId, CommandId) SELECT @Id, Id FROM System_Commands WHERE Name IN ($CommandNames)\n\nINSERT INTO System_DataLogs(Guid, OpType, Time, UserId) SELECT Guid, 2, @Now, @UserId FROM BD_Menus WHERE Id = @Id;",
    "CacheToken": "Menus",
    "Description": "修改菜单信息",
    "Demo": ""
  },
  {
    "RowNum": 217,
    "Id": 1023,
    "Name": "DeleteMenusByParentId",
    "Type": "T-SQL",
    "Sign": 24,
    "Code": "INSERT System_DataLogs(Guid, OpType, Time, UserId) SELECT Guid, 3, @Now, @UserId FROM BD_Menus WHERE ParentId = @ParentId\n\nDELETE BD_RolesMenusAuthorization WHERE MenuId IN (SELECT Id FROM BD_Menus WHERE ParentId = @ParentId)\n\nDELETE BD_MenusCommandsBind WHERE MenuId IN (SELECT Id FROM BD_Menus WHERE ParentId = @ParentId)\n\nDELETE BD_Menus WHERE ParentId = @ParentId",
    "CacheToken": "Menus",
    "Description": "删除所有父级 Id 为指定值的菜单项",
    "Demo": ""
  },
  {
    "RowNum": 218,
    "Id": 1022,
    "Name": "InsertMenu",
    "Type": "T-SQL",
    "Sign": 2,
    "Code": "INSERT INTO BD_Menus(Guid, Identifier, Name, ParentId, Sort, Type, Url) VALUES(@NewGuid, @Identifier, @Name, @ParentId, @Sort, @Type, @Url);\n\nDECLARE @MenuId INT = @@IDENTITY;\n\nINSERT INTO BD_MenusCommandsBind(MenuId, CommandId) SELECT @MenuId, Id FROM System_Commands WHERE Name IN ($CommandNames)\n\nINSERT INTO System_DataLogs(Guid, OpType, Time, UserId) VALUES(@NewGuid, 1, @Now, @UserId)",
    "CacheToken": "Menus",
    "Description": "导入 Button",
    "Demo": ""
  },
  {
    "RowNum": 219,
    "Id": 23,
    "Name": "ReadListMenu",
    "Type": "T-SQL",
    "Sign": 1,
    "Code": "SELECT Id, Name FROM BD_Menus WHERE Type = @Type",
    "CacheToken": null,
    "Description": "读取列表结构菜单信息",
    "Demo": ""
  },
  {
    "RowNum": 220,
    "Id": 21,
    "Name": "ReadTreeMenu",
    "Type": "T-SQL",
    "Sign": 1,
    "Code": "SELECT Id, Name, Type, ParentId, Identifier, Url, Sort, DBO.GetMenuCommandNames(Id) CommandNames FROM BD_Menus WHERE ParentId = @Id ORDER BY Sort",
    "CacheToken": null,
    "Description": "按树结构读取数据",
    "Demo": ""
  },
  {
    "RowNum": 221,
    "Id": 20,
    "Name": "ReadAllTrigger",
    "Type": "T-SQL",
    "Sign": 33,
    "Code": "SELECT\n\tST.CommandId,\n\tST.Sign,\n\tST.Priority,\n\tTB.Bind,\n\tSC.Name Name\nFROM\n\tSystem_Triggers ST\nLEFT JOIN\n\tSystem_TriggersBinds TB\nON\n\tTB.CommandId = ST.CommandId\nLEFT JOIN\n\tSystem_Commands SC\nON\n\tSC.Id = ST.CommandId",
    "CacheToken": null,
    "Description": "读取所有触发器",
    "Demo": ""
  },
  {
    "RowNum": 222,
    "Id": 19,
    "Name": "DeleteTrigger",
    "Type": "T-SQL",
    "Sign": 24,
    "Code": "BEGIN TRAN\n\nDELETE System_Commands WHERE Id = $CommandId;\n\nDELETE System_Triggers WHERE CommandId = $CommandId;\n\nDELETE System_TriggersBinds WHERE CommandId = $CommandId;\n\nCOMMIT TRAN",
    "CacheToken": "Commands",
    "Description": "删除触发器信息",
    "Demo": ""
  },
  {
    "RowNum": 223,
    "Id": 18,
    "Name": "UpdateTrigger",
    "Type": "T-SQL",
    "Sign": 20,
    "Code": "BEGIN TRAN\n\nUPDATE System_Commands SET Code = @Code, Description = @Description, Name = @Name, Type = @Type WHERE Id = @CommandId;\n\nUPDATE System_Triggers SET Sign = @Sign, Priority = @Priority WHERE CommandId = @CommandId;\n\nDELETE System_TriggersBinds WHERE CommandId = @CommandId;\n\nIF (@Sign & 4) != 0 BEGIN /* Id 绑定 */\n\tINSERT System_TriggersBinds(Bind, CommandId) SELECT Id, @CommandId FROM System_Commands WHERE Name IN ($Bind)\nEND ELSE IF (@Sign & 8) != 0 BEGIN /* Sign 绑定 */\n\tINSERT System_TriggersBinds(Bind, CommandId) SELECT number, @CommandId FROM master..spt_values WHERE type = 'P' AND number IN ($Bind)\nEND\nCOMMIT TRAN",
    "CacheToken": "Commands",
    "Description": "修改触发器信息",
    "Demo": ""
  },
  {
    "RowNum": 224,
    "Id": 17,
    "Name": "InsertTrigger",
    "Type": "T-SQL",
    "Sign": 18,
    "Code": "BEGIN TRAN\n\nINSERT System_Commands(Code, Description, Name, Sign, Type, Guid) VALUES(@Code, @Description, @Name, 160, @Type, @NewGuid);\n\nDECLARE @CommandId INT = @@IDENTITY;\n\nINSERT System_Triggers(CommandId, Sign, Priority) VALUES(@CommandId, @Sign, @Priority)\n\n\nIF (@Sign & 4) != 0 BEGIN /* Id 绑定 */\n\tINSERT System_TriggersBinds(Bind, CommandId) SELECT Id, @CommandId FROM System_Commands WHERE Name IN ($Bind)\nEND ELSE IF (@Sign & 8) != 0 BEGIN /* Sign 绑定 */\n\tINSERT System_TriggersBinds(Bind, CommandId) SELECT number, @CommandId FROM master..spt_values WHERE type = 'P' AND number IN ($Bind)\nEND\n\nCOMMIT TRAN",
    "CacheToken": "Commands",
    "Description": "新增触发器",
    "Demo": ""
  },
  {
    "RowNum": 225,
    "Id": 16,
    "Name": "GetTriggersTotal",
    "Type": "T-SQL",
    "Sign": 81,
    "Code": "SELECT COUNT(0) Total FROM System_Triggers ST LEFT JOIN System_Commands SC ON SC.Id = ST.CommandId WHERE $Filters",
    "CacheToken": "",
    "Description": "获得触发器总数",
    "Demo": ""
  },
  {
    "RowNum": 226,
    "Id": 15,
    "Name": "ReadPageTriggers",
    "Type": "T-SQL",
    "Sign": 17,
    "Code": "SELECT\n\t*\nFROM (\n\tSELECT\n\t\tROW_NUMBER()OVER(ORDER BY $Orders) RowNum,\n\t\t*\n\tFROM (\n\t\tSELECT TOP (@End)\n\t\t\t(SELECT MIN(Bind) FROM System_TriggersBinds WHERE CommandId = ST.CommandId) Bind,\n\t\t\tDBO.GetTriggerNamedBind(ST.CommandId) NamedBind,\n\t\t\tST.Sign,\n\t\t\tSC.Code,\n\t\t\tSC.Description,\n\t\t\tSC.Id CommandId,\n\t\t\tSC.Name,\n\t\t\tSC.Type\n\t\tFROM\n\t\t\tSystem_Triggers ST\n\t\tLEFT JOIN\n\t\t\tSystem_Commands SC\n\t\tON\n\t\t\tSC.Id = ST.CommandId\n\t\tWHERE\n\t\t\t$Filters\n\t\tORDER BY\n\t\t\t$Orders\n\t)T\n)T\nWHERE T.RowNum >= @Begin",
    "CacheToken": "",
    "Description": "分页读取触发器",
    "Demo": ""
  },
  {
    "RowNum": 227,
    "Id": 14,
    "Name": "ReadAllAuthorizedMenus",
    "Type": "T-SQL",
    "Sign": 257,
    "Code": "SELECT\n\tId,\n\tName,\n\tType,\n\tParentId,\n\tIdentifier,\n\tUrl,\n\tSort\nFROM\n\tBD_Menus\nWHERE\n\tId IN (SELECT DISTINCT MenuId FROM BD_RolesMenusAuthorization WHERE RoleId IN ($RoleIds))\nAND (\n\t\t(Type = 1 AND Id = @AppId)\n\tOR\n\t\t(Type = 2 AND ParentId = @AppId)\n\tOR\n\t\t(Type = 3 AND ParentId IN (SELECT Id FROM BD_Menus WHERE ParentId = @AppId))\n\tOR\n\t\t(Type = 4 AND ParentId IN (SELECT A.Id FROM BD_Menus A LEFT JOIN BD_Menus B ON B.Id = A.ParentId WHERE B.ParentId = @AppId))\n)\nORDER BY\n\tType ASC,\n\tSort ASC",
    "CacheToken": "Menus",
    "Description": "读取所有已授权的菜单",
    "Demo": ""
  },
  {
    "RowNum": 228,
    "Id": 11,
    "Name": "ReadAllCommandResultsByCommandId",
    "Type": "T-SQL",
    "Sign": 1,
    "Code": "SELECT CommandId, Name, Type, Sign, Description, Demo FROM System_CommandParams WHERE CommandId = @CommandId AND InOut = 2",
    "CacheToken": "",
    "Description": "通过命令 Id 读取命令的所有返回值",
    "Demo": ""
  },
  {
    "RowNum": 229,
    "Id": 10,
    "Name": "ReadAllCommandParamsByCommandId",
    "Type": "T-SQL",
    "Sign": 1,
    "Code": "SELECT CommandId, Name, Type, Sign, Description, Demo FROM System_CommandParams WHERE CommandId = @CommandId AND InOut = 1",
    "CacheToken": "",
    "Description": "通过命令 Id 读取命令的所有参数",
    "Demo": " "
  },
  {
    "RowNum": 230,
    "Id": 9,
    "Name": "GetCommandsTotal",
    "Type": "T-SQL",
    "Sign": 81,
    "Code": "SELECT COUNT(0) Total FROM System_Commands WHERE $Filters",
    "CacheToken": "Commands",
    "Description": "获得命令总数",
    "Demo": ""
  },
  {
    "RowNum": 231,
    "Id": 8,
    "Name": "ReadPageCommands",
    "Type": "T-SQL",
    "Sign": 17,
    "Code": "SELECT\n\t*\nFROM (\n\tSELECT\n\t\tROW_NUMBER()OVER(ORDER BY $Orders) RowNum,\n\t\t*\n\tFROM (\n\t\tSELECT TOP (@End)\n\t\t\tId,\n\t\t\tName,\n\t\t\tType,\n\t\t\tSign,\n\t\t\tCode,\n\t\t\tCacheToken,\n\t\t\tDescription,\n\t\t\tDemo\n\t\tFROM\n\t\t\tSystem_Commands\n\t\tWHERE\n\t\t\t$Filters\n\t\tORDER BY\n\t\t\t$Orders\n\t)T\n)T\nWHERE T.RowNum >= @Begin",
    "CacheToken": "Commands",
    "Description": "分页读取命令信息",
    "Demo": ""
  },
  {
    "RowNum": 232,
    "Id": 6,
    "Name": "GetIdentity",
    "Type": "T-SQL",
    "Sign": 97,
    "Code": "SELECT @@IDENTITY [Identity]",
    "CacheToken": "",
    "Description": "获取 Identity 值。",
    "Demo": ""
  },
  {
    "RowNum": 233,
    "Id": 3,
    "Name": "InsertCommandResult",
    "Type": "T-SQL",
    "Sign": 18,
    "Code": "INSERT INTO System_CommandParams(CommandId, InOut, Name, Type, Sign, Description, Demo) VALUES(@CommandId, 2, @Name, @Type, @Sign, @Description, @Demo)",
    "CacheToken": "",
    "Description": "新增命令返回值信息",
    "Demo": ""
  },
  {
    "RowNum": 234,
    "Id": 2,
    "Name": "InsertCommandParam",
    "Type": "T-SQL",
    "Sign": 18,
    "Code": "INSERT INTO System_CommandParams(CommandId, InOut, Name, Type, Sign, Description, Demo) VALUES(@CommandId, 1, @Name, @Type, @Sign, @Description, @Demo)",
    "CacheToken": "",
    "Description": "新增命令参数信息",
    "Demo": ""
  },
  {
    "RowNum": 235,
    "Id": 1,
    "Name": "InsertCommand",
    "Type": "T-SQL",
    "Sign": 18,
    "Code": "INSERT System_DataLogs(Guid, OpType, Time, UserId) VALUES(@NewGuid, 1, @Now, @UserId)\n\nINSERT INTO System_Commands(Name, Type, Sign, Code, CacheToken, Description, Guid, Demo) VALUES(@Name, @Type, @Sign, @Code, @CacheToken, @Description, @NewGuid, @Demo)",
    "CacheToken": "Commands",
    "Description": "新增命令信息",
    "Demo": ""
  }
]