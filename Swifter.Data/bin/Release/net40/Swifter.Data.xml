<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Swifter.Data</name>
    </assembly>
    <members>
        <member name="T:Swifter.Data.Database">
            <summary>
            提供数据库操作的实例方法。
            </summary>
        </member>
        <member name="F:Swifter.Data.Database.CommandTimeout">
            <summary>
            默认命令超时时间。
            </summary>
        </member>
        <member name="F:Swifter.Data.Database.DbProviderFactory">
            <summary>
            数据库工厂实例。
            </summary>
        </member>
        <member name="F:Swifter.Data.Database.DbConnectionString">
            <summary>
            数据库连接字符串。
            </summary>
        </member>
        <member name="M:Swifter.Data.Database.#ctor(System.String,System.String)">
            <summary>
            初始化数据库连接字符串。
            </summary>
            <param name="providerName">数据库工厂名称</param>
            <param name="dbConnectionString">数据库连接字符串</param>
        </member>
        <member name="M:Swifter.Data.Database.OpenConnection">
            <summary>
            打开一个新的数据库连接。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Swifter.Data.Database.BeginTransaction">
            <summary>
            打开一个新的数据库连接，并开启事务。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Swifter.Data.Database.ExecuteReader``1(System.String,``0,System.Data.Common.DbTransaction,System.Int32,System.Data.CommandType)">
            <summary>
            执行一条查询命令。
            </summary>
            <typeparam name="T">参数类型</typeparam>
            <param name="sql">SQL 代码</param>
            <param name="parameters">参数</param>
            <param name="dbTransaction">事务</param>
            <param name="commandTimeout">超时时间（秒）</param>
            <param name="commandType">命令类型</param>
            <returns>返回一个数据读取器</returns>
        </member>
        <member name="M:Swifter.Data.Database.ExecuteReader(System.String,System.Data.Common.DbTransaction,System.Int32,System.Data.CommandType)">
            <summary>
            执行一条查询命令。
            </summary>
            <param name="sql">SQL 代码</param>
            <param name="dbTransaction">事务</param>
            <param name="commandTimeout">超时时间（秒）</param>
            <param name="commandType">命令类型</param>
            <returns>返回一个数据读取器</returns>
        </member>
        <member name="M:Swifter.Data.Database.ExecuteScalar``2(System.String,``1,System.Data.Common.DbTransaction,System.Int32,System.Data.CommandType)">
            <summary>
            执行一条查询语句，并返回指定类型的结果。
            如果返回值类型等于结果集的第一行第一列的值的类型，则返回第一行第一列的值，
            如果返回值类型是一个集合，则返回所有行的数据。
            否则返回第一行的数据对象。
            </summary>
            <typeparam name="T">返回值类型</typeparam>
            <typeparam name="TParameters">参数类型</typeparam>
            <param name="sql">SQL 代码</param>
            <param name="parameters">参数</param>
            <param name="dbTransaction">事务</param>
            <param name="commandTimeout">超时时间（秒）</param>
            <param name="commandType">命令类型</param>
            <returns>返回指定类型的值</returns>
        </member>
        <member name="M:Swifter.Data.Database.ExecuteScalar``1(System.String,System.Object,System.Data.Common.DbTransaction,System.Int32,System.Data.CommandType)">
            <summary>
            执行一条查询语句，并返回指定类型的结果。
            如果返回值类型等于结果集的第一行第一列的值的类型，则返回第一行第一列的值，
            如果返回值类型是一个集合，则返回所有行的数据。
            否则返回第一行的数据对象。
            </summary>
            <typeparam name="T">返回值类型</typeparam>
            <param name="sql">SQL 代码</param>
            <param name="parameters">参数</param>
            <param name="dbTransaction">事务</param>
            <param name="commandTimeout">超时时间（秒）</param>
            <param name="commandType">命令类型</param>
            <returns>返回指定类型的值</returns>
        </member>
        <member name="M:Swifter.Data.Database.ExecuteScalar``1(System.String,System.Data.Common.DbTransaction,System.Int32,System.Data.CommandType)">
            <summary>
            执行一条查询语句，并返回指定类型的结果。
            如果返回值类型等于结果集的第一行第一列的值的类型，则返回第一行第一列的值，
            如果返回值类型是一个集合，则返回所有行的数据。
            否则返回第一行的数据对象。
            </summary>
            <typeparam name="T">返回值类型</typeparam>
            <param name="sql">SQL 代码</param>
            <param name="dbTransaction">事务</param>
            <param name="commandTimeout">超时时间（秒）</param>
            <param name="commandType">命令类型</param>
            <returns>返回指定类型的值</returns>
        </member>
        <member name="M:Swifter.Data.Database.ExecuteNonQuery``1(System.String,``0,System.Data.Common.DbTransaction,System.Int32,System.Data.CommandType)">
            <summary>
            执行一条非查询语句。
            </summary>
            <typeparam name="T">参数类型</typeparam>
            <param name="sql">SQL 代码</param>
            <param name="parameters">参数</param>
            <param name="dbTransaction">事务</param>
            <param name="commandTimeout">超时时间（秒）</param>
            <param name="commandType">命令类型</param>
            <returns>返回受影响行数</returns>
        </member>
        <member name="M:Swifter.Data.Database.ExecuteNonQuery(System.String,System.Data.Common.DbTransaction,System.Int32,System.Data.CommandType)">
            <summary>
            执行一条非查询语句。
            </summary>
            <param name="sql">SQL 代码</param>
            <param name="dbTransaction">事务</param>
            <param name="commandTimeout">超时时间（秒）</param>
            <param name="commandType">命令类型</param>
            <returns>返回受影响行数</returns>
        </member>
        <member name="M:Swifter.Data.Database.ExecuteReaderAsync``1(System.String,``0,System.Action{System.Exception,System.Data.Common.DbDataReader},System.Data.Common.DbTransaction,System.Int32,System.Data.CommandType)">
            <summary>
            异步执行一条查询语句。
            </summary>
            <typeparam name="T">参数类型</typeparam>
            <param name="sql">SQL 语句</param>
            <param name="parameters">参数</param>
            <param name="asyncCallback">回调函数</param>
            <param name="dbTransaction">事务</param>
            <param name="commandTimeout">超时时间（秒）</param>
            <param name="commandType">命令类型</param>
        </member>
        <member name="M:Swifter.Data.Database.ExecuteReaderAsync(System.String,System.Action{System.Exception,System.Data.Common.DbDataReader},System.Data.Common.DbTransaction,System.Int32,System.Data.CommandType)">
            <summary>
            异步执行一条查询语句。
            </summary>
            <param name="sql">SQL 语句</param>
            <param name="asyncCallback">回调函数</param>
            <param name="dbTransaction">事务</param>
            <param name="commandTimeout">超时时间（秒）</param>
            <param name="commandType">命令类型</param>
        </member>
        <member name="M:Swifter.Data.Database.ExecuteScalarAsync``2(System.String,``1,System.Action{System.Exception,``0},System.Data.Common.DbTransaction,System.Int32,System.Data.CommandType)">
            <summary>
            执行一条查询语句，并返回指定类型的结果。
            如果返回值类型等于结果集的第一行第一列的值的类型，则返回第一行第一列的值，
            如果返回值类型是一个集合，则返回所有行的数据。
            否则返回第一行的数据对象。
            </summary>
            <typeparam name="T">返回值类型</typeparam>
            <typeparam name="TParameters">参数类型</typeparam>
            <param name="sql">SQL 语句</param>
            <param name="parameters">参数</param>
            <param name="asyncCallback">回调函数</param>
            <param name="dbTransaction">事务</param>
            <param name="commandTimeout">超时时间（秒）</param>
            <param name="commandType">命令类型</param>
        </member>
        <member name="M:Swifter.Data.Database.ExecuteScalarAsync``1(System.String,System.Object,System.Action{System.Exception,``0},System.Data.Common.DbTransaction,System.Int32,System.Data.CommandType)">
            <summary>
            异步执行一条查询语句，并返回指定类型的结果。
            如果返回值类型等于结果集的第一行第一列的值的类型，则返回第一行第一列的值，
            如果返回值类型是一个集合，则返回所有行的数据。
            否则返回第一行的数据对象。
            </summary>
            <typeparam name="T">返回值类型</typeparam>
            <param name="sql">SQL 语句</param>
            <param name="parameters">参数</param>
            <param name="asyncCallback">回调函数</param>
            <param name="dbTransaction">事务</param>
            <param name="commandTimeout">超时时间（秒）</param>
            <param name="commandType">命令类型</param>
        </member>
        <member name="M:Swifter.Data.Database.ExecuteScalarAsync``1(System.String,System.Action{System.Exception,``0},System.Data.Common.DbTransaction,System.Int32,System.Data.CommandType)">
            <summary>
            异步执行一条查询语句，并返回指定类型的结果。
            如果返回值类型等于结果集的第一行第一列的值的类型，则返回第一行第一列的值，
            如果返回值类型是一个集合，则返回所有行的数据。
            否则返回第一行的数据对象。
            </summary>
            <typeparam name="T">返回值类型</typeparam>
            <param name="sql">SQL 语句</param>
            <param name="asyncCallback">回调函数</param>
            <param name="dbTransaction">事务</param>
            <param name="commandTimeout">超时时间（秒）</param>
            <param name="commandType">命令类型</param>
        </member>
        <member name="M:Swifter.Data.Database.ExecuteNonQueryAsync``1(System.String,``0,System.Action{System.Exception,System.Int32},System.Data.Common.DbTransaction,System.Int32,System.Data.CommandType)">
            <summary>
            异步执行一条非查询语句。
            </summary>
            <typeparam name="T">参数类型</typeparam>
            <param name="sql">SQL 代码</param>
            <param name="parameters">参数</param>
            <param name="asyncCallback">回调函数</param>
            <param name="dbTransaction">事务</param>
            <param name="commandTimeout">超时时间（秒）</param>
            <param name="commandType">命令类型</param>
            <returns>返回受影响行数</returns>
        </member>
        <member name="M:Swifter.Data.Database.ExecuteNonQueryAsync(System.String,System.Action{System.Exception,System.Int32},System.Data.Common.DbTransaction,System.Int32,System.Data.CommandType)">
            <summary>
            异步执行一条非查询语句。
            </summary>
            <param name="sql">SQL 代码</param>
            <param name="asyncCallback">回调函数</param>
            <param name="dbTransaction">事务</param>
            <param name="commandTimeout">超时时间（秒）</param>
            <param name="commandType">命令类型</param>
            <returns>返回受影响行数</returns>
        </member>
        <member name="T:Swifter.Data.DbHelper">
            <summary>
            提供数据库操作的工具方法
            </summary>
        </member>
        <member name="M:Swifter.Data.DbHelper.CreateConnection(System.String)">
            <summary>
            创建数据库连接。
            </summary>
            <param name="providerName">数据库连接的包名</param>
            <returns>返回一个数据库连接</returns>
        </member>
        <member name="M:Swifter.Data.DbHelper.GetProviderFactory(System.String)">
            <summary>
            获取数据库工厂实例。
            </summary>
            <param name="providerName">数据库工厂名称</param>
            <returns>返沪数据库工厂实例</returns>
        </member>
        <member name="M:Swifter.Data.DbHelper.CreateConnection(System.String,System.String)">
            <summary>
            创建数据库连接。
            </summary>
            <param name="providerName">数据库连接的包名</param>
            <param name="connectionString">连接字符串</param>
            <returns>返回一个数据库连接</returns>
        </member>
        <member name="M:Swifter.Data.DbHelper.SetParameters``1(System.Data.Common.DbCommand,``0)">
            <summary>
            将指定对象作为参数集合传递给 T-SQL 命令。
            </summary>
            <typeparam name="T">参数集合类型</typeparam>
            <param name="dbCommand">T-SQL 命令</param>
            <param name="obj">参数集合</param>
        </member>
    </members>
</doc>
